!SESSION 2023-03-14 23:22:31.218 -----------------------------------------------
eclipse.buildId=4.26.0.20221201-1200
java.version=17.0.6
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=vi_VN
Framework arguments:  -product org.eclipse.epp.package.jee.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.jee.product

This is a continuation of log file C:\Users\nthtp\eclipse-workspace\.metadata\.bak_0.log
Created Time: 2023-03-14 23:37:20.431

!ENTRY org.eclipse.jdt.ui 4 2 2023-03-14 23:37:20.431
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3063)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:561)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2023-03-14 23:37:20.443
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3063)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:561)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2023-03-14 23:37:21.360
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package View;

import java.awt.EventQueue;

import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.border.EmptyBorder;

import Model.QLSV_model;
import Model.SinhVien;
import Model.Tinh;

import javax.swing.JMenuBar;
import javax.swing.JMenu;
import javax.swing.JMenuItem;
import javax.swing.JSeparator;
import javax.swing.JLabel;
import java.awt.Font;
import javax.swing.JScrollPane;
import javax.swing.JComboBox;
import javax.swing.JTextField;
import javax.swing.ButtonGroup;
import javax.swing.JButton;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

import Controller.Listener;

import javax.swing.JRadioButton;
import java.awt.event.ActionListener;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.awt.event.ActionEvent;

public class view_QLSV extends JFrame {

	private JPanel contentPane;
	public QLSV_model model;
	private JTextField textField_maSV;
	private JTable table;
	public JTextField textField_maSVUnder;
	public JTextField textField_hoTen;
	public JTextField textField_ngaySinh;
	public JTextField textField_diem1;
	public JTextField textField_diem2;
	public JTextField textField_diem3;
	public JComboBox comboBox_queQuanUnder;
	private JComboBox comboBox_queQuan;
	public ButtonGroup btngr;
	public JRadioButton rdbtn_nam;
	public JRadioButton rdbtn_nu;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					view_QLSV frame = new view_QLSV();
					frame.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the frame.
	 */
	public view_QLSV() {
		model = new QLSV_model();
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setBounds(100, 100, 757, 759);
		setTitle("Chương trình quản lý sinh viên của Trần Phúc Khánh");
		
		JMenuBar menuBar = new JMenuBar();
		setJMenuBar(menuBar);
		
		JMenu menu_file = new JMenu("File");
		menuBar.add(menu_file);
		
		JMenuItem menuItem_open = new JMenuItem("Open");
		menu_file.add(menuItem_open);
		
		JMenuItem mntmClose = new JMenuItem("Close");
		menu_file.add(mntmClose);
		
		JSeparator separator = new JSeparator();
		menu_file.add(separator);
		
		JMenuItem menuItem_exit = new JMenuItem("Exit");
		menu_file.add(menuItem_exit);
		
		JMenu menu_about = new JMenu("About");
		menuBar.add(menu_about);
		
		JMenuItem menuItem_about_me = new JMenuItem("About me");
		menu_about.add(menuItem_about_me);
		contentPane = new JPanel();
		contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));

		setContentPane(contentPane);
		contentPane.setLayout(null);
		
		JLabel label_queQuan = new JLabel("Quê quán");
		label_queQuan.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_queQuan.setBounds(47, 40, 86, 42);
		contentPane.add(label_queQuan);
		
		comboBox_queQuan = new JComboBox();
		ArrayList<Tinh> listTinh = Tinh.getDS_Tinh();
		comboBox_queQuan.addItem("");
		for (Tinh tinh : listTinh) {
			comboBox_queQuan.addItem(tinh.getTenTinh());
		}
		comboBox_queQuan.setFont(new Font("Tahoma", Font.PLAIN, 15));
		comboBox_queQuan.setBounds(140, 40, 102, 43);
		contentPane.add(comboBox_queQuan);
		
		JLabel label_maSinhVien = new JLabel("Mã sinh viên");
		label_maSinhVien.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_maSinhVien.setBounds(306, 40, 110, 42);
		contentPane.add(label_maSinhVien);
		
		textField_maSV = new JTextField();
		textField_maSV.setBounds(426, 40, 102, 43);
		contentPane.add(textField_maSV);
		textField_maSV.setColumns(10);
		
		JButton button_timKiem = new JButton("Tìm kiếm");
		button_timKiem.setFont(new Font("Tahoma", Font.PLAIN, 20));
		button_timKiem.setBounds(591, 40, 127, 43);
		contentPane.add(button_timKiem);
		
		JSeparator separator_1 = new JSeparator();
		separator_1.setBounds(10, 102, 728, 2);
		contentPane.add(separator_1);
		
		JLabel label_danhSachSV = new JLabel("Danh sách SV");
		label_danhSachSV.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_danhSachSV.setBounds(26, 127, 122, 42);
		contentPane.add(label_danhSachSV);
		
		table = new JTable();
		table.setFont(new Font("Tahoma", Font.PLAIN, 10));
		table.setModel(new DefaultTableModel(
			new Object[][] {
			},
			new String[] {
				"Mã SV", "Họ tên", "Quê quán", "Ngày sinh", "Giới tính", "Điểm môn 1", "Điểm môn 2", "Điểm môn 3"
			}
		));
		
		JScrollPane scrollPane = new JScrollPane(table);
		scrollPane.setBounds(26, 179, 696, 92);
		contentPane.add(scrollPane);
		
		JLabel label_thongTinSV = new JLabel("Thông tin SV");
		label_thongTinSV.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_thongTinSV.setBounds(26, 303, 115, 42);
		contentPane.add(label_thongTinSV);
		
		JSeparator separator_2 = new JSeparator();
		separator_2.setBounds(10, 291, 728, 2);
		contentPane.add(separator_2);
		
		JLabel label_maSinhVienUnder = new JLabel("Mã sinh viên");
		label_maSinhVienUnder.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_maSinhVienUnder.setBounds(26, 355, 110, 42);
		contentPane.add(label_maSinhVienUnder);
		
		JLabel label_hoTenUnder = new JLabel("Họ tên");
		label_hoTenUnder.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_hoTenUnder.setBounds(26, 422, 110, 42);
		contentPane.add(label_hoTenUnder);
		
		JLabel label_queQuanUnder = new JLabel("Quê quán");
		label_queQuanUnder.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_queQuanUnder.setBounds(26, 489, 110, 42);
		contentPane.add(label_queQuanUnder);
		
		JLabel label_ngaySinhUnder = new JLabel("Ngày sinh");
		label_ngaySinhUnder.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_ngaySinhUnder.setBounds(26, 556, 110, 42);
		contentPane.add(label_ngaySinhUnder);
		
		textField_maSVUnder = new JTextField();
		textField_maSVUnder.setColumns(10);
		textField_maSVUnder.setBounds(161, 355, 170, 43);
		contentPane.add(textField_maSVUnder);
		
		textField_hoTen = new JTextField();
		textField_hoTen.setColumns(10);
		textField_hoTen.setBounds(161, 422, 170, 43);
		contentPane.add(textField_hoTen);
		
		textField_ngaySinh = new JTextField();
		textField_ngaySinh.setColumns(10);
		textField_ngaySinh.setBounds(161, 556, 170, 43);
		contentPane.add(textField_ngaySinh);
		
		JLabel label_gioiTinhUnder = new JLabel("Giới tính");
		label_gioiTinhUnder.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_gioiTinhUnder.setBounds(426, 355, 110, 42);
		contentPane.add(label_gioiTinhUnder);
		
		JLabel label_diem1Under = new JLabel("Điểm 1");
		label_diem1Under.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_diem1Under.setBounds(426, 422, 110, 42);
		contentPane.add(label_diem1Under);
		
		JLabel label_diem2Under = new JLabel("Điểm 2");
		label_diem2Under.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_diem2Under.setBounds(426, 489, 110, 42);
		contentPane.add(label_diem2Under);
		
		JLabel label_diem3Under = new JLabel("Điểm 3");
		label_diem3Under.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_diem3Under.setBounds(426, 556, 110, 42);
		contentPane.add(label_diem3Under);
		
		textField_diem1 = new JTextField();
		textField_diem1.setColumns(10);
		textField_diem1.setBounds(562, 422, 170, 43);
		contentPane.add(textField_diem1);
		
		textField_diem2 = new JTextField();
		textField_diem2.setColumns(10);
		textField_diem2.setBounds(562, 489, 170, 43);
		contentPane.add(textField_diem2);
		
		textField_diem3 = new JTextField();
		textField_diem3.setColumns(10);
		textField_diem3.setBounds(562, 556, 170, 43);
		contentPane.add(textField_diem3);
		
		rdbtn_nam = new JRadioButton("Nam");
		rdbtn_nam.setFont(new Font("Tahoma", Font.PLAIN, 20));
		rdbtn_nam.setBounds(562, 355, 71, 42);
		contentPane.add(rdbtn_nam);
		rdbtn_nam.setSelected(true);
		
		rdbtn_nu = new JRadioButton("Nữ");
		rdbtn_nu.setFont(new Font("Tahoma", Font.PLAIN, 20));
		rdbtn_nu.setBounds(647, 355, 71, 42);
		contentPane.add(rdbtn_nu);
		
		btngr = new ButtonGroup();
		btngr.add(rdbtn_nam);
		btngr.add(rdbtn_nu);
		
		ActionListener listener = new Listener(this);
		
		JButton btn_them = new JButton("Thêm");
		btn_them.addActionListener(listener);
		btn_them.setFont(new Font("Tahoma", Font.PLAIN, 20));
		btn_them.setBounds(21, 633, 127, 43);
		contentPane.add(btn_them);
		
		JButton btn_xoa = new JButton("Xóa");
		btn_xoa.addActionListener(listener);
		btn_xoa.setFont(new Font("Tahoma", Font.PLAIN, 20));
		btn_xoa.setBounds(595, 633, 127, 43);
		contentPane.add(btn_xoa);
		
		JButton btn_capNhat = new JButton("Cập nhật");
		btn_capNhat.addActionListener(listener);
		btn_capNhat.setFont(new Font("Tahoma", Font.PLAIN, 20));
		btn_capNhat.setBounds(215, 633, 127, 43);
		contentPane.add(btn_capNhat);
		
		JButton btn_luu = new JButton("Lưu");
		btn_luu.addActionListener(listener);
		btn_luu.setFont(new Font("Tahoma", Font.PLAIN, 20));
		btn_luu.setBounds(409, 633, 127, 43);
		contentPane.add(btn_luu);
		
		JSeparator separator_1_1 = new JSeparator();
		separator_1_1.setBounds(10, 615, 728, 2);
		contentPane.add(separator_1_1);
		
		comboBox_queQuanUnder = new JComboBox();
		comboBox_queQuanUnder.addItem("");
		for (Tinh tinh : listTinh) {
			comboBox_queQuanUnder.addItem(tinh.getTenTinh());
		}
		comboBox_queQuanUnder.setBounds(161, 488, 170, 43);
		contentPane.add(comboBox_queQuanUnder);
	}

	public void xoaForm() {
		textField_maSV.setText("");
		textField_maSVUnder.setText("");
		textField_hoTen.setText("");
		textField_ngaySinh.setText("");
		textField_diem1.setText("");
		textField_diem2.setText("");
		textField_diem3.setText("");
		comboBox_queQuanUnder.setSelectedIndex(-1);
		btngr.clearSelection();
	}

	public void themHoacCapNhatSV(SinhVien sv) {
		DefaultTableModel defaultTableModel = (DefaultTableModel) table.getModel();
		if (!this.model.kiemTraTonTai(sv)) {
			this.model.addSV(sv);
			defaultTableModel.addRow(new Object[]{
													sv.getMaSinhVien()+"", 
													sv.getTenSinhVien(),
													sv.getQueQuan().getTenTinh(),
													sv.getNgaySinh().getDate()+"/"+(sv.getNgaySinh().getMonth() + 1)+"/"+(sv.getNgaySinh().getYear()+1900),
													sv.isGioiTinh() ? "Nam" : "Nữ",
													sv.getDiemMon1()+"",
													sv.getDiemMon2()+"",
													sv.getDiemMon3()+""});
		}
		else {
			this.model.update(sv);
			int soDong = defaultTableModel.getRowCount();
			for (int i = 0; i < soDong; i++) {
				String id = defaultTableModel.getValueAt(soDong, 0)+"";
				if (id.equals(sv.getMaSinhVien()+"")) {
					defaultTableModel.getValueAt(sv.getMaSinhVien()+"",i ,0);
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
				}
			}
		}
	}

	public void hienThiThongTinSinhVienDangDuocChon() {
		DefaultTableModel defaultTableModel = (DefaultTableModel) table.getModel();
		int row = table.getSelectedRow();
		
		int maSV = Integer.valueOf(defaultTableModel.getValueAt(row, 0)+"");
		String tenSV = defaultTableModel.getValueAt(row, 1)+"";
		Tinh tinh = Tinh.getTinhByTen(defaultTableModel.getValueAt(row, 2)+"");
		String ngaySinh = defaultTableModel.getValueAt(row, 3)+"";
		String textGioiTinh = defaultTableModel.getValueAt(row, 4)+"";
		boolean gioiTinh = textGioiTinh.equals("Nam");
		float diemMon1 = Float.valueOf(defaultTableModel.getValueAt(row, 5)+"");
		float diemMon2 = Float.valueOf(defaultTableModel.getValueAt(row, 6)+"");
		float diemMon3 = Float.valueOf(defaultTableModel.getValueAt(row, 7)+"");
		
		this.textField_maSVUnder.setText(maSV+"");
		this.textField_hoTen.setText(tenSV+"");
		this.comboBox_queQuan.setSelectedItem(tinh.getTenTinh()+"");
		this.textField_ngaySinh.setText(ngaySinh+"");
		if (gioiTinh) {
			rdbtn_nam.setSelected(true);
		} else {
			rdbtn_nu.setSelected(false);
		}
		this.textField_diem1.setText(diemMon1+"");
		this.textField_diem2.setText(diemMon2+"");
		this.textField_diem3.setText(diemMon3+"");
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3063)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:561)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2023-03-14 23:37:21.362
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3063)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:561)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2023-03-14 23:37:21.362
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3063)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:561)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2023-03-14 23:37:21.440
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package View;

import java.awt.EventQueue;

import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.border.EmptyBorder;

import Model.QLSV_model;
import Model.SinhVien;
import Model.Tinh;

import javax.swing.JMenuBar;
import javax.swing.JMenu;
import javax.swing.JMenuItem;
import javax.swing.JSeparator;
import javax.swing.JLabel;
import java.awt.Font;
import javax.swing.JScrollPane;
import javax.swing.JComboBox;
import javax.swing.JTextField;
import javax.swing.ButtonGroup;
import javax.swing.JButton;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

import Controller.Listener;

import javax.swing.JRadioButton;
import java.awt.event.ActionListener;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.awt.event.ActionEvent;

public class view_QLSV extends JFrame {

	private JPanel contentPane;
	public QLSV_model model;
	private JTextField textField_maSV;
	private JTable table;
	public JTextField textField_maSVUnder;
	public JTextField textField_hoTen;
	public JTextField textField_ngaySinh;
	public JTextField textField_diem1;
	public JTextField textField_diem2;
	public JTextField textField_diem3;
	public JComboBox comboBox_queQuanUnder;
	private JComboBox comboBox_queQuan;
	public ButtonGroup btngr;
	public JRadioButton rdbtn_nam;
	public JRadioButton rdbtn_nu;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					view_QLSV frame = new view_QLSV();
					frame.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the frame.
	 */
	public view_QLSV() {
		model = new QLSV_model();
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setBounds(100, 100, 757, 759);
		setTitle("Chương trình quản lý sinh viên của Trần Phúc Khánh");
		
		JMenuBar menuBar = new JMenuBar();
		setJMenuBar(menuBar);
		
		JMenu menu_file = new JMenu("File");
		menuBar.add(menu_file);
		
		JMenuItem menuItem_open = new JMenuItem("Open");
		menu_file.add(menuItem_open);
		
		JMenuItem mntmClose = new JMenuItem("Close");
		menu_file.add(mntmClose);
		
		JSeparator separator = new JSeparator();
		menu_file.add(separator);
		
		JMenuItem menuItem_exit = new JMenuItem("Exit");
		menu_file.add(menuItem_exit);
		
		JMenu menu_about = new JMenu("About");
		menuBar.add(menu_about);
		
		JMenuItem menuItem_about_me = new JMenuItem("About me");
		menu_about.add(menuItem_about_me);
		contentPane = new JPanel();
		contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));

		setContentPane(contentPane);
		contentPane.setLayout(null);
		
		JLabel label_queQuan = new JLabel("Quê quán");
		label_queQuan.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_queQuan.setBounds(47, 40, 86, 42);
		contentPane.add(label_queQuan);
		
		comboBox_queQuan = new JComboBox();
		ArrayList<Tinh> listTinh = Tinh.getDS_Tinh();
		comboBox_queQuan.addItem("");
		for (Tinh tinh : listTinh) {
			comboBox_queQuan.addItem(tinh.getTenTinh());
		}
		comboBox_queQuan.setFont(new Font("Tahoma", Font.PLAIN, 15));
		comboBox_queQuan.setBounds(140, 40, 102, 43);
		contentPane.add(comboBox_queQuan);
		
		JLabel label_maSinhVien = new JLabel("Mã sinh viên");
		label_maSinhVien.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_maSinhVien.setBounds(306, 40, 110, 42);
		contentPane.add(label_maSinhVien);
		
		textField_maSV = new JTextField();
		textField_maSV.setBounds(426, 40, 102, 43);
		contentPane.add(textField_maSV);
		textField_maSV.setColumns(10);
		
		JButton button_timKiem = new JButton("Tìm kiếm");
		button_timKiem.setFont(new Font("Tahoma", Font.PLAIN, 20));
		button_timKiem.setBounds(591, 40, 127, 43);
		contentPane.add(button_timKiem);
		
		JSeparator separator_1 = new JSeparator();
		separator_1.setBounds(10, 102, 728, 2);
		contentPane.add(separator_1);
		
		JLabel label_danhSachSV = new JLabel("Danh sách SV");
		label_danhSachSV.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_danhSachSV.setBounds(26, 127, 122, 42);
		contentPane.add(label_danhSachSV);
		
		table = new JTable();
		table.setFont(new Font("Tahoma", Font.PLAIN, 10));
		table.setModel(new DefaultTableModel(
			new Object[][] {
			},
			new String[] {
				"Mã SV", "Họ tên", "Quê quán", "Ngày sinh", "Giới tính", "Điểm môn 1", "Điểm môn 2", "Điểm môn 3"
			}
		));
		
		JScrollPane scrollPane = new JScrollPane(table);
		scrollPane.setBounds(26, 179, 696, 92);
		contentPane.add(scrollPane);
		
		JLabel label_thongTinSV = new JLabel("Thông tin SV");
		label_thongTinSV.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_thongTinSV.setBounds(26, 303, 115, 42);
		contentPane.add(label_thongTinSV);
		
		JSeparator separator_2 = new JSeparator();
		separator_2.setBounds(10, 291, 728, 2);
		contentPane.add(separator_2);
		
		JLabel label_maSinhVienUnder = new JLabel("Mã sinh viên");
		label_maSinhVienUnder.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_maSinhVienUnder.setBounds(26, 355, 110, 42);
		contentPane.add(label_maSinhVienUnder);
		
		JLabel label_hoTenUnder = new JLabel("Họ tên");
		label_hoTenUnder.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_hoTenUnder.setBounds(26, 422, 110, 42);
		contentPane.add(label_hoTenUnder);
		
		JLabel label_queQuanUnder = new JLabel("Quê quán");
		label_queQuanUnder.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_queQuanUnder.setBounds(26, 489, 110, 42);
		contentPane.add(label_queQuanUnder);
		
		JLabel label_ngaySinhUnder = new JLabel("Ngày sinh");
		label_ngaySinhUnder.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_ngaySinhUnder.setBounds(26, 556, 110, 42);
		contentPane.add(label_ngaySinhUnder);
		
		textField_maSVUnder = new JTextField();
		textField_maSVUnder.setColumns(10);
		textField_maSVUnder.setBounds(161, 355, 170, 43);
		contentPane.add(textField_maSVUnder);
		
		textField_hoTen = new JTextField();
		textField_hoTen.setColumns(10);
		textField_hoTen.setBounds(161, 422, 170, 43);
		contentPane.add(textField_hoTen);
		
		textField_ngaySinh = new JTextField();
		textField_ngaySinh.setColumns(10);
		textField_ngaySinh.setBounds(161, 556, 170, 43);
		contentPane.add(textField_ngaySinh);
		
		JLabel label_gioiTinhUnder = new JLabel("Giới tính");
		label_gioiTinhUnder.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_gioiTinhUnder.setBounds(426, 355, 110, 42);
		contentPane.add(label_gioiTinhUnder);
		
		JLabel label_diem1Under = new JLabel("Điểm 1");
		label_diem1Under.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_diem1Under.setBounds(426, 422, 110, 42);
		contentPane.add(label_diem1Under);
		
		JLabel label_diem2Under = new JLabel("Điểm 2");
		label_diem2Under.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_diem2Under.setBounds(426, 489, 110, 42);
		contentPane.add(label_diem2Under);
		
		JLabel label_diem3Under = new JLabel("Điểm 3");
		label_diem3Under.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_diem3Under.setBounds(426, 556, 110, 42);
		contentPane.add(label_diem3Under);
		
		textField_diem1 = new JTextField();
		textField_diem1.setColumns(10);
		textField_diem1.setBounds(562, 422, 170, 43);
		contentPane.add(textField_diem1);
		
		textField_diem2 = new JTextField();
		textField_diem2.setColumns(10);
		textField_diem2.setBounds(562, 489, 170, 43);
		contentPane.add(textField_diem2);
		
		textField_diem3 = new JTextField();
		textField_diem3.setColumns(10);
		textField_diem3.setBounds(562, 556, 170, 43);
		contentPane.add(textField_diem3);
		
		rdbtn_nam = new JRadioButton("Nam");
		rdbtn_nam.setFont(new Font("Tahoma", Font.PLAIN, 20));
		rdbtn_nam.setBounds(562, 355, 71, 42);
		contentPane.add(rdbtn_nam);
		rdbtn_nam.setSelected(true);
		
		rdbtn_nu = new JRadioButton("Nữ");
		rdbtn_nu.setFont(new Font("Tahoma", Font.PLAIN, 20));
		rdbtn_nu.setBounds(647, 355, 71, 42);
		contentPane.add(rdbtn_nu);
		
		btngr = new ButtonGroup();
		btngr.add(rdbtn_nam);
		btngr.add(rdbtn_nu);
		
		ActionListener listener = new Listener(this);
		
		JButton btn_them = new JButton("Thêm");
		btn_them.addActionListener(listener);
		btn_them.setFont(new Font("Tahoma", Font.PLAIN, 20));
		btn_them.setBounds(21, 633, 127, 43);
		contentPane.add(btn_them);
		
		JButton btn_xoa = new JButton("Xóa");
		btn_xoa.addActionListener(listener);
		btn_xoa.setFont(new Font("Tahoma", Font.PLAIN, 20));
		btn_xoa.setBounds(595, 633, 127, 43);
		contentPane.add(btn_xoa);
		
		JButton btn_capNhat = new JButton("Cập nhật");
		btn_capNhat.addActionListener(listener);
		btn_capNhat.setFont(new Font("Tahoma", Font.PLAIN, 20));
		btn_capNhat.setBounds(215, 633, 127, 43);
		contentPane.add(btn_capNhat);
		
		JButton btn_luu = new JButton("Lưu");
		btn_luu.addActionListener(listener);
		btn_luu.setFont(new Font("Tahoma", Font.PLAIN, 20));
		btn_luu.setBounds(409, 633, 127, 43);
		contentPane.add(btn_luu);
		
		JSeparator separator_1_1 = new JSeparator();
		separator_1_1.setBounds(10, 615, 728, 2);
		contentPane.add(separator_1_1);
		
		comboBox_queQuanUnder = new JComboBox();
		comboBox_queQuanUnder.addItem("");
		for (Tinh tinh : listTinh) {
			comboBox_queQuanUnder.addItem(tinh.getTenTinh());
		}
		comboBox_queQuanUnder.setBounds(161, 488, 170, 43);
		contentPane.add(comboBox_queQuanUnder);
	}

	public void xoaForm() {
		textField_maSV.setText("");
		textField_maSVUnder.setText("");
		textField_hoTen.setText("");
		textField_ngaySinh.setText("");
		textField_diem1.setText("");
		textField_diem2.setText("");
		textField_diem3.setText("");
		comboBox_queQuanUnder.setSelectedIndex(-1);
		btngr.clearSelection();
	}

	public void themHoacCapNhatSV(SinhVien sv) {
		DefaultTableModel defaultTableModel = (DefaultTableModel) table.getModel();
		if (!this.model.kiemTraTonTai(sv)) {
			this.model.addSV(sv);
			defaultTableModel.addRow(new Object[]{
													sv.getMaSinhVien()+"", 
													sv.getTenSinhVien(),
													sv.getQueQuan().getTenTinh(),
													sv.getNgaySinh().getDate()+"/"+(sv.getNgaySinh().getMonth() + 1)+"/"+(sv.getNgaySinh().getYear()+1900),
													sv.isGioiTinh() ? "Nam" : "Nữ",
													sv.getDiemMon1()+"",
													sv.getDiemMon2()+"",
													sv.getDiemMon3()+""});
		}
		else {
			this.model.update(sv);
			int soDong = defaultTableModel.getRowCount();
			for (int i = 0; i < soDong; i++) {
				String id = defaultTableModel.getValueAt(soDong, 0)+"";
				if (id.equals(sv.getMaSinhVien()+"")) {
					defaultTableModel.getValueAt(sv.getMaSinhVien()+"",i ,0);
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
				}
			}
		}
	}

	public void hienThiThongTinSinhVienDangDuocChon() {
		DefaultTableModel defaultTableModel = (DefaultTableModel) table.getModel();
		int row = table.getSelectedRow();
		
		int maSV = Integer.valueOf(defaultTableModel.getValueAt(row, 0)+"");
		String tenSV = defaultTableModel.getValueAt(row, 1)+"";
		Tinh tinh = Tinh.getTinhByTen(defaultTableModel.getValueAt(row, 2)+"");
		String ngaySinh = defaultTableModel.getValueAt(row, 3)+"";
		String textGioiTinh = defaultTableModel.getValueAt(row, 4)+"";
		boolean gioiTinh = textGioiTinh.equals("Nam");
		float diemMon1 = Float.valueOf(defaultTableModel.getValueAt(row, 5)+"");
		float diemMon2 = Float.valueOf(defaultTableModel.getValueAt(row, 6)+"");
		float diemMon3 = Float.valueOf(defaultTableModel.getValueAt(row, 7)+"");
		
		this.textField_maSVUnder.setText(maSV+"");
		this.textField_hoTen.setText(tenSV+"");
		this.comboBox_queQuan.setSelectedItem(tinh.getTenTinh()+"");
		this.textField_ngaySinh.setText(ngaySinh+"");
		if (gioiTinh) {
			rdbtn_nam.setSelected(true);
		} else {
			rdbtn_nu.setSelected(false);
		}
		this.textField_diem1.setText(diemMon1+"");
		this.textField_diem2.setText(diemMon2+"");
		this.textField_diem3.setText(diemMon3+"");
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3063)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-03-14 23:37:21.442
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3063)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-03-14 23:37:21.443
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3063)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2023-03-14 23:37:29.444
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package View;

import java.awt.EventQueue;

import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.border.EmptyBorder;

import Model.QLSV_model;
import Model.SinhVien;
import Model.Tinh;

import javax.swing.JMenuBar;
import javax.swing.JMenu;
import javax.swing.JMenuItem;
import javax.swing.JSeparator;
import javax.swing.JLabel;
import java.awt.Font;
import javax.swing.JScrollPane;
import javax.swing.JComboBox;
import javax.swing.JTextField;
import javax.swing.ButtonGroup;
import javax.swing.JButton;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

import Controller.Listener;

import javax.swing.JRadioButton;
import java.awt.event.ActionListener;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.awt.event.ActionEvent;

public class view_QLSV extends JFrame {

	private JPanel contentPane;
	public QLSV_model model;
	private JTextField textField_maSV;
	private JTable table;
	public JTextField textField_maSVUnder;
	public JTextField textField_hoTen;
	public JTextField textField_ngaySinh;
	public JTextField textField_diem1;
	public JTextField textField_diem2;
	public JTextField textField_diem3;
	public JComboBox comboBox_queQuanUnder;
	private JComboBox comboBox_queQuan;
	public ButtonGroup btngr;
	public JRadioButton rdbtn_nam;
	public JRadioButton rdbtn_nu;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					view_QLSV frame = new view_QLSV();
					frame.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the frame.
	 */
	public view_QLSV() {
		model = new QLSV_model();
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setBounds(100, 100, 757, 759);
		setTitle("Chương trình quản lý sinh viên của Trần Phúc Khánh");
		
		JMenuBar menuBar = new JMenuBar();
		setJMenuBar(menuBar);
		
		JMenu menu_file = new JMenu("File");
		menuBar.add(menu_file);
		
		JMenuItem menuItem_open = new JMenuItem("Open");
		menu_file.add(menuItem_open);
		
		JMenuItem mntmClose = new JMenuItem("Close");
		menu_file.add(mntmClose);
		
		JSeparator separator = new JSeparator();
		menu_file.add(separator);
		
		JMenuItem menuItem_exit = new JMenuItem("Exit");
		menu_file.add(menuItem_exit);
		
		JMenu menu_about = new JMenu("About");
		menuBar.add(menu_about);
		
		JMenuItem menuItem_about_me = new JMenuItem("About me");
		menu_about.add(menuItem_about_me);
		contentPane = new JPanel();
		contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));

		setContentPane(contentPane);
		contentPane.setLayout(null);
		
		JLabel label_queQuan = new JLabel("Quê quán");
		label_queQuan.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_queQuan.setBounds(47, 40, 86, 42);
		contentPane.add(label_queQuan);
		
		comboBox_queQuan = new JComboBox();
		ArrayList<Tinh> listTinh = Tinh.getDS_Tinh();
		comboBox_queQuan.addItem("");
		for (Tinh tinh : listTinh) {
			comboBox_queQuan.addItem(tinh.getTenTinh());
		}
		comboBox_queQuan.setFont(new Font("Tahoma", Font.PLAIN, 15));
		comboBox_queQuan.setBounds(140, 40, 102, 43);
		contentPane.add(comboBox_queQuan);
		
		JLabel label_maSinhVien = new JLabel("Mã sinh viên");
		label_maSinhVien.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_maSinhVien.setBounds(306, 40, 110, 42);
		contentPane.add(label_maSinhVien);
		
		textField_maSV = new JTextField();
		textField_maSV.setBounds(426, 40, 102, 43);
		contentPane.add(textField_maSV);
		textField_maSV.setColumns(10);
		
		JButton button_timKiem = new JButton("Tìm kiếm");
		button_timKiem.setFont(new Font("Tahoma", Font.PLAIN, 20));
		button_timKiem.setBounds(591, 40, 127, 43);
		contentPane.add(button_timKiem);
		
		JSeparator separator_1 = new JSeparator();
		separator_1.setBounds(10, 102, 728, 2);
		contentPane.add(separator_1);
		
		JLabel label_danhSachSV = new JLabel("Danh sách SV");
		label_danhSachSV.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_danhSachSV.setBounds(26, 127, 122, 42);
		contentPane.add(label_danhSachSV);
		
		table = new JTable();
		table.setFont(new Font("Tahoma", Font.PLAIN, 10));
		table.setModel(new DefaultTableModel(
			new Object[][] {
			},
			new String[] {
				"Mã SV", "Họ tên", "Quê quán", "Ngày sinh", "Giới tính", "Điểm môn 1", "Điểm môn 2", "Điểm môn 3"
			}
		));
		
		JScrollPane scrollPane = new JScrollPane(table);
		scrollPane.setBounds(26, 179, 696, 92);
		contentPane.add(scrollPane);
		
		JLabel label_thongTinSV = new JLabel("Thông tin SV");
		label_thongTinSV.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_thongTinSV.setBounds(26, 303, 115, 42);
		contentPane.add(label_thongTinSV);
		
		JSeparator separator_2 = new JSeparator();
		separator_2.setBounds(10, 291, 728, 2);
		contentPane.add(separator_2);
		
		JLabel label_maSinhVienUnder = new JLabel("Mã sinh viên");
		label_maSinhVienUnder.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_maSinhVienUnder.setBounds(26, 355, 110, 42);
		contentPane.add(label_maSinhVienUnder);
		
		JLabel label_hoTenUnder = new JLabel("Họ tên");
		label_hoTenUnder.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_hoTenUnder.setBounds(26, 422, 110, 42);
		contentPane.add(label_hoTenUnder);
		
		JLabel label_queQuanUnder = new JLabel("Quê quán");
		label_queQuanUnder.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_queQuanUnder.setBounds(26, 489, 110, 42);
		contentPane.add(label_queQuanUnder);
		
		JLabel label_ngaySinhUnder = new JLabel("Ngày sinh");
		label_ngaySinhUnder.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_ngaySinhUnder.setBounds(26, 556, 110, 42);
		contentPane.add(label_ngaySinhUnder);
		
		textField_maSVUnder = new JTextField();
		textField_maSVUnder.setColumns(10);
		textField_maSVUnder.setBounds(161, 355, 170, 43);
		contentPane.add(textField_maSVUnder);
		
		textField_hoTen = new JTextField();
		textField_hoTen.setColumns(10);
		textField_hoTen.setBounds(161, 422, 170, 43);
		contentPane.add(textField_hoTen);
		
		textField_ngaySinh = new JTextField();
		textField_ngaySinh.setColumns(10);
		textField_ngaySinh.setBounds(161, 556, 170, 43);
		contentPane.add(textField_ngaySinh);
		
		JLabel label_gioiTinhUnder = new JLabel("Giới tính");
		label_gioiTinhUnder.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_gioiTinhUnder.setBounds(426, 355, 110, 42);
		contentPane.add(label_gioiTinhUnder);
		
		JLabel label_diem1Under = new JLabel("Điểm 1");
		label_diem1Under.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_diem1Under.setBounds(426, 422, 110, 42);
		contentPane.add(label_diem1Under);
		
		JLabel label_diem2Under = new JLabel("Điểm 2");
		label_diem2Under.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_diem2Under.setBounds(426, 489, 110, 42);
		contentPane.add(label_diem2Under);
		
		JLabel label_diem3Under = new JLabel("Điểm 3");
		label_diem3Under.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_diem3Under.setBounds(426, 556, 110, 42);
		contentPane.add(label_diem3Under);
		
		textField_diem1 = new JTextField();
		textField_diem1.setColumns(10);
		textField_diem1.setBounds(562, 422, 170, 43);
		contentPane.add(textField_diem1);
		
		textField_diem2 = new JTextField();
		textField_diem2.setColumns(10);
		textField_diem2.setBounds(562, 489, 170, 43);
		contentPane.add(textField_diem2);
		
		textField_diem3 = new JTextField();
		textField_diem3.setColumns(10);
		textField_diem3.setBounds(562, 556, 170, 43);
		contentPane.add(textField_diem3);
		
		rdbtn_nam = new JRadioButton("Nam");
		rdbtn_nam.setFont(new Font("Tahoma", Font.PLAIN, 20));
		rdbtn_nam.setBounds(562, 355, 71, 42);
		contentPane.add(rdbtn_nam);
		rdbtn_nam.setSelected(true);
		
		rdbtn_nu = new JRadioButton("Nữ");
		rdbtn_nu.setFont(new Font("Tahoma", Font.PLAIN, 20));
		rdbtn_nu.setBounds(647, 355, 71, 42);
		contentPane.add(rdbtn_nu);
		
		btngr = new ButtonGroup();
		btngr.add(rdbtn_nam);
		btngr.add(rdbtn_nu);
		
		ActionListener listener = new Listener(this);
		
		JButton btn_them = new JButton("Thêm");
		btn_them.addActionListener(listener);
		btn_them.setFont(new Font("Tahoma", Font.PLAIN, 20));
		btn_them.setBounds(21, 633, 127, 43);
		contentPane.add(btn_them);
		
		JButton btn_xoa = new JButton("Xóa");
		btn_xoa.addActionListener(listener);
		btn_xoa.setFont(new Font("Tahoma", Font.PLAIN, 20));
		btn_xoa.setBounds(595, 633, 127, 43);
		contentPane.add(btn_xoa);
		
		JButton btn_capNhat = new JButton("Cập nhật");
		btn_capNhat.addActionListener(listener);
		btn_capNhat.setFont(new Font("Tahoma", Font.PLAIN, 20));
		btn_capNhat.setBounds(215, 633, 127, 43);
		contentPane.add(btn_capNhat);
		
		JButton btn_luu = new JButton("Lưu");
		btn_luu.addActionListener(listener);
		btn_luu.setFont(new Font("Tahoma", Font.PLAIN, 20));
		btn_luu.setBounds(409, 633, 127, 43);
		contentPane.add(btn_luu);
		
		JSeparator separator_1_1 = new JSeparator();
		separator_1_1.setBounds(10, 615, 728, 2);
		contentPane.add(separator_1_1);
		
		comboBox_queQuanUnder = new JComboBox();
		comboBox_queQuanUnder.addItem("");
		for (Tinh tinh : listTinh) {
			comboBox_queQuanUnder.addItem(tinh.getTenTinh());
		}
		comboBox_queQuanUnder.setBounds(161, 488, 170, 43);
		contentPane.add(comboBox_queQuanUnder);
	}

	public void xoaForm() {
		textField_maSV.setText("");
		textField_maSVUnder.setText("");
		textField_hoTen.setText("");
		textField_ngaySinh.setText("");
		textField_diem1.setText("");
		textField_diem2.setText("");
		textField_diem3.setText("");
		comboBox_queQuanUnder.setSelectedIndex(-1);
		btngr.clearSelection();
	}

	public void themHoacCapNhatSV(SinhVien sv) {
		DefaultTableModel defaultTableModel = (DefaultTableModel) table.getModel();
		if (!this.model.kiemTraTonTai(sv)) {
			this.model.addSV(sv);
			defaultTableModel.addRow(new Object[]{
													sv.getMaSinhVien()+"", 
													sv.getTenSinhVien(),
													sv.getQueQuan().getTenTinh(),
													sv.getNgaySinh().getDate()+"/"+(sv.getNgaySinh().getMonth() + 1)+"/"+(sv.getNgaySinh().getYear()+1900),
													sv.isGioiTinh() ? "Nam" : "Nữ",
													sv.getDiemMon1()+"",
													sv.getDiemMon2()+"",
													sv.getDiemMon3()+""});
		}
		else {
			this.model.update(sv);
			int soDong = defaultTableModel.getRowCount();
			for (int i = 0; i < soDong; i++) {
				String id = defaultTableModel.getValueAt(soDong, 0)+"";
				if (id.equals(sv.getMaSinhVien()+"")) {
					defaultTableModel.getValueAt(sv.getMaSinhVien()+"",i ,0);
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
				}
			}
		}
	}

	public void hienThiThongTinSinhVienDangDuocChon() {
		DefaultTableModel defaultTableModel = (DefaultTableModel) table.getModel();
		int row = table.getSelectedRow();
		
		int maSV = Integer.valueOf(defaultTableModel.getValueAt(row, 0)+"");
		String tenSV = defaultTableModel.getValueAt(row, 1)+"";
		Tinh tinh = Tinh.getTinhByTen(defaultTableModel.getValueAt(row, 2)+"");
		String ngaySinh = defaultTableModel.getValueAt(row, 3)+"";
		String textGioiTinh = defaultTableModel.getValueAt(row, 4)+"";
		boolean gioiTinh = textGioiTinh.equals("Nam");
		float diemMon1 = Float.valueOf(defaultTableModel.getValueAt(row, 5)+"");
		float diemMon2 = Float.valueOf(defaultTableModel.getValueAt(row, 6)+"");
		float diemMon3 = Float.valueOf(defaultTableModel.getValueAt(row, 7)+"");
		
		this.textField_maSVUnder.setText(maSV+"");
		this.textField_hoTen.setText(tenSV+"");
		this.comboBox_queQuan.setSelectedItem(tinh.getTenTinh()+"");
		this.textField_ngaySinh.setText(ngaySinh+"");
		if (gioiTinh) {
			rdbtn_nam.setSelected(true);
		} else {
			rdbtn_nu.setSelected(false);
		}
		this.textField_diem1.setText(diemMon1+"");
		this.textField_diem2.setText(diemMon2+"");
		this.textField_diem3.setText(diemMon3+"");
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3063)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-03-14 23:37:29.446
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3063)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-03-14 23:37:29.446
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3063)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2023-03-14 23:37:32.988
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package View;

import java.awt.EventQueue;

import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.border.EmptyBorder;

import Model.QLSV_model;
import Model.SinhVien;
import Model.Tinh;

import javax.swing.JMenuBar;
import javax.swing.JMenu;
import javax.swing.JMenuItem;
import javax.swing.JSeparator;
import javax.swing.JLabel;
import java.awt.Font;
import javax.swing.JScrollPane;
import javax.swing.JComboBox;
import javax.swing.JTextField;
import javax.swing.ButtonGroup;
import javax.swing.JButton;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

import Controller.Listener;

import javax.swing.JRadioButton;
import java.awt.event.ActionListener;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.awt.event.ActionEvent;

public class view_QLSV extends JFrame {

	private JPanel contentPane;
	public QLSV_model model;
	private JTextField textField_maSV;
	private JTable table;
	public JTextField textField_maSVUnder;
	public JTextField textField_hoTen;
	public JTextField textField_ngaySinh;
	public JTextField textField_diem1;
	public JTextField textField_diem2;
	public JTextField textField_diem3;
	public JComboBox comboBox_queQuanUnder;
	private JComboBox comboBox_queQuan;
	public ButtonGroup btngr;
	public JRadioButton rdbtn_nam;
	public JRadioButton rdbtn_nu;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					view_QLSV frame = new view_QLSV();
					frame.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the frame.
	 */
	public view_QLSV() {
		model = new QLSV_model();
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setBounds(100, 100, 757, 759);
		setTitle("Chương trình quản lý sinh viên của Trần Phúc Khánh");
		
		JMenuBar menuBar = new JMenuBar();
		setJMenuBar(menuBar);
		
		JMenu menu_file = new JMenu("File");
		menuBar.add(menu_file);
		
		JMenuItem menuItem_open = new JMenuItem("Open");
		menu_file.add(menuItem_open);
		
		JMenuItem mntmClose = new JMenuItem("Close");
		menu_file.add(mntmClose);
		
		JSeparator separator = new JSeparator();
		menu_file.add(separator);
		
		JMenuItem menuItem_exit = new JMenuItem("Exit");
		menu_file.add(menuItem_exit);
		
		JMenu menu_about = new JMenu("About");
		menuBar.add(menu_about);
		
		JMenuItem menuItem_about_me = new JMenuItem("About me");
		menu_about.add(menuItem_about_me);
		contentPane = new JPanel();
		contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));

		setContentPane(contentPane);
		contentPane.setLayout(null);
		
		JLabel label_queQuan = new JLabel("Quê quán");
		label_queQuan.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_queQuan.setBounds(47, 40, 86, 42);
		contentPane.add(label_queQuan);
		
		comboBox_queQuan = new JComboBox();
		ArrayList<Tinh> listTinh = Tinh.getDS_Tinh();
		comboBox_queQuan.addItem("");
		for (Tinh tinh : listTinh) {
			comboBox_queQuan.addItem(tinh.getTenTinh());
		}
		comboBox_queQuan.setFont(new Font("Tahoma", Font.PLAIN, 15));
		comboBox_queQuan.setBounds(140, 40, 102, 43);
		contentPane.add(comboBox_queQuan);
		
		JLabel label_maSinhVien = new JLabel("Mã sinh viên");
		label_maSinhVien.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_maSinhVien.setBounds(306, 40, 110, 42);
		contentPane.add(label_maSinhVien);
		
		textField_maSV = new JTextField();
		textField_maSV.setBounds(426, 40, 102, 43);
		contentPane.add(textField_maSV);
		textField_maSV.setColumns(10);
		
		JButton button_timKiem = new JButton("Tìm kiếm");
		button_timKiem.setFont(new Font("Tahoma", Font.PLAIN, 20));
		button_timKiem.setBounds(591, 40, 127, 43);
		contentPane.add(button_timKiem);
		
		JSeparator separator_1 = new JSeparator();
		separator_1.setBounds(10, 102, 728, 2);
		contentPane.add(separator_1);
		
		JLabel label_danhSachSV = new JLabel("Danh sách SV");
		label_danhSachSV.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_danhSachSV.setBounds(26, 127, 122, 42);
		contentPane.add(label_danhSachSV);
		
		table = new JTable();
		table.setFont(new Font("Tahoma", Font.PLAIN, 10));
		table.setModel(new DefaultTableModel(
			new Object[][] {
			},
			new String[] {
				"Mã SV", "Họ tên", "Quê quán", "Ngày sinh", "Giới tính", "Điểm môn 1", "Điểm môn 2", "Điểm môn 3"
			}
		));
		
		JScrollPane scrollPane = new JScrollPane(table);
		scrollPane.setBounds(26, 179, 696, 92);
		contentPane.add(scrollPane);
		
		JLabel label_thongTinSV = new JLabel("Thông tin SV");
		label_thongTinSV.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_thongTinSV.setBounds(26, 303, 115, 42);
		contentPane.add(label_thongTinSV);
		
		JSeparator separator_2 = new JSeparator();
		separator_2.setBounds(10, 291, 728, 2);
		contentPane.add(separator_2);
		
		JLabel label_maSinhVienUnder = new JLabel("Mã sinh viên");
		label_maSinhVienUnder.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_maSinhVienUnder.setBounds(26, 355, 110, 42);
		contentPane.add(label_maSinhVienUnder);
		
		JLabel label_hoTenUnder = new JLabel("Họ tên");
		label_hoTenUnder.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_hoTenUnder.setBounds(26, 422, 110, 42);
		contentPane.add(label_hoTenUnder);
		
		JLabel label_queQuanUnder = new JLabel("Quê quán");
		label_queQuanUnder.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_queQuanUnder.setBounds(26, 489, 110, 42);
		contentPane.add(label_queQuanUnder);
		
		JLabel label_ngaySinhUnder = new JLabel("Ngày sinh");
		label_ngaySinhUnder.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_ngaySinhUnder.setBounds(26, 556, 110, 42);
		contentPane.add(label_ngaySinhUnder);
		
		textField_maSVUnder = new JTextField();
		textField_maSVUnder.setColumns(10);
		textField_maSVUnder.setBounds(161, 355, 170, 43);
		contentPane.add(textField_maSVUnder);
		
		textField_hoTen = new JTextField();
		textField_hoTen.setColumns(10);
		textField_hoTen.setBounds(161, 422, 170, 43);
		contentPane.add(textField_hoTen);
		
		textField_ngaySinh = new JTextField();
		textField_ngaySinh.setColumns(10);
		textField_ngaySinh.setBounds(161, 556, 170, 43);
		contentPane.add(textField_ngaySinh);
		
		JLabel label_gioiTinhUnder = new JLabel("Giới tính");
		label_gioiTinhUnder.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_gioiTinhUnder.setBounds(426, 355, 110, 42);
		contentPane.add(label_gioiTinhUnder);
		
		JLabel label_diem1Under = new JLabel("Điểm 1");
		label_diem1Under.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_diem1Under.setBounds(426, 422, 110, 42);
		contentPane.add(label_diem1Under);
		
		JLabel label_diem2Under = new JLabel("Điểm 2");
		label_diem2Under.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_diem2Under.setBounds(426, 489, 110, 42);
		contentPane.add(label_diem2Under);
		
		JLabel label_diem3Under = new JLabel("Điểm 3");
		label_diem3Under.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_diem3Under.setBounds(426, 556, 110, 42);
		contentPane.add(label_diem3Under);
		
		textField_diem1 = new JTextField();
		textField_diem1.setColumns(10);
		textField_diem1.setBounds(562, 422, 170, 43);
		contentPane.add(textField_diem1);
		
		textField_diem2 = new JTextField();
		textField_diem2.setColumns(10);
		textField_diem2.setBounds(562, 489, 170, 43);
		contentPane.add(textField_diem2);
		
		textField_diem3 = new JTextField();
		textField_diem3.setColumns(10);
		textField_diem3.setBounds(562, 556, 170, 43);
		contentPane.add(textField_diem3);
		
		rdbtn_nam = new JRadioButton("Nam");
		rdbtn_nam.setFont(new Font("Tahoma", Font.PLAIN, 20));
		rdbtn_nam.setBounds(562, 355, 71, 42);
		contentPane.add(rdbtn_nam);
		rdbtn_nam.setSelected(true);
		
		rdbtn_nu = new JRadioButton("Nữ");
		rdbtn_nu.setFont(new Font("Tahoma", Font.PLAIN, 20));
		rdbtn_nu.setBounds(647, 355, 71, 42);
		contentPane.add(rdbtn_nu);
		
		btngr = new ButtonGroup();
		btngr.add(rdbtn_nam);
		btngr.add(rdbtn_nu);
		
		ActionListener listener = new Listener(this);
		
		JButton btn_them = new JButton("Thêm");
		btn_them.addActionListener(listener);
		btn_them.setFont(new Font("Tahoma", Font.PLAIN, 20));
		btn_them.setBounds(21, 633, 127, 43);
		contentPane.add(btn_them);
		
		JButton btn_xoa = new JButton("Xóa");
		btn_xoa.addActionListener(listener);
		btn_xoa.setFont(new Font("Tahoma", Font.PLAIN, 20));
		btn_xoa.setBounds(595, 633, 127, 43);
		contentPane.add(btn_xoa);
		
		JButton btn_capNhat = new JButton("Cập nhật");
		btn_capNhat.addActionListener(listener);
		btn_capNhat.setFont(new Font("Tahoma", Font.PLAIN, 20));
		btn_capNhat.setBounds(215, 633, 127, 43);
		contentPane.add(btn_capNhat);
		
		JButton btn_luu = new JButton("Lưu");
		btn_luu.addActionListener(listener);
		btn_luu.setFont(new Font("Tahoma", Font.PLAIN, 20));
		btn_luu.setBounds(409, 633, 127, 43);
		contentPane.add(btn_luu);
		
		JSeparator separator_1_1 = new JSeparator();
		separator_1_1.setBounds(10, 615, 728, 2);
		contentPane.add(separator_1_1);
		
		comboBox_queQuanUnder = new JComboBox();
		comboBox_queQuanUnder.addItem("");
		for (Tinh tinh : listTinh) {
			comboBox_queQuanUnder.addItem(tinh.getTenTinh());
		}
		comboBox_queQuanUnder.setBounds(161, 488, 170, 43);
		contentPane.add(comboBox_queQuanUnder);
	}

	public void xoaForm() {
		textField_maSV.setText("");
		textField_maSVUnder.setText("");
		textField_hoTen.setText("");
		textField_ngaySinh.setText("");
		textField_diem1.setText("");
		textField_diem2.setText("");
		textField_diem3.setText("");
		comboBox_queQuanUnder.setSelectedIndex(-1);
		btngr.clearSelection();
	}

	public void themHoacCapNhatSV(SinhVien sv) {
		DefaultTableModel defaultTableModel = (DefaultTableModel) table.getModel();
		if (!this.model.kiemTraTonTai(sv)) {
			this.model.addSV(sv);
			defaultTableModel.addRow(new Object[]{
													sv.getMaSinhVien()+"", 
													sv.getTenSinhVien(),
													sv.getQueQuan().getTenTinh(),
													sv.getNgaySinh().getDate()+"/"+(sv.getNgaySinh().getMonth() + 1)+"/"+(sv.getNgaySinh().getYear()+1900),
													sv.isGioiTinh() ? "Nam" : "Nữ",
													sv.getDiemMon1()+"",
													sv.getDiemMon2()+"",
													sv.getDiemMon3()+""});
		}
		else {
			this.model.update(sv);
			int soDong = defaultTableModel.getRowCount();
			for (int i = 0; i < soDong; i++) {
				String id = defaultTableModel.getValueAt(soDong, 0)+"";
				if (id.equals(sv.getMaSinhVien()+"")) {
					defaultTableModel.getValueAt(sv.getMaSinhVien()+"",i ,0);
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
				}
			}
		}
	}

	public void hienThiThongTinSinhVienDangDuocChon() {
		DefaultTableModel defaultTableModel = (DefaultTableModel) table.getModel();
		int row = table.getSelectedRow();
		
		int maSV = Integer.valueOf(defaultTableModel.getValueAt(row, 0)+"");
		String tenSV = defaultTableModel.getValueAt(row, 1)+"";
		Tinh tinh = Tinh.getTinhByTen(defaultTableModel.getValueAt(row, 2)+"");
		String ngaySinh = defaultTableModel.getValueAt(row, 3)+"";
		String textGioiTinh = defaultTableModel.getValueAt(row, 4)+"";
		boolean gioiTinh = textGioiTinh.equals("Nam");
		float diemMon1 = Float.valueOf(defaultTableModel.getValueAt(row, 5)+"");
		float diemMon2 = Float.valueOf(defaultTableModel.getValueAt(row, 6)+"");
		float diemMon3 = Float.valueOf(defaultTableModel.getValueAt(row, 7)+"");
		
		this.textField_maSVUnder.setText(maSV+"");
		this.textField_hoTen.setText(tenSV+"");
		this.comboBox_queQuan.setSelectedItem(tinh.getTenTinh()+"");
		this.textField_ngaySinh.setText(ngaySinh+"");
		if (gioiTinh) {
			rdbtn_nam.setSelected(true);
		} else {
			rdbtn_nu.setSelected(false);
		}
		this.textField_diem1.setText(diemMon1+"");
		this.textField_diem2.setText(diemMon2+"");
		this.textField_diem3.setText(diemMon3+"");
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3063)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-03-14 23:37:32.989
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3063)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-03-14 23:37:32.990
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3063)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2023-03-14 23:37:34.265
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package View;

import java.awt.EventQueue;

import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.border.EmptyBorder;

import Model.QLSV_model;
import Model.SinhVien;
import Model.Tinh;

import javax.swing.JMenuBar;
import javax.swing.JMenu;
import javax.swing.JMenuItem;
import javax.swing.JSeparator;
import javax.swing.JLabel;
import java.awt.Font;
import javax.swing.JScrollPane;
import javax.swing.JComboBox;
import javax.swing.JTextField;
import javax.swing.ButtonGroup;
import javax.swing.JButton;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

import Controller.Listener;

import javax.swing.JRadioButton;
import java.awt.event.ActionListener;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.awt.event.ActionEvent;

public class view_QLSV extends JFrame {

	private JPanel contentPane;
	public QLSV_model model;
	private JTextField textField_maSV;
	private JTable table;
	public JTextField textField_maSVUnder;
	public JTextField textField_hoTen;
	public JTextField textField_ngaySinh;
	public JTextField textField_diem1;
	public JTextField textField_diem2;
	public JTextField textField_diem3;
	public JComboBox comboBox_queQuanUnder;
	private JComboBox comboBox_queQuan;
	public ButtonGroup btngr;
	public JRadioButton rdbtn_nam;
	public JRadioButton rdbtn_nu;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					view_QLSV frame = new view_QLSV();
					frame.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the frame.
	 */
	public view_QLSV() {
		model = new QLSV_model();
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setBounds(100, 100, 757, 759);
		setTitle("Chương trình quản lý sinh viên của Trần Phúc Khánh");
		
		JMenuBar menuBar = new JMenuBar();
		setJMenuBar(menuBar);
		
		JMenu menu_file = new JMenu("File");
		menuBar.add(menu_file);
		
		JMenuItem menuItem_open = new JMenuItem("Open");
		menu_file.add(menuItem_open);
		
		JMenuItem mntmClose = new JMenuItem("Close");
		menu_file.add(mntmClose);
		
		JSeparator separator = new JSeparator();
		menu_file.add(separator);
		
		JMenuItem menuItem_exit = new JMenuItem("Exit");
		menu_file.add(menuItem_exit);
		
		JMenu menu_about = new JMenu("About");
		menuBar.add(menu_about);
		
		JMenuItem menuItem_about_me = new JMenuItem("About me");
		menu_about.add(menuItem_about_me);
		contentPane = new JPanel();
		contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));

		setContentPane(contentPane);
		contentPane.setLayout(null);
		
		JLabel label_queQuan = new JLabel("Quê quán");
		label_queQuan.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_queQuan.setBounds(47, 40, 86, 42);
		contentPane.add(label_queQuan);
		
		comboBox_queQuan = new JComboBox();
		ArrayList<Tinh> listTinh = Tinh.getDS_Tinh();
		comboBox_queQuan.addItem("");
		for (Tinh tinh : listTinh) {
			comboBox_queQuan.addItem(tinh.getTenTinh());
		}
		comboBox_queQuan.setFont(new Font("Tahoma", Font.PLAIN, 15));
		comboBox_queQuan.setBounds(140, 40, 102, 43);
		contentPane.add(comboBox_queQuan);
		
		JLabel label_maSinhVien = new JLabel("Mã sinh viên");
		label_maSinhVien.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_maSinhVien.setBounds(306, 40, 110, 42);
		contentPane.add(label_maSinhVien);
		
		textField_maSV = new JTextField();
		textField_maSV.setBounds(426, 40, 102, 43);
		contentPane.add(textField_maSV);
		textField_maSV.setColumns(10);
		
		JButton button_timKiem = new JButton("Tìm kiếm");
		button_timKiem.setFont(new Font("Tahoma", Font.PLAIN, 20));
		button_timKiem.setBounds(591, 40, 127, 43);
		contentPane.add(button_timKiem);
		
		JSeparator separator_1 = new JSeparator();
		separator_1.setBounds(10, 102, 728, 2);
		contentPane.add(separator_1);
		
		JLabel label_danhSachSV = new JLabel("Danh sách SV");
		label_danhSachSV.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_danhSachSV.setBounds(26, 127, 122, 42);
		contentPane.add(label_danhSachSV);
		
		table = new JTable();
		table.setFont(new Font("Tahoma", Font.PLAIN, 10));
		table.setModel(new DefaultTableModel(
			new Object[][] {
			},
			new String[] {
				"Mã SV", "Họ tên", "Quê quán", "Ngày sinh", "Giới tính", "Điểm môn 1", "Điểm môn 2", "Điểm môn 3"
			}
		));
		
		JScrollPane scrollPane = new JScrollPane(table);
		scrollPane.setBounds(26, 179, 696, 92);
		contentPane.add(scrollPane);
		
		JLabel label_thongTinSV = new JLabel("Thông tin SV");
		label_thongTinSV.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_thongTinSV.setBounds(26, 303, 115, 42);
		contentPane.add(label_thongTinSV);
		
		JSeparator separator_2 = new JSeparator();
		separator_2.setBounds(10, 291, 728, 2);
		contentPane.add(separator_2);
		
		JLabel label_maSinhVienUnder = new JLabel("Mã sinh viên");
		label_maSinhVienUnder.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_maSinhVienUnder.setBounds(26, 355, 110, 42);
		contentPane.add(label_maSinhVienUnder);
		
		JLabel label_hoTenUnder = new JLabel("Họ tên");
		label_hoTenUnder.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_hoTenUnder.setBounds(26, 422, 110, 42);
		contentPane.add(label_hoTenUnder);
		
		JLabel label_queQuanUnder = new JLabel("Quê quán");
		label_queQuanUnder.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_queQuanUnder.setBounds(26, 489, 110, 42);
		contentPane.add(label_queQuanUnder);
		
		JLabel label_ngaySinhUnder = new JLabel("Ngày sinh");
		label_ngaySinhUnder.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_ngaySinhUnder.setBounds(26, 556, 110, 42);
		contentPane.add(label_ngaySinhUnder);
		
		textField_maSVUnder = new JTextField();
		textField_maSVUnder.setColumns(10);
		textField_maSVUnder.setBounds(161, 355, 170, 43);
		contentPane.add(textField_maSVUnder);
		
		textField_hoTen = new JTextField();
		textField_hoTen.setColumns(10);
		textField_hoTen.setBounds(161, 422, 170, 43);
		contentPane.add(textField_hoTen);
		
		textField_ngaySinh = new JTextField();
		textField_ngaySinh.setColumns(10);
		textField_ngaySinh.setBounds(161, 556, 170, 43);
		contentPane.add(textField_ngaySinh);
		
		JLabel label_gioiTinhUnder = new JLabel("Giới tính");
		label_gioiTinhUnder.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_gioiTinhUnder.setBounds(426, 355, 110, 42);
		contentPane.add(label_gioiTinhUnder);
		
		JLabel label_diem1Under = new JLabel("Điểm 1");
		label_diem1Under.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_diem1Under.setBounds(426, 422, 110, 42);
		contentPane.add(label_diem1Under);
		
		JLabel label_diem2Under = new JLabel("Điểm 2");
		label_diem2Under.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_diem2Under.setBounds(426, 489, 110, 42);
		contentPane.add(label_diem2Under);
		
		JLabel label_diem3Under = new JLabel("Điểm 3");
		label_diem3Under.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_diem3Under.setBounds(426, 556, 110, 42);
		contentPane.add(label_diem3Under);
		
		textField_diem1 = new JTextField();
		textField_diem1.setColumns(10);
		textField_diem1.setBounds(562, 422, 170, 43);
		contentPane.add(textField_diem1);
		
		textField_diem2 = new JTextField();
		textField_diem2.setColumns(10);
		textField_diem2.setBounds(562, 489, 170, 43);
		contentPane.add(textField_diem2);
		
		textField_diem3 = new JTextField();
		textField_diem3.setColumns(10);
		textField_diem3.setBounds(562, 556, 170, 43);
		contentPane.add(textField_diem3);
		
		rdbtn_nam = new JRadioButton("Nam");
		rdbtn_nam.setFont(new Font("Tahoma", Font.PLAIN, 20));
		rdbtn_nam.setBounds(562, 355, 71, 42);
		contentPane.add(rdbtn_nam);
		rdbtn_nam.setSelected(true);
		
		rdbtn_nu = new JRadioButton("Nữ");
		rdbtn_nu.setFont(new Font("Tahoma", Font.PLAIN, 20));
		rdbtn_nu.setBounds(647, 355, 71, 42);
		contentPane.add(rdbtn_nu);
		
		btngr = new ButtonGroup();
		btngr.add(rdbtn_nam);
		btngr.add(rdbtn_nu);
		
		ActionListener listener = new Listener(this);
		
		JButton btn_them = new JButton("Thêm");
		btn_them.addActionListener(listener);
		btn_them.setFont(new Font("Tahoma", Font.PLAIN, 20));
		btn_them.setBounds(21, 633, 127, 43);
		contentPane.add(btn_them);
		
		JButton btn_xoa = new JButton("Xóa");
		btn_xoa.addActionListener(listener);
		btn_xoa.setFont(new Font("Tahoma", Font.PLAIN, 20));
		btn_xoa.setBounds(595, 633, 127, 43);
		contentPane.add(btn_xoa);
		
		JButton btn_capNhat = new JButton("Cập nhật");
		btn_capNhat.addActionListener(listener);
		btn_capNhat.setFont(new Font("Tahoma", Font.PLAIN, 20));
		btn_capNhat.setBounds(215, 633, 127, 43);
		contentPane.add(btn_capNhat);
		
		JButton btn_luu = new JButton("Lưu");
		btn_luu.addActionListener(listener);
		btn_luu.setFont(new Font("Tahoma", Font.PLAIN, 20));
		btn_luu.setBounds(409, 633, 127, 43);
		contentPane.add(btn_luu);
		
		JSeparator separator_1_1 = new JSeparator();
		separator_1_1.setBounds(10, 615, 728, 2);
		contentPane.add(separator_1_1);
		
		comboBox_queQuanUnder = new JComboBox();
		comboBox_queQuanUnder.addItem("");
		for (Tinh tinh : listTinh) {
			comboBox_queQuanUnder.addItem(tinh.getTenTinh());
		}
		comboBox_queQuanUnder.setBounds(161, 488, 170, 43);
		contentPane.add(comboBox_queQuanUnder);
	}

	public void xoaForm() {
		textField_maSV.setText("");
		textField_maSVUnder.setText("");
		textField_hoTen.setText("");
		textField_ngaySinh.setText("");
		textField_diem1.setText("");
		textField_diem2.setText("");
		textField_diem3.setText("");
		comboBox_queQuanUnder.setSelectedIndex(-1);
		btngr.clearSelection();
	}

	public void themHoacCapNhatSV(SinhVien sv) {
		DefaultTableModel defaultTableModel = (DefaultTableModel) table.getModel();
		if (!this.model.kiemTraTonTai(sv)) {
			this.model.addSV(sv);
			defaultTableModel.addRow(new Object[]{
													sv.getMaSinhVien()+"", 
													sv.getTenSinhVien(),
													sv.getQueQuan().getTenTinh(),
													sv.getNgaySinh().getDate()+"/"+(sv.getNgaySinh().getMonth() + 1)+"/"+(sv.getNgaySinh().getYear()+1900),
													sv.isGioiTinh() ? "Nam" : "Nữ",
													sv.getDiemMon1()+"",
													sv.getDiemMon2()+"",
													sv.getDiemMon3()+""});
		}
		else {
			this.model.update(sv);
			int soDong = defaultTableModel.getRowCount();
			for (int i = 0; i < soDong; i++) {
				String id = defaultTableModel.getValueAt(soDong, 0)+"";
				if (id.equals(sv.getMaSinhVien()+"")) {
					defaultTableModel.getValueAt(sv.getMaSinhVien()+"",i ,0);
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
				}
			}
		}
	}

	public void hienThiThongTinSinhVienDangDuocChon() {
		DefaultTableModel defaultTableModel = (DefaultTableModel) table.getModel();
		int row = table.getSelectedRow();
		
		int maSV = Integer.valueOf(defaultTableModel.getValueAt(row, 0)+"");
		String tenSV = defaultTableModel.getValueAt(row, 1)+"";
		Tinh tinh = Tinh.getTinhByTen(defaultTableModel.getValueAt(row, 2)+"");
		String ngaySinh = defaultTableModel.getValueAt(row, 3)+"";
		String textGioiTinh = defaultTableModel.getValueAt(row, 4)+"";
		boolean gioiTinh = textGioiTinh.equals("Nam");
		float diemMon1 = Float.valueOf(defaultTableModel.getValueAt(row, 5)+"");
		float diemMon2 = Float.valueOf(defaultTableModel.getValueAt(row, 6)+"");
		float diemMon3 = Float.valueOf(defaultTableModel.getValueAt(row, 7)+"");
		
		this.textField_maSVUnder.setText(maSV+"");
		this.textField_hoTen.setText(tenSV+"");
		this.comboBox_queQuan.setSelectedItem(tinh.getTenTinh()+"");
		this.textField_ngaySinh.setText(ngaySinh+"");
		if (gioiTinh) {
			rdbtn_nam.setSelected(true);
		} else {
			rdbtn_nu.setSelected(false);
		}
		this.textField_diem1.setText(diemMon1+"");
		this.textField_diem2.setText(diemMon2+"");
		this.textField_diem3.setText(diemMon3+"");
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3063)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-03-14 23:37:34.266
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3063)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-03-14 23:37:34.267
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3063)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2023-03-14 23:37:37.076
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package View;

import java.awt.EventQueue;

import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.border.EmptyBorder;

import Model.QLSV_model;
import Model.SinhVien;
import Model.Tinh;

import javax.swing.JMenuBar;
import javax.swing.JMenu;
import javax.swing.JMenuItem;
import javax.swing.JSeparator;
import javax.swing.JLabel;
import java.awt.Font;
import javax.swing.JScrollPane;
import javax.swing.JComboBox;
import javax.swing.JTextField;
import javax.swing.ButtonGroup;
import javax.swing.JButton;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

import Controller.Listener;

import javax.swing.JRadioButton;
import java.awt.event.ActionListener;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.awt.event.ActionEvent;

public class view_QLSV extends JFrame {

	private JPanel contentPane;
	public QLSV_model model;
	private JTextField textField_maSV;
	private JTable table;
	public JTextField textField_maSVUnder;
	public JTextField textField_hoTen;
	public JTextField textField_ngaySinh;
	public JTextField textField_diem1;
	public JTextField textField_diem2;
	public JTextField textField_diem3;
	public JComboBox comboBox_queQuanUnder;
	private JComboBox comboBox_queQuan;
	public ButtonGroup btngr;
	public JRadioButton rdbtn_nam;
	public JRadioButton rdbtn_nu;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					view_QLSV frame = new view_QLSV();
					frame.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the frame.
	 */
	public view_QLSV() {
		model = new QLSV_model();
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setBounds(100, 100, 757, 759);
		setTitle("Chương trình quản lý sinh viên của Trần Phúc Khánh");
		
		JMenuBar menuBar = new JMenuBar();
		setJMenuBar(menuBar);
		
		JMenu menu_file = new JMenu("File");
		menuBar.add(menu_file);
		
		JMenuItem menuItem_open = new JMenuItem("Open");
		menu_file.add(menuItem_open);
		
		JMenuItem mntmClose = new JMenuItem("Close");
		menu_file.add(mntmClose);
		
		JSeparator separator = new JSeparator();
		menu_file.add(separator);
		
		JMenuItem menuItem_exit = new JMenuItem("Exit");
		menu_file.add(menuItem_exit);
		
		JMenu menu_about = new JMenu("About");
		menuBar.add(menu_about);
		
		JMenuItem menuItem_about_me = new JMenuItem("About me");
		menu_about.add(menuItem_about_me);
		contentPane = new JPanel();
		contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));

		setContentPane(contentPane);
		contentPane.setLayout(null);
		
		JLabel label_queQuan = new JLabel("Quê quán");
		label_queQuan.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_queQuan.setBounds(47, 40, 86, 42);
		contentPane.add(label_queQuan);
		
		comboBox_queQuan = new JComboBox();
		ArrayList<Tinh> listTinh = Tinh.getDS_Tinh();
		comboBox_queQuan.addItem("");
		for (Tinh tinh : listTinh) {
			comboBox_queQuan.addItem(tinh.getTenTinh());
		}
		comboBox_queQuan.setFont(new Font("Tahoma", Font.PLAIN, 15));
		comboBox_queQuan.setBounds(140, 40, 102, 43);
		contentPane.add(comboBox_queQuan);
		
		JLabel label_maSinhVien = new JLabel("Mã sinh viên");
		label_maSinhVien.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_maSinhVien.setBounds(306, 40, 110, 42);
		contentPane.add(label_maSinhVien);
		
		textField_maSV = new JTextField();
		textField_maSV.setBounds(426, 40, 102, 43);
		contentPane.add(textField_maSV);
		textField_maSV.setColumns(10);
		
		JButton button_timKiem = new JButton("Tìm kiếm");
		button_timKiem.setFont(new Font("Tahoma", Font.PLAIN, 20));
		button_timKiem.setBounds(591, 40, 127, 43);
		contentPane.add(button_timKiem);
		
		JSeparator separator_1 = new JSeparator();
		separator_1.setBounds(10, 102, 728, 2);
		contentPane.add(separator_1);
		
		JLabel label_danhSachSV = new JLabel("Danh sách SV");
		label_danhSachSV.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_danhSachSV.setBounds(26, 127, 122, 42);
		contentPane.add(label_danhSachSV);
		
		table = new JTable();
		table.setFont(new Font("Tahoma", Font.PLAIN, 10));
		table.setModel(new DefaultTableModel(
			new Object[][] {
			},
			new String[] {
				"Mã SV", "Họ tên", "Quê quán", "Ngày sinh", "Giới tính", "Điểm môn 1", "Điểm môn 2", "Điểm môn 3"
			}
		));
		
		JScrollPane scrollPane = new JScrollPane(table);
		scrollPane.setBounds(26, 179, 696, 92);
		contentPane.add(scrollPane);
		
		JLabel label_thongTinSV = new JLabel("Thông tin SV");
		label_thongTinSV.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_thongTinSV.setBounds(26, 303, 115, 42);
		contentPane.add(label_thongTinSV);
		
		JSeparator separator_2 = new JSeparator();
		separator_2.setBounds(10, 291, 728, 2);
		contentPane.add(separator_2);
		
		JLabel label_maSinhVienUnder = new JLabel("Mã sinh viên");
		label_maSinhVienUnder.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_maSinhVienUnder.setBounds(26, 355, 110, 42);
		contentPane.add(label_maSinhVienUnder);
		
		JLabel label_hoTenUnder = new JLabel("Họ tên");
		label_hoTenUnder.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_hoTenUnder.setBounds(26, 422, 110, 42);
		contentPane.add(label_hoTenUnder);
		
		JLabel label_queQuanUnder = new JLabel("Quê quán");
		label_queQuanUnder.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_queQuanUnder.setBounds(26, 489, 110, 42);
		contentPane.add(label_queQuanUnder);
		
		JLabel label_ngaySinhUnder = new JLabel("Ngày sinh");
		label_ngaySinhUnder.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_ngaySinhUnder.setBounds(26, 556, 110, 42);
		contentPane.add(label_ngaySinhUnder);
		
		textField_maSVUnder = new JTextField();
		textField_maSVUnder.setColumns(10);
		textField_maSVUnder.setBounds(161, 355, 170, 43);
		contentPane.add(textField_maSVUnder);
		
		textField_hoTen = new JTextField();
		textField_hoTen.setColumns(10);
		textField_hoTen.setBounds(161, 422, 170, 43);
		contentPane.add(textField_hoTen);
		
		textField_ngaySinh = new JTextField();
		textField_ngaySinh.setColumns(10);
		textField_ngaySinh.setBounds(161, 556, 170, 43);
		contentPane.add(textField_ngaySinh);
		
		JLabel label_gioiTinhUnder = new JLabel("Giới tính");
		label_gioiTinhUnder.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_gioiTinhUnder.setBounds(426, 355, 110, 42);
		contentPane.add(label_gioiTinhUnder);
		
		JLabel label_diem1Under = new JLabel("Điểm 1");
		label_diem1Under.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_diem1Under.setBounds(426, 422, 110, 42);
		contentPane.add(label_diem1Under);
		
		JLabel label_diem2Under = new JLabel("Điểm 2");
		label_diem2Under.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_diem2Under.setBounds(426, 489, 110, 42);
		contentPane.add(label_diem2Under);
		
		JLabel label_diem3Under = new JLabel("Điểm 3");
		label_diem3Under.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_diem3Under.setBounds(426, 556, 110, 42);
		contentPane.add(label_diem3Under);
		
		textField_diem1 = new JTextField();
		textField_diem1.setColumns(10);
		textField_diem1.setBounds(562, 422, 170, 43);
		contentPane.add(textField_diem1);
		
		textField_diem2 = new JTextField();
		textField_diem2.setColumns(10);
		textField_diem2.setBounds(562, 489, 170, 43);
		contentPane.add(textField_diem2);
		
		textField_diem3 = new JTextField();
		textField_diem3.setColumns(10);
		textField_diem3.setBounds(562, 556, 170, 43);
		contentPane.add(textField_diem3);
		
		rdbtn_nam = new JRadioButton("Nam");
		rdbtn_nam.setFont(new Font("Tahoma", Font.PLAIN, 20));
		rdbtn_nam.setBounds(562, 355, 71, 42);
		contentPane.add(rdbtn_nam);
		rdbtn_nam.setSelected(true);
		
		rdbtn_nu = new JRadioButton("Nữ");
		rdbtn_nu.setFont(new Font("Tahoma", Font.PLAIN, 20));
		rdbtn_nu.setBounds(647, 355, 71, 42);
		contentPane.add(rdbtn_nu);
		
		btngr = new ButtonGroup();
		btngr.add(rdbtn_nam);
		btngr.add(rdbtn_nu);
		
		ActionListener listener = new Listener(this);
		
		JButton btn_them = new JButton("Thêm");
		btn_them.addActionListener(listener);
		btn_them.setFont(new Font("Tahoma", Font.PLAIN, 20));
		btn_them.setBounds(21, 633, 127, 43);
		contentPane.add(btn_them);
		
		JButton btn_xoa = new JButton("Xóa");
		btn_xoa.addActionListener(listener);
		btn_xoa.setFont(new Font("Tahoma", Font.PLAIN, 20));
		btn_xoa.setBounds(595, 633, 127, 43);
		contentPane.add(btn_xoa);
		
		JButton btn_capNhat = new JButton("Cập nhật");
		btn_capNhat.addActionListener(listener);
		btn_capNhat.setFont(new Font("Tahoma", Font.PLAIN, 20));
		btn_capNhat.setBounds(215, 633, 127, 43);
		contentPane.add(btn_capNhat);
		
		JButton btn_luu = new JButton("Lưu");
		btn_luu.addActionListener(listener);
		btn_luu.setFont(new Font("Tahoma", Font.PLAIN, 20));
		btn_luu.setBounds(409, 633, 127, 43);
		contentPane.add(btn_luu);
		
		JSeparator separator_1_1 = new JSeparator();
		separator_1_1.setBounds(10, 615, 728, 2);
		contentPane.add(separator_1_1);
		
		comboBox_queQuanUnder = new JComboBox();
		comboBox_queQuanUnder.addItem("");
		for (Tinh tinh : listTinh) {
			comboBox_queQuanUnder.addItem(tinh.getTenTinh());
		}
		comboBox_queQuanUnder.setBounds(161, 488, 170, 43);
		contentPane.add(comboBox_queQuanUnder);
	}

	public void xoaForm() {
		textField_maSV.setText("");
		textField_maSVUnder.setText("");
		textField_hoTen.setText("");
		textField_ngaySinh.setText("");
		textField_diem1.setText("");
		textField_diem2.setText("");
		textField_diem3.setText("");
		comboBox_queQuanUnder.setSelectedIndex(-1);
		btngr.clearSelection();
	}

	public void themHoacCapNhatSV(SinhVien sv) {
		DefaultTableModel defaultTableModel = (DefaultTableModel) table.getModel();
		if (!this.model.kiemTraTonTai(sv)) {
			this.model.addSV(sv);
			defaultTableModel.addRow(new Object[]{
													sv.getMaSinhVien()+"", 
													sv.getTenSinhVien(),
													sv.getQueQuan().getTenTinh(),
													sv.getNgaySinh().getDate()+"/"+(sv.getNgaySinh().getMonth() + 1)+"/"+(sv.getNgaySinh().getYear()+1900),
													sv.isGioiTinh() ? "Nam" : "Nữ",
													sv.getDiemMon1()+"",
													sv.getDiemMon2()+"",
													sv.getDiemMon3()+""});
		}
		else {
			this.model.update(sv);
			int soDong = defaultTableModel.getRowCount();
			for (int i = 0; i < soDong; i++) {
				String id = defaultTableModel.getValueAt(soDong, 0)+"";
				if (id.equals(sv.getMaSinhVien()+"")) {
					defaultTableModel.getValueAt(sv.getMaSinhVien()+"",i ,0);
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
				}
			}
		}
	}

	public void hienThiThongTinSinhVienDangDuocChon() {
		DefaultTableModel defaultTableModel = (DefaultTableModel) table.getModel();
		int row = table.getSelectedRow();
		
		int maSV = Integer.valueOf(defaultTableModel.getValueAt(row, 0)+"");
		String tenSV = defaultTableModel.getValueAt(row, 1)+"";
		Tinh tinh = Tinh.getTinhByTen(defaultTableModel.getValueAt(row, 2)+"");
		String ngaySinh = defaultTableModel.getValueAt(row, 3)+"";
		String textGioiTinh = defaultTableModel.getValueAt(row, 4)+"";
		boolean gioiTinh = textGioiTinh.equals("Nam");
		float diemMon1 = Float.valueOf(defaultTableModel.getValueAt(row, 5)+"");
		float diemMon2 = Float.valueOf(defaultTableModel.getValueAt(row, 6)+"");
		float diemMon3 = Float.valueOf(defaultTableModel.getValueAt(row, 7)+"");
		
		this.textField_maSVUnder.setText(maSV+"");
		this.textField_hoTen.setText(tenSV+"");
		this.comboBox_queQuan.setSelectedItem(tinh.getTenTinh()+"");
		this.textField_ngaySinh.setText(ngaySinh+"");
		if (gioiTinh) {
			rdbtn_nam.setSelected(true);
		} else {
			rdbtn_nu.setSelected(false);
		}
		this.textField_diem1.setText(diemMon1+"");
		this.textField_diem2.setText(diemMon2+"");
		this.textField_diem3.setText(diemMon3+"");
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3063)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-03-14 23:37:37.077
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3063)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-03-14 23:37:37.078
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3063)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2023-03-14 23:37:49.259
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package View;

import java.awt.EventQueue;

import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.border.EmptyBorder;

import Model.QLSV_model;
import Model.SinhVien;
import Model.Tinh;

import javax.swing.JMenuBar;
import javax.swing.JMenu;
import javax.swing.JMenuItem;
import javax.swing.JSeparator;
import javax.swing.JLabel;
import java.awt.Font;
import javax.swing.JScrollPane;
import javax.swing.JComboBox;
import javax.swing.JTextField;
import javax.swing.ButtonGroup;
import javax.swing.JButton;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

import Controller.Listener;

import javax.swing.JRadioButton;
import java.awt.event.ActionListener;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.awt.event.ActionEvent;

public class view_QLSV extends JFrame {

	private JPanel contentPane;
	public QLSV_model model;
	private JTextField textField_maSV;
	private JTable table;
	public JTextField textField_maSVUnder;
	public JTextField textField_hoTen;
	public JTextField textField_ngaySinh;
	public JTextField textField_diem1;
	public JTextField textField_diem2;
	public JTextField textField_diem3;
	public JComboBox comboBox_queQuanUnder;
	private JComboBox comboBox_queQuan;
	public ButtonGroup btngr;
	public JRadioButton rdbtn_nam;
	public JRadioButton rdbtn_nu;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					view_QLSV frame = new view_QLSV();
					frame.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the frame.
	 */
	public view_QLSV() {
		model = new QLSV_model();
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setBounds(100, 100, 757, 759);
		setTitle("Chương trình quản lý sinh viên của Trần Phúc Khánh");
		
		JMenuBar menuBar = new JMenuBar();
		setJMenuBar(menuBar);
		
		JMenu menu_file = new JMenu("File");
		menuBar.add(menu_file);
		
		JMenuItem menuItem_open = new JMenuItem("Open");
		menu_file.add(menuItem_open);
		
		JMenuItem mntmClose = new JMenuItem("Close");
		menu_file.add(mntmClose);
		
		JSeparator separator = new JSeparator();
		menu_file.add(separator);
		
		JMenuItem menuItem_exit = new JMenuItem("Exit");
		menu_file.add(menuItem_exit);
		
		JMenu menu_about = new JMenu("About");
		menuBar.add(menu_about);
		
		JMenuItem menuItem_about_me = new JMenuItem("About me");
		menu_about.add(menuItem_about_me);
		contentPane = new JPanel();
		contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));

		setContentPane(contentPane);
		contentPane.setLayout(null);
		
		JLabel label_queQuan = new JLabel("Quê quán");
		label_queQuan.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_queQuan.setBounds(47, 40, 86, 42);
		contentPane.add(label_queQuan);
		
		comboBox_queQuan = new JComboBox();
		ArrayList<Tinh> listTinh = Tinh.getDS_Tinh();
		comboBox_queQuan.addItem("");
		for (Tinh tinh : listTinh) {
			comboBox_queQuan.addItem(tinh.getTenTinh());
		}
		comboBox_queQuan.setFont(new Font("Tahoma", Font.PLAIN, 15));
		comboBox_queQuan.setBounds(140, 40, 102, 43);
		contentPane.add(comboBox_queQuan);
		
		JLabel label_maSinhVien = new JLabel("Mã sinh viên");
		label_maSinhVien.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_maSinhVien.setBounds(306, 40, 110, 42);
		contentPane.add(label_maSinhVien);
		
		textField_maSV = new JTextField();
		textField_maSV.setBounds(426, 40, 102, 43);
		contentPane.add(textField_maSV);
		textField_maSV.setColumns(10);
		
		JButton button_timKiem = new JButton("Tìm kiếm");
		button_timKiem.setFont(new Font("Tahoma", Font.PLAIN, 20));
		button_timKiem.setBounds(591, 40, 127, 43);
		contentPane.add(button_timKiem);
		
		JSeparator separator_1 = new JSeparator();
		separator_1.setBounds(10, 102, 728, 2);
		contentPane.add(separator_1);
		
		JLabel label_danhSachSV = new JLabel("Danh sách SV");
		label_danhSachSV.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_danhSachSV.setBounds(26, 127, 122, 42);
		contentPane.add(label_danhSachSV);
		
		table = new JTable();
		table.setFont(new Font("Tahoma", Font.PLAIN, 10));
		table.setModel(new DefaultTableModel(
			new Object[][] {
			},
			new String[] {
				"Mã SV", "Họ tên", "Quê quán", "Ngày sinh", "Giới tính", "Điểm môn 1", "Điểm môn 2", "Điểm môn 3"
			}
		));
		
		JScrollPane scrollPane = new JScrollPane(table);
		scrollPane.setBounds(26, 179, 696, 92);
		contentPane.add(scrollPane);
		
		JLabel label_thongTinSV = new JLabel("Thông tin SV");
		label_thongTinSV.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_thongTinSV.setBounds(26, 303, 115, 42);
		contentPane.add(label_thongTinSV);
		
		JSeparator separator_2 = new JSeparator();
		separator_2.setBounds(10, 291, 728, 2);
		contentPane.add(separator_2);
		
		JLabel label_maSinhVienUnder = new JLabel("Mã sinh viên");
		label_maSinhVienUnder.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_maSinhVienUnder.setBounds(26, 355, 110, 42);
		contentPane.add(label_maSinhVienUnder);
		
		JLabel label_hoTenUnder = new JLabel("Họ tên");
		label_hoTenUnder.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_hoTenUnder.setBounds(26, 422, 110, 42);
		contentPane.add(label_hoTenUnder);
		
		JLabel label_queQuanUnder = new JLabel("Quê quán");
		label_queQuanUnder.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_queQuanUnder.setBounds(26, 489, 110, 42);
		contentPane.add(label_queQuanUnder);
		
		JLabel label_ngaySinhUnder = new JLabel("Ngày sinh");
		label_ngaySinhUnder.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_ngaySinhUnder.setBounds(26, 556, 110, 42);
		contentPane.add(label_ngaySinhUnder);
		
		textField_maSVUnder = new JTextField();
		textField_maSVUnder.setColumns(10);
		textField_maSVUnder.setBounds(161, 355, 170, 43);
		contentPane.add(textField_maSVUnder);
		
		textField_hoTen = new JTextField();
		textField_hoTen.setColumns(10);
		textField_hoTen.setBounds(161, 422, 170, 43);
		contentPane.add(textField_hoTen);
		
		textField_ngaySinh = new JTextField();
		textField_ngaySinh.setColumns(10);
		textField_ngaySinh.setBounds(161, 556, 170, 43);
		contentPane.add(textField_ngaySinh);
		
		JLabel label_gioiTinhUnder = new JLabel("Giới tính");
		label_gioiTinhUnder.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_gioiTinhUnder.setBounds(426, 355, 110, 42);
		contentPane.add(label_gioiTinhUnder);
		
		JLabel label_diem1Under = new JLabel("Điểm 1");
		label_diem1Under.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_diem1Under.setBounds(426, 422, 110, 42);
		contentPane.add(label_diem1Under);
		
		JLabel label_diem2Under = new JLabel("Điểm 2");
		label_diem2Under.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_diem2Under.setBounds(426, 489, 110, 42);
		contentPane.add(label_diem2Under);
		
		JLabel label_diem3Under = new JLabel("Điểm 3");
		label_diem3Under.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_diem3Under.setBounds(426, 556, 110, 42);
		contentPane.add(label_diem3Under);
		
		textField_diem1 = new JTextField();
		textField_diem1.setColumns(10);
		textField_diem1.setBounds(562, 422, 170, 43);
		contentPane.add(textField_diem1);
		
		textField_diem2 = new JTextField();
		textField_diem2.setColumns(10);
		textField_diem2.setBounds(562, 489, 170, 43);
		contentPane.add(textField_diem2);
		
		textField_diem3 = new JTextField();
		textField_diem3.setColumns(10);
		textField_diem3.setBounds(562, 556, 170, 43);
		contentPane.add(textField_diem3);
		
		rdbtn_nam = new JRadioButton("Nam");
		rdbtn_nam.setFont(new Font("Tahoma", Font.PLAIN, 20));
		rdbtn_nam.setBounds(562, 355, 71, 42);
		contentPane.add(rdbtn_nam);
		rdbtn_nam.setSelected(true);
		
		rdbtn_nu = new JRadioButton("Nữ");
		rdbtn_nu.setFont(new Font("Tahoma", Font.PLAIN, 20));
		rdbtn_nu.setBounds(647, 355, 71, 42);
		contentPane.add(rdbtn_nu);
		
		btngr = new ButtonGroup();
		btngr.add(rdbtn_nam);
		btngr.add(rdbtn_nu);
		
		ActionListener listener = new Listener(this);
		
		JButton btn_them = new JButton("Thêm");
		btn_them.addActionListener(listener);
		btn_them.setFont(new Font("Tahoma", Font.PLAIN, 20));
		btn_them.setBounds(21, 633, 127, 43);
		contentPane.add(btn_them);
		
		JButton btn_xoa = new JButton("Xóa");
		btn_xoa.addActionListener(listener);
		btn_xoa.setFont(new Font("Tahoma", Font.PLAIN, 20));
		btn_xoa.setBounds(595, 633, 127, 43);
		contentPane.add(btn_xoa);
		
		JButton btn_capNhat = new JButton("Cập nhật");
		btn_capNhat.addActionListener(listener);
		btn_capNhat.setFont(new Font("Tahoma", Font.PLAIN, 20));
		btn_capNhat.setBounds(215, 633, 127, 43);
		contentPane.add(btn_capNhat);
		
		JButton btn_luu = new JButton("Lưu");
		btn_luu.addActionListener(listener);
		btn_luu.setFont(new Font("Tahoma", Font.PLAIN, 20));
		btn_luu.setBounds(409, 633, 127, 43);
		contentPane.add(btn_luu);
		
		JSeparator separator_1_1 = new JSeparator();
		separator_1_1.setBounds(10, 615, 728, 2);
		contentPane.add(separator_1_1);
		
		comboBox_queQuanUnder = new JComboBox();
		comboBox_queQuanUnder.addItem("");
		for (Tinh tinh : listTinh) {
			comboBox_queQuanUnder.addItem(tinh.getTenTinh());
		}
		comboBox_queQuanUnder.setBounds(161, 488, 170, 43);
		contentPane.add(comboBox_queQuanUnder);
	}

	public void xoaForm() {
		textField_maSV.setText("");
		textField_maSVUnder.setText("");
		textField_hoTen.setText("");
		textField_ngaySinh.setText("");
		textField_diem1.setText("");
		textField_diem2.setText("");
		textField_diem3.setText("");
		comboBox_queQuanUnder.setSelectedIndex(-1);
		btngr.clearSelection();
	}

	public void themHoacCapNhatSV(SinhVien sv) {
		DefaultTableModel defaultTableModel = (DefaultTableModel) table.getModel();
		if (!this.model.kiemTraTonTai(sv)) {
			this.model.addSV(sv);
			defaultTableModel.addRow(new Object[]{
													sv.getMaSinhVien()+"", 
													sv.getTenSinhVien(),
													sv.getQueQuan().getTenTinh(),
													sv.getNgaySinh().getDate()+"/"+(sv.getNgaySinh().getMonth() + 1)+"/"+(sv.getNgaySinh().getYear()+1900),
													sv.isGioiTinh() ? "Nam" : "Nữ",
													sv.getDiemMon1()+"",
													sv.getDiemMon2()+"",
													sv.getDiemMon3()+""});
		}
		else {
			this.model.update(sv);
			int soDong = defaultTableModel.getRowCount();
			for (int i = 0; i < soDong; i++) {
				String id = defaultTableModel.getValueAt(soDong, 0)+"";
				if (id.equals(sv.getMaSinhVien()+"")) {
					defaultTableModel.getValueAt(sv.getMaSinhVien()+"",i ,0);
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
				}
			}
		}
	}

	public void hienThiThongTinSinhVienDangDuocChon() {
		DefaultTableModel defaultTableModel = (DefaultTableModel) table.getModel();
		int row = table.getSelectedRow();
		
		int maSV = Integer.valueOf(defaultTableModel.getValueAt(row, 0)+"");
		String tenSV = defaultTableModel.getValueAt(row, 1)+"";
		Tinh tinh = Tinh.getTinhByTen(defaultTableModel.getValueAt(row, 2)+"");
		String ngaySinh = defaultTableModel.getValueAt(row, 3)+"";
		String textGioiTinh = defaultTableModel.getValueAt(row, 4)+"";
		boolean gioiTinh = textGioiTinh.equals("Nam");
		float diemMon1 = Float.valueOf(defaultTableModel.getValueAt(row, 5)+"");
		float diemMon2 = Float.valueOf(defaultTableModel.getValueAt(row, 6)+"");
		float diemMon3 = Float.valueOf(defaultTableModel.getValueAt(row, 7)+"");
		
		this.textField_maSVUnder.setText(maSV+"");
		this.textField_hoTen.setText(tenSV+"");
		this.comboBox_queQuan.setSelectedItem(tinh.getTenTinh()+"");
		this.textField_ngaySinh.setText(ngaySinh+"");
		if (gioiTinh) {
			rdbtn_nam.setSelected(true);
		} else {
			rdbtn_nu.setSelected(false);
		}
		this.textField_diem1.setText(diemMon1+"");
		this.textField_diem2.setText(diemMon2+"");
		this.textField_diem3.setText(diemMon3+"");
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3063)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-03-14 23:37:49.260
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3063)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-03-14 23:37:49.261
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3063)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2023-03-14 23:37:50.634
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package View;

import java.awt.EventQueue;

import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.border.EmptyBorder;

import Model.QLSV_model;
import Model.SinhVien;
import Model.Tinh;

import javax.swing.JMenuBar;
import javax.swing.JMenu;
import javax.swing.JMenuItem;
import javax.swing.JSeparator;
import javax.swing.JLabel;
import java.awt.Font;
import javax.swing.JScrollPane;
import javax.swing.JComboBox;
import javax.swing.JTextField;
import javax.swing.ButtonGroup;
import javax.swing.JButton;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

import Controller.Listener;

import javax.swing.JRadioButton;
import java.awt.event.ActionListener;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.awt.event.ActionEvent;

public class view_QLSV extends JFrame {

	private JPanel contentPane;
	public QLSV_model model;
	private JTextField textField_maSV;
	private JTable table;
	public JTextField textField_maSVUnder;
	public JTextField textField_hoTen;
	public JTextField textField_ngaySinh;
	public JTextField textField_diem1;
	public JTextField textField_diem2;
	public JTextField textField_diem3;
	public JComboBox comboBox_queQuanUnder;
	private JComboBox comboBox_queQuan;
	public ButtonGroup btngr;
	public JRadioButton rdbtn_nam;
	public JRadioButton rdbtn_nu;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					view_QLSV frame = new view_QLSV();
					frame.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the frame.
	 */
	public view_QLSV() {
		model = new QLSV_model();
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setBounds(100, 100, 757, 759);
		setTitle("Chương trình quản lý sinh viên của Trần Phúc Khánh");
		
		JMenuBar menuBar = new JMenuBar();
		setJMenuBar(menuBar);
		
		JMenu menu_file = new JMenu("File");
		menuBar.add(menu_file);
		
		JMenuItem menuItem_open = new JMenuItem("Open");
		menu_file.add(menuItem_open);
		
		JMenuItem mntmClose = new JMenuItem("Close");
		menu_file.add(mntmClose);
		
		JSeparator separator = new JSeparator();
		menu_file.add(separator);
		
		JMenuItem menuItem_exit = new JMenuItem("Exit");
		menu_file.add(menuItem_exit);
		
		JMenu menu_about = new JMenu("About");
		menuBar.add(menu_about);
		
		JMenuItem menuItem_about_me = new JMenuItem("About me");
		menu_about.add(menuItem_about_me);
		contentPane = new JPanel();
		contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));

		setContentPane(contentPane);
		contentPane.setLayout(null);
		
		JLabel label_queQuan = new JLabel("Quê quán");
		label_queQuan.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_queQuan.setBounds(47, 40, 86, 42);
		contentPane.add(label_queQuan);
		
		comboBox_queQuan = new JComboBox();
		ArrayList<Tinh> listTinh = Tinh.getDS_Tinh();
		comboBox_queQuan.addItem("");
		for (Tinh tinh : listTinh) {
			comboBox_queQuan.addItem(tinh.getTenTinh());
		}
		comboBox_queQuan.setFont(new Font("Tahoma", Font.PLAIN, 15));
		comboBox_queQuan.setBounds(140, 40, 102, 43);
		contentPane.add(comboBox_queQuan);
		
		JLabel label_maSinhVien = new JLabel("Mã sinh viên");
		label_maSinhVien.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_maSinhVien.setBounds(306, 40, 110, 42);
		contentPane.add(label_maSinhVien);
		
		textField_maSV = new JTextField();
		textField_maSV.setBounds(426, 40, 102, 43);
		contentPane.add(textField_maSV);
		textField_maSV.setColumns(10);
		
		JButton button_timKiem = new JButton("Tìm kiếm");
		button_timKiem.setFont(new Font("Tahoma", Font.PLAIN, 20));
		button_timKiem.setBounds(591, 40, 127, 43);
		contentPane.add(button_timKiem);
		
		JSeparator separator_1 = new JSeparator();
		separator_1.setBounds(10, 102, 728, 2);
		contentPane.add(separator_1);
		
		JLabel label_danhSachSV = new JLabel("Danh sách SV");
		label_danhSachSV.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_danhSachSV.setBounds(26, 127, 122, 42);
		contentPane.add(label_danhSachSV);
		
		table = new JTable();
		table.setFont(new Font("Tahoma", Font.PLAIN, 10));
		table.setModel(new DefaultTableModel(
			new Object[][] {
			},
			new String[] {
				"Mã SV", "Họ tên", "Quê quán", "Ngày sinh", "Giới tính", "Điểm môn 1", "Điểm môn 2", "Điểm môn 3"
			}
		));
		
		JScrollPane scrollPane = new JScrollPane(table);
		scrollPane.setBounds(26, 179, 696, 92);
		contentPane.add(scrollPane);
		
		JLabel label_thongTinSV = new JLabel("Thông tin SV");
		label_thongTinSV.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_thongTinSV.setBounds(26, 303, 115, 42);
		contentPane.add(label_thongTinSV);
		
		JSeparator separator_2 = new JSeparator();
		separator_2.setBounds(10, 291, 728, 2);
		contentPane.add(separator_2);
		
		JLabel label_maSinhVienUnder = new JLabel("Mã sinh viên");
		label_maSinhVienUnder.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_maSinhVienUnder.setBounds(26, 355, 110, 42);
		contentPane.add(label_maSinhVienUnder);
		
		JLabel label_hoTenUnder = new JLabel("Họ tên");
		label_hoTenUnder.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_hoTenUnder.setBounds(26, 422, 110, 42);
		contentPane.add(label_hoTenUnder);
		
		JLabel label_queQuanUnder = new JLabel("Quê quán");
		label_queQuanUnder.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_queQuanUnder.setBounds(26, 489, 110, 42);
		contentPane.add(label_queQuanUnder);
		
		JLabel label_ngaySinhUnder = new JLabel("Ngày sinh");
		label_ngaySinhUnder.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_ngaySinhUnder.setBounds(26, 556, 110, 42);
		contentPane.add(label_ngaySinhUnder);
		
		textField_maSVUnder = new JTextField();
		textField_maSVUnder.setColumns(10);
		textField_maSVUnder.setBounds(161, 355, 170, 43);
		contentPane.add(textField_maSVUnder);
		
		textField_hoTen = new JTextField();
		textField_hoTen.setColumns(10);
		textField_hoTen.setBounds(161, 422, 170, 43);
		contentPane.add(textField_hoTen);
		
		textField_ngaySinh = new JTextField();
		textField_ngaySinh.setColumns(10);
		textField_ngaySinh.setBounds(161, 556, 170, 43);
		contentPane.add(textField_ngaySinh);
		
		JLabel label_gioiTinhUnder = new JLabel("Giới tính");
		label_gioiTinhUnder.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_gioiTinhUnder.setBounds(426, 355, 110, 42);
		contentPane.add(label_gioiTinhUnder);
		
		JLabel label_diem1Under = new JLabel("Điểm 1");
		label_diem1Under.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_diem1Under.setBounds(426, 422, 110, 42);
		contentPane.add(label_diem1Under);
		
		JLabel label_diem2Under = new JLabel("Điểm 2");
		label_diem2Under.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_diem2Under.setBounds(426, 489, 110, 42);
		contentPane.add(label_diem2Under);
		
		JLabel label_diem3Under = new JLabel("Điểm 3");
		label_diem3Under.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_diem3Under.setBounds(426, 556, 110, 42);
		contentPane.add(label_diem3Under);
		
		textField_diem1 = new JTextField();
		textField_diem1.setColumns(10);
		textField_diem1.setBounds(562, 422, 170, 43);
		contentPane.add(textField_diem1);
		
		textField_diem2 = new JTextField();
		textField_diem2.setColumns(10);
		textField_diem2.setBounds(562, 489, 170, 43);
		contentPane.add(textField_diem2);
		
		textField_diem3 = new JTextField();
		textField_diem3.setColumns(10);
		textField_diem3.setBounds(562, 556, 170, 43);
		contentPane.add(textField_diem3);
		
		rdbtn_nam = new JRadioButton("Nam");
		rdbtn_nam.setFont(new Font("Tahoma", Font.PLAIN, 20));
		rdbtn_nam.setBounds(562, 355, 71, 42);
		contentPane.add(rdbtn_nam);
		rdbtn_nam.setSelected(true);
		
		rdbtn_nu = new JRadioButton("Nữ");
		rdbtn_nu.setFont(new Font("Tahoma", Font.PLAIN, 20));
		rdbtn_nu.setBounds(647, 355, 71, 42);
		contentPane.add(rdbtn_nu);
		
		btngr = new ButtonGroup();
		btngr.add(rdbtn_nam);
		btngr.add(rdbtn_nu);
		
		ActionListener listener = new Listener(this);
		
		JButton btn_them = new JButton("Thêm");
		btn_them.addActionListener(listener);
		btn_them.setFont(new Font("Tahoma", Font.PLAIN, 20));
		btn_them.setBounds(21, 633, 127, 43);
		contentPane.add(btn_them);
		
		JButton btn_xoa = new JButton("Xóa");
		btn_xoa.addActionListener(listener);
		btn_xoa.setFont(new Font("Tahoma", Font.PLAIN, 20));
		btn_xoa.setBounds(595, 633, 127, 43);
		contentPane.add(btn_xoa);
		
		JButton btn_capNhat = new JButton("Cập nhật");
		btn_capNhat.addActionListener(listener);
		btn_capNhat.setFont(new Font("Tahoma", Font.PLAIN, 20));
		btn_capNhat.setBounds(215, 633, 127, 43);
		contentPane.add(btn_capNhat);
		
		JButton btn_luu = new JButton("Lưu");
		btn_luu.addActionListener(listener);
		btn_luu.setFont(new Font("Tahoma", Font.PLAIN, 20));
		btn_luu.setBounds(409, 633, 127, 43);
		contentPane.add(btn_luu);
		
		JSeparator separator_1_1 = new JSeparator();
		separator_1_1.setBounds(10, 615, 728, 2);
		contentPane.add(separator_1_1);
		
		comboBox_queQuanUnder = new JComboBox();
		comboBox_queQuanUnder.addItem("");
		for (Tinh tinh : listTinh) {
			comboBox_queQuanUnder.addItem(tinh.getTenTinh());
		}
		comboBox_queQuanUnder.setBounds(161, 488, 170, 43);
		contentPane.add(comboBox_queQuanUnder);
	}

	public void xoaForm() {
		textField_maSV.setText("");
		textField_maSVUnder.setText("");
		textField_hoTen.setText("");
		textField_ngaySinh.setText("");
		textField_diem1.setText("");
		textField_diem2.setText("");
		textField_diem3.setText("");
		comboBox_queQuanUnder.setSelectedIndex(-1);
		btngr.clearSelection();
	}

	public void themHoacCapNhatSV(SinhVien sv) {
		DefaultTableModel defaultTableModel = (DefaultTableModel) table.getModel();
		if (!this.model.kiemTraTonTai(sv)) {
			this.model.addSV(sv);
			defaultTableModel.addRow(new Object[]{
													sv.getMaSinhVien()+"", 
													sv.getTenSinhVien(),
													sv.getQueQuan().getTenTinh(),
													sv.getNgaySinh().getDate()+"/"+(sv.getNgaySinh().getMonth() + 1)+"/"+(sv.getNgaySinh().getYear()+1900),
													sv.isGioiTinh() ? "Nam" : "Nữ",
													sv.getDiemMon1()+"",
													sv.getDiemMon2()+"",
													sv.getDiemMon3()+""});
		}
		else {
			this.model.update(sv);
			int soDong = defaultTableModel.getRowCount();
			for (int i = 0; i < soDong; i++) {
				String id = defaultTableModel.getValueAt(soDong, 0)+"";
				if (id.equals(sv.getMaSinhVien()+"")) {
					defaultTableModel.getValueAt(sv.getMaSinhVien()+"",i ,0);
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
				}
			}
		}
	}

	public void hienThiThongTinSinhVienDangDuocChon() {
		DefaultTableModel defaultTableModel = (DefaultTableModel) table.getModel();
		int row = table.getSelectedRow();
		
		int maSV = Integer.valueOf(defaultTableModel.getValueAt(row, 0)+"");
		String tenSV = defaultTableModel.getValueAt(row, 1)+"";
		Tinh tinh = Tinh.getTinhByTen(defaultTableModel.getValueAt(row, 2)+"");
		String ngaySinh = defaultTableModel.getValueAt(row, 3)+"";
		String textGioiTinh = defaultTableModel.getValueAt(row, 4)+"";
		boolean gioiTinh = textGioiTinh.equals("Nam");
		float diemMon1 = Float.valueOf(defaultTableModel.getValueAt(row, 5)+"");
		float diemMon2 = Float.valueOf(defaultTableModel.getValueAt(row, 6)+"");
		float diemMon3 = Float.valueOf(defaultTableModel.getValueAt(row, 7)+"");
		
		this.textField_maSVUnder.setText(maSV+"");
		this.textField_hoTen.setText(tenSV+"");
		this.comboBox_queQuan.setSelectedItem(tinh.getTenTinh()+"");
		this.textField_ngaySinh.setText(ngaySinh+"");
		if (gioiTinh) {
			rdbtn_nam.setSelected(true);
		} else {
			rdbtn_nu.setSelected(false);
		}
		this.textField_diem1.setText(diemMon1+"");
		this.textField_diem2.setText(diemMon2+"");
		this.textField_diem3.setText(diemMon3+"");
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3063)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:141)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:120)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-03-14 23:37:50.635
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3063)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:141)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:120)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-03-14 23:37:50.636
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3063)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:141)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:120)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core 4 4 2023-03-14 23:37:51.234
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package View;

import java.awt.EventQueue;

import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.border.EmptyBorder;

import Model.QLSV_model;
import Model.SinhVien;
import Model.Tinh;

import javax.swing.JMenuBar;
import javax.swing.JMenu;
import javax.swing.JMenuItem;
import javax.swing.JSeparator;
import javax.swing.JLabel;
import java.awt.Font;
import javax.swing.JScrollPane;
import javax.swing.JComboBox;
import javax.swing.JTextField;
import javax.swing.ButtonGroup;
import javax.swing.JButton;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

import Controller.Listener;

import javax.swing.JRadioButton;
import java.awt.event.ActionListener;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.awt.event.ActionEvent;

public class view_QLSV extends JFrame {

	private JPanel contentPane;
	public QLSV_model model;
	private JTextField textField_maSV;
	private JTable table;
	public JTextField textField_maSVUnder;
	public JTextField textField_hoTen;
	public JTextField textField_ngaySinh;
	public JTextField textField_diem1;
	public JTextField textField_diem2;
	public JTextField textField_diem3;
	public JComboBox comboBox_queQuanUnder;
	private JComboBox comboBox_queQuan;
	public ButtonGroup btngr;
	public JRadioButton rdbtn_nam;
	public JRadioButton rdbtn_nu;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					view_QLSV frame = new view_QLSV();
					frame.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the frame.
	 */
	public view_QLSV() {
		model = new QLSV_model();
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setBounds(100, 100, 757, 759);
		setTitle("Chương trình quản lý sinh viên của Trần Phúc Khánh");
		
		JMenuBar menuBar = new JMenuBar();
		setJMenuBar(menuBar);
		
		JMenu menu_file = new JMenu("File");
		menuBar.add(menu_file);
		
		JMenuItem menuItem_open = new JMenuItem("Open");
		menu_file.add(menuItem_open);
		
		JMenuItem mntmClose = new JMenuItem("Close");
		menu_file.add(mntmClose);
		
		JSeparator separator = new JSeparator();
		menu_file.add(separator);
		
		JMenuItem menuItem_exit = new JMenuItem("Exit");
		menu_file.add(menuItem_exit);
		
		JMenu menu_about = new JMenu("About");
		menuBar.add(menu_about);
		
		JMenuItem menuItem_about_me = new JMenuItem("About me");
		menu_about.add(menuItem_about_me);
		contentPane = new JPanel();
		contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));

		setContentPane(contentPane);
		contentPane.setLayout(null);
		
		JLabel label_queQuan = new JLabel("Quê quán");
		label_queQuan.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_queQuan.setBounds(47, 40, 86, 42);
		contentPane.add(label_queQuan);
		
		comboBox_queQuan = new JComboBox();
		ArrayList<Tinh> listTinh = Tinh.getDS_Tinh();
		comboBox_queQuan.addItem("");
		for (Tinh tinh : listTinh) {
			comboBox_queQuan.addItem(tinh.getTenTinh());
		}
		comboBox_queQuan.setFont(new Font("Tahoma", Font.PLAIN, 15));
		comboBox_queQuan.setBounds(140, 40, 102, 43);
		contentPane.add(comboBox_queQuan);
		
		JLabel label_maSinhVien = new JLabel("Mã sinh viên");
		label_maSinhVien.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_maSinhVien.setBounds(306, 40, 110, 42);
		contentPane.add(label_maSinhVien);
		
		textField_maSV = new JTextField();
		textField_maSV.setBounds(426, 40, 102, 43);
		contentPane.add(textField_maSV);
		textField_maSV.setColumns(10);
		
		JButton button_timKiem = new JButton("Tìm kiếm");
		button_timKiem.setFont(new Font("Tahoma", Font.PLAIN, 20));
		button_timKiem.setBounds(591, 40, 127, 43);
		contentPane.add(button_timKiem);
		
		JSeparator separator_1 = new JSeparator();
		separator_1.setBounds(10, 102, 728, 2);
		contentPane.add(separator_1);
		
		JLabel label_danhSachSV = new JLabel("Danh sách SV");
		label_danhSachSV.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_danhSachSV.setBounds(26, 127, 122, 42);
		contentPane.add(label_danhSachSV);
		
		table = new JTable();
		table.setFont(new Font("Tahoma", Font.PLAIN, 10));
		table.setModel(new DefaultTableModel(
			new Object[][] {
			},
			new String[] {
				"Mã SV", "Họ tên", "Quê quán", "Ngày sinh", "Giới tính", "Điểm môn 1", "Điểm môn 2", "Điểm môn 3"
			}
		));
		
		JScrollPane scrollPane = new JScrollPane(table);
		scrollPane.setBounds(26, 179, 696, 92);
		contentPane.add(scrollPane);
		
		JLabel label_thongTinSV = new JLabel("Thông tin SV");
		label_thongTinSV.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_thongTinSV.setBounds(26, 303, 115, 42);
		contentPane.add(label_thongTinSV);
		
		JSeparator separator_2 = new JSeparator();
		separator_2.setBounds(10, 291, 728, 2);
		contentPane.add(separator_2);
		
		JLabel label_maSinhVienUnder = new JLabel("Mã sinh viên");
		label_maSinhVienUnder.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_maSinhVienUnder.setBounds(26, 355, 110, 42);
		contentPane.add(label_maSinhVienUnder);
		
		JLabel label_hoTenUnder = new JLabel("Họ tên");
		label_hoTenUnder.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_hoTenUnder.setBounds(26, 422, 110, 42);
		contentPane.add(label_hoTenUnder);
		
		JLabel label_queQuanUnder = new JLabel("Quê quán");
		label_queQuanUnder.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_queQuanUnder.setBounds(26, 489, 110, 42);
		contentPane.add(label_queQuanUnder);
		
		JLabel label_ngaySinhUnder = new JLabel("Ngày sinh");
		label_ngaySinhUnder.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_ngaySinhUnder.setBounds(26, 556, 110, 42);
		contentPane.add(label_ngaySinhUnder);
		
		textField_maSVUnder = new JTextField();
		textField_maSVUnder.setColumns(10);
		textField_maSVUnder.setBounds(161, 355, 170, 43);
		contentPane.add(textField_maSVUnder);
		
		textField_hoTen = new JTextField();
		textField_hoTen.setColumns(10);
		textField_hoTen.setBounds(161, 422, 170, 43);
		contentPane.add(textField_hoTen);
		
		textField_ngaySinh = new JTextField();
		textField_ngaySinh.setColumns(10);
		textField_ngaySinh.setBounds(161, 556, 170, 43);
		contentPane.add(textField_ngaySinh);
		
		JLabel label_gioiTinhUnder = new JLabel("Giới tính");
		label_gioiTinhUnder.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_gioiTinhUnder.setBounds(426, 355, 110, 42);
		contentPane.add(label_gioiTinhUnder);
		
		JLabel label_diem1Under = new JLabel("Điểm 1");
		label_diem1Under.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_diem1Under.setBounds(426, 422, 110, 42);
		contentPane.add(label_diem1Under);
		
		JLabel label_diem2Under = new JLabel("Điểm 2");
		label_diem2Under.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_diem2Under.setBounds(426, 489, 110, 42);
		contentPane.add(label_diem2Under);
		
		JLabel label_diem3Under = new JLabel("Điểm 3");
		label_diem3Under.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_diem3Under.setBounds(426, 556, 110, 42);
		contentPane.add(label_diem3Under);
		
		textField_diem1 = new JTextField();
		textField_diem1.setColumns(10);
		textField_diem1.setBounds(562, 422, 170, 43);
		contentPane.add(textField_diem1);
		
		textField_diem2 = new JTextField();
		textField_diem2.setColumns(10);
		textField_diem2.setBounds(562, 489, 170, 43);
		contentPane.add(textField_diem2);
		
		textField_diem3 = new JTextField();
		textField_diem3.setColumns(10);
		textField_diem3.setBounds(562, 556, 170, 43);
		contentPane.add(textField_diem3);
		
		rdbtn_nam = new JRadioButton("Nam");
		rdbtn_nam.setFont(new Font("Tahoma", Font.PLAIN, 20));
		rdbtn_nam.setBounds(562, 355, 71, 42);
		contentPane.add(rdbtn_nam);
		rdbtn_nam.setSelected(true);
		
		rdbtn_nu = new JRadioButton("Nữ");
		rdbtn_nu.setFont(new Font("Tahoma", Font.PLAIN, 20));
		rdbtn_nu.setBounds(647, 355, 71, 42);
		contentPane.add(rdbtn_nu);
		
		btngr = new ButtonGroup();
		btngr.add(rdbtn_nam);
		btngr.add(rdbtn_nu);
		
		ActionListener listener = new Listener(this);
		
		JButton btn_them = new JButton("Thêm");
		btn_them.addActionListener(listener);
		btn_them.setFont(new Font("Tahoma", Font.PLAIN, 20));
		btn_them.setBounds(21, 633, 127, 43);
		contentPane.add(btn_them);
		
		JButton btn_xoa = new JButton("Xóa");
		btn_xoa.addActionListener(listener);
		btn_xoa.setFont(new Font("Tahoma", Font.PLAIN, 20));
		btn_xoa.setBounds(595, 633, 127, 43);
		contentPane.add(btn_xoa);
		
		JButton btn_capNhat = new JButton("Cập nhật");
		btn_capNhat.addActionListener(listener);
		btn_capNhat.setFont(new Font("Tahoma", Font.PLAIN, 20));
		btn_capNhat.setBounds(215, 633, 127, 43);
		contentPane.add(btn_capNhat);
		
		JButton btn_luu = new JButton("Lưu");
		btn_luu.addActionListener(listener);
		btn_luu.setFont(new Font("Tahoma", Font.PLAIN, 20));
		btn_luu.setBounds(409, 633, 127, 43);
		contentPane.add(btn_luu);
		
		JSeparator separator_1_1 = new JSeparator();
		separator_1_1.setBounds(10, 615, 728, 2);
		contentPane.add(separator_1_1);
		
		comboBox_queQuanUnder = new JComboBox();
		comboBox_queQuanUnder.addItem("");
		for (Tinh tinh : listTinh) {
			comboBox_queQuanUnder.addItem(tinh.getTenTinh());
		}
		comboBox_queQuanUnder.setBounds(161, 488, 170, 43);
		contentPane.add(comboBox_queQuanUnder);
	}

	public void xoaForm() {
		textField_maSV.setText("");
		textField_maSVUnder.setText("");
		textField_hoTen.setText("");
		textField_ngaySinh.setText("");
		textField_diem1.setText("");
		textField_diem2.setText("");
		textField_diem3.setText("");
		comboBox_queQuanUnder.setSelectedIndex(-1);
		btngr.clearSelection();
	}

	public void themHoacCapNhatSV(SinhVien sv) {
		DefaultTableModel defaultTableModel = (DefaultTableModel) table.getModel();
		if (!this.model.kiemTraTonTai(sv)) {
			this.model.addSV(sv);
			defaultTableModel.addRow(new Object[]{
													sv.getMaSinhVien()+"", 
													sv.getTenSinhVien(),
													sv.getQueQuan().getTenTinh(),
													sv.getNgaySinh().getDate()+"/"+(sv.getNgaySinh().getMonth() + 1)+"/"+(sv.getNgaySinh().getYear()+1900),
													sv.isGioiTinh() ? "Nam" : "Nữ",
													sv.getDiemMon1()+"",
													sv.getDiemMon2()+"",
													sv.getDiemMon3()+""});
		}
		else {
			this.model.update(sv);
			int soDong = defaultTableModel.getRowCount();
			for (int i = 0; i < soDong; i++) {
				String id = defaultTableModel.getValueAt(soDong, 0)+"";
				if (id.equals(sv.getMaSinhVien()+"")) {
					defaultTableModel.getValueAt(sv.getMaSinhVien()+"",i ,0);
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
				}
			}
		}
	}

	public void hienThiThongTinSinhVienDangDuocChon() {
		DefaultTableModel defaultTableModel = (DefaultTableModel) table.getModel();
		int row = table.getSelectedRow();
		
		int maSV = Integer.valueOf(defaultTableModel.getValueAt(row, 0)+"");
		String tenSV = defaultTableModel.getValueAt(row, 1)+"";
		Tinh tinh = Tinh.getTinhByTen(defaultTableModel.getValueAt(row, 2)+"");
		String ngaySinh = defaultTableModel.getValueAt(row, 3)+"";
		String textGioiTinh = defaultTableModel.getValueAt(row, 4)+"";
		boolean gioiTinh = textGioiTinh.equals("Nam");
		float diemMon1 = Float.valueOf(defaultTableModel.getValueAt(row, 5)+"");
		float diemMon2 = Float.valueOf(defaultTableModel.getValueAt(row, 6)+"");
		float diemMon3 = Float.valueOf(defaultTableModel.getValueAt(row, 7)+"");
		
		this.textField_maSVUnder.setText(maSV+"");
		this.textField_hoTen.setText(tenSV+"");
		this.comboBox_queQuan.setSelectedItem(tinh.getTenTinh()+"");
		this.textField_ngaySinh.setText(ngaySinh+"");
		if (gioiTinh) {
			rdbtn_nam.setSelected(true);
		} else {
			rdbtn_nu.setSelected(false);
		}
		this.textField_diem1.setText(diemMon1+"");
		this.textField_diem2.setText(diemMon2+"");
		this.textField_diem3.setText(diemMon3+"");
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3063)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-03-14 23:37:51.235
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3063)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-03-14 23:37:51.236
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3063)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2023-03-14 23:37:52.813
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package View;

import java.awt.EventQueue;

import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.border.EmptyBorder;

import Model.QLSV_model;
import Model.SinhVien;
import Model.Tinh;

import javax.swing.JMenuBar;
import javax.swing.JMenu;
import javax.swing.JMenuItem;
import javax.swing.JSeparator;
import javax.swing.JLabel;
import java.awt.Font;
import javax.swing.JScrollPane;
import javax.swing.JComboBox;
import javax.swing.JTextField;
import javax.swing.ButtonGroup;
import javax.swing.JButton;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

import Controller.Listener;

import javax.swing.JRadioButton;
import java.awt.event.ActionListener;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.awt.event.ActionEvent;

public class view_QLSV extends JFrame {

	private JPanel contentPane;
	public QLSV_model model;
	private JTextField textField_maSV;
	private JTable table;
	public JTextField textField_maSVUnder;
	public JTextField textField_hoTen;
	public JTextField textField_ngaySinh;
	public JTextField textField_diem1;
	public JTextField textField_diem2;
	public JTextField textField_diem3;
	public JComboBox comboBox_queQuanUnder;
	private JComboBox comboBox_queQuan;
	public ButtonGroup btngr;
	public JRadioButton rdbtn_nam;
	public JRadioButton rdbtn_nu;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					view_QLSV frame = new view_QLSV();
					frame.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the frame.
	 */
	public view_QLSV() {
		model = new QLSV_model();
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setBounds(100, 100, 757, 759);
		setTitle("Chương trình quản lý sinh viên của Trần Phúc Khánh");
		
		JMenuBar menuBar = new JMenuBar();
		setJMenuBar(menuBar);
		
		JMenu menu_file = new JMenu("File");
		menuBar.add(menu_file);
		
		JMenuItem menuItem_open = new JMenuItem("Open");
		menu_file.add(menuItem_open);
		
		JMenuItem mntmClose = new JMenuItem("Close");
		menu_file.add(mntmClose);
		
		JSeparator separator = new JSeparator();
		menu_file.add(separator);
		
		JMenuItem menuItem_exit = new JMenuItem("Exit");
		menu_file.add(menuItem_exit);
		
		JMenu menu_about = new JMenu("About");
		menuBar.add(menu_about);
		
		JMenuItem menuItem_about_me = new JMenuItem("About me");
		menu_about.add(menuItem_about_me);
		contentPane = new JPanel();
		contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));

		setContentPane(contentPane);
		contentPane.setLayout(null);
		
		JLabel label_queQuan = new JLabel("Quê quán");
		label_queQuan.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_queQuan.setBounds(47, 40, 86, 42);
		contentPane.add(label_queQuan);
		
		comboBox_queQuan = new JComboBox();
		ArrayList<Tinh> listTinh = Tinh.getDS_Tinh();
		comboBox_queQuan.addItem("");
		for (Tinh tinh : listTinh) {
			comboBox_queQuan.addItem(tinh.getTenTinh());
		}
		comboBox_queQuan.setFont(new Font("Tahoma", Font.PLAIN, 15));
		comboBox_queQuan.setBounds(140, 40, 102, 43);
		contentPane.add(comboBox_queQuan);
		
		JLabel label_maSinhVien = new JLabel("Mã sinh viên");
		label_maSinhVien.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_maSinhVien.setBounds(306, 40, 110, 42);
		contentPane.add(label_maSinhVien);
		
		textField_maSV = new JTextField();
		textField_maSV.setBounds(426, 40, 102, 43);
		contentPane.add(textField_maSV);
		textField_maSV.setColumns(10);
		
		JButton button_timKiem = new JButton("Tìm kiếm");
		button_timKiem.setFont(new Font("Tahoma", Font.PLAIN, 20));
		button_timKiem.setBounds(591, 40, 127, 43);
		contentPane.add(button_timKiem);
		
		JSeparator separator_1 = new JSeparator();
		separator_1.setBounds(10, 102, 728, 2);
		contentPane.add(separator_1);
		
		JLabel label_danhSachSV = new JLabel("Danh sách SV");
		label_danhSachSV.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_danhSachSV.setBounds(26, 127, 122, 42);
		contentPane.add(label_danhSachSV);
		
		table = new JTable();
		table.setFont(new Font("Tahoma", Font.PLAIN, 10));
		table.setModel(new DefaultTableModel(
			new Object[][] {
			},
			new String[] {
				"Mã SV", "Họ tên", "Quê quán", "Ngày sinh", "Giới tính", "Điểm môn 1", "Điểm môn 2", "Điểm môn 3"
			}
		));
		
		JScrollPane scrollPane = new JScrollPane(table);
		scrollPane.setBounds(26, 179, 696, 92);
		contentPane.add(scrollPane);
		
		JLabel label_thongTinSV = new JLabel("Thông tin SV");
		label_thongTinSV.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_thongTinSV.setBounds(26, 303, 115, 42);
		contentPane.add(label_thongTinSV);
		
		JSeparator separator_2 = new JSeparator();
		separator_2.setBounds(10, 291, 728, 2);
		contentPane.add(separator_2);
		
		JLabel label_maSinhVienUnder = new JLabel("Mã sinh viên");
		label_maSinhVienUnder.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_maSinhVienUnder.setBounds(26, 355, 110, 42);
		contentPane.add(label_maSinhVienUnder);
		
		JLabel label_hoTenUnder = new JLabel("Họ tên");
		label_hoTenUnder.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_hoTenUnder.setBounds(26, 422, 110, 42);
		contentPane.add(label_hoTenUnder);
		
		JLabel label_queQuanUnder = new JLabel("Quê quán");
		label_queQuanUnder.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_queQuanUnder.setBounds(26, 489, 110, 42);
		contentPane.add(label_queQuanUnder);
		
		JLabel label_ngaySinhUnder = new JLabel("Ngày sinh");
		label_ngaySinhUnder.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_ngaySinhUnder.setBounds(26, 556, 110, 42);
		contentPane.add(label_ngaySinhUnder);
		
		textField_maSVUnder = new JTextField();
		textField_maSVUnder.setColumns(10);
		textField_maSVUnder.setBounds(161, 355, 170, 43);
		contentPane.add(textField_maSVUnder);
		
		textField_hoTen = new JTextField();
		textField_hoTen.setColumns(10);
		textField_hoTen.setBounds(161, 422, 170, 43);
		contentPane.add(textField_hoTen);
		
		textField_ngaySinh = new JTextField();
		textField_ngaySinh.setColumns(10);
		textField_ngaySinh.setBounds(161, 556, 170, 43);
		contentPane.add(textField_ngaySinh);
		
		JLabel label_gioiTinhUnder = new JLabel("Giới tính");
		label_gioiTinhUnder.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_gioiTinhUnder.setBounds(426, 355, 110, 42);
		contentPane.add(label_gioiTinhUnder);
		
		JLabel label_diem1Under = new JLabel("Điểm 1");
		label_diem1Under.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_diem1Under.setBounds(426, 422, 110, 42);
		contentPane.add(label_diem1Under);
		
		JLabel label_diem2Under = new JLabel("Điểm 2");
		label_diem2Under.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_diem2Under.setBounds(426, 489, 110, 42);
		contentPane.add(label_diem2Under);
		
		JLabel label_diem3Under = new JLabel("Điểm 3");
		label_diem3Under.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_diem3Under.setBounds(426, 556, 110, 42);
		contentPane.add(label_diem3Under);
		
		textField_diem1 = new JTextField();
		textField_diem1.setColumns(10);
		textField_diem1.setBounds(562, 422, 170, 43);
		contentPane.add(textField_diem1);
		
		textField_diem2 = new JTextField();
		textField_diem2.setColumns(10);
		textField_diem2.setBounds(562, 489, 170, 43);
		contentPane.add(textField_diem2);
		
		textField_diem3 = new JTextField();
		textField_diem3.setColumns(10);
		textField_diem3.setBounds(562, 556, 170, 43);
		contentPane.add(textField_diem3);
		
		rdbtn_nam = new JRadioButton("Nam");
		rdbtn_nam.setFont(new Font("Tahoma", Font.PLAIN, 20));
		rdbtn_nam.setBounds(562, 355, 71, 42);
		contentPane.add(rdbtn_nam);
		rdbtn_nam.setSelected(true);
		
		rdbtn_nu = new JRadioButton("Nữ");
		rdbtn_nu.setFont(new Font("Tahoma", Font.PLAIN, 20));
		rdbtn_nu.setBounds(647, 355, 71, 42);
		contentPane.add(rdbtn_nu);
		
		btngr = new ButtonGroup();
		btngr.add(rdbtn_nam);
		btngr.add(rdbtn_nu);
		
		ActionListener listener = new Listener(this);
		
		JButton btn_them = new JButton("Thêm");
		btn_them.addActionListener(listener);
		btn_them.setFont(new Font("Tahoma", Font.PLAIN, 20));
		btn_them.setBounds(21, 633, 127, 43);
		contentPane.add(btn_them);
		
		JButton btn_xoa = new JButton("Xóa");
		btn_xoa.addActionListener(listener);
		btn_xoa.setFont(new Font("Tahoma", Font.PLAIN, 20));
		btn_xoa.setBounds(595, 633, 127, 43);
		contentPane.add(btn_xoa);
		
		JButton btn_capNhat = new JButton("Cập nhật");
		btn_capNhat.addActionListener(listener);
		btn_capNhat.setFont(new Font("Tahoma", Font.PLAIN, 20));
		btn_capNhat.setBounds(215, 633, 127, 43);
		contentPane.add(btn_capNhat);
		
		JButton btn_luu = new JButton("Lưu");
		btn_luu.addActionListener(listener);
		btn_luu.setFont(new Font("Tahoma", Font.PLAIN, 20));
		btn_luu.setBounds(409, 633, 127, 43);
		contentPane.add(btn_luu);
		
		JSeparator separator_1_1 = new JSeparator();
		separator_1_1.setBounds(10, 615, 728, 2);
		contentPane.add(separator_1_1);
		
		comboBox_queQuanUnder = new JComboBox();
		comboBox_queQuanUnder.addItem("");
		for (Tinh tinh : listTinh) {
			comboBox_queQuanUnder.addItem(tinh.getTenTinh());
		}
		comboBox_queQuanUnder.setBounds(161, 488, 170, 43);
		contentPane.add(comboBox_queQuanUnder);
	}

	public void xoaForm() {
		textField_maSV.setText("");
		textField_maSVUnder.setText("");
		textField_hoTen.setText("");
		textField_ngaySinh.setText("");
		textField_diem1.setText("");
		textField_diem2.setText("");
		textField_diem3.setText("");
		comboBox_queQuanUnder.setSelectedIndex(-1);
		btngr.clearSelection();
	}

	public void themHoacCapNhatSV(SinhVien sv) {
		DefaultTableModel defaultTableModel = (DefaultTableModel) table.getModel();
		if (!this.model.kiemTraTonTai(sv)) {
			this.model.addSV(sv);
			defaultTableModel.addRow(new Object[]{
													sv.getMaSinhVien()+"", 
													sv.getTenSinhVien(),
													sv.getQueQuan().getTenTinh(),
													sv.getNgaySinh().getDate()+"/"+(sv.getNgaySinh().getMonth() + 1)+"/"+(sv.getNgaySinh().getYear()+1900),
													sv.isGioiTinh() ? "Nam" : "Nữ",
													sv.getDiemMon1()+"",
													sv.getDiemMon2()+"",
													sv.getDiemMon3()+""});
		}
		else {
			this.model.update(sv);
			int soDong = defaultTableModel.getRowCount();
			for (int i = 0; i < soDong; i++) {
				String id = defaultTableModel.getValueAt(soDong, 0)+"";
				if (id.equals(sv.getMaSinhVien()+"")) {
					defaultTableModel.getValueAt(sv.getMaSinhVien()+"", i ,0);
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
				}
			}
		}
	}

	public void hienThiThongTinSinhVienDangDuocChon() {
		DefaultTableModel defaultTableModel = (DefaultTableModel) table.getModel();
		int row = table.getSelectedRow();
		
		int maSV = Integer.valueOf(defaultTableModel.getValueAt(row, 0)+"");
		String tenSV = defaultTableModel.getValueAt(row, 1)+"";
		Tinh tinh = Tinh.getTinhByTen(defaultTableModel.getValueAt(row, 2)+"");
		String ngaySinh = defaultTableModel.getValueAt(row, 3)+"";
		String textGioiTinh = defaultTableModel.getValueAt(row, 4)+"";
		boolean gioiTinh = textGioiTinh.equals("Nam");
		float diemMon1 = Float.valueOf(defaultTableModel.getValueAt(row, 5)+"");
		float diemMon2 = Float.valueOf(defaultTableModel.getValueAt(row, 6)+"");
		float diemMon3 = Float.valueOf(defaultTableModel.getValueAt(row, 7)+"");
		
		this.textField_maSVUnder.setText(maSV+"");
		this.textField_hoTen.setText(tenSV+"");
		this.comboBox_queQuan.setSelectedItem(tinh.getTenTinh()+"");
		this.textField_ngaySinh.setText(ngaySinh+"");
		if (gioiTinh) {
			rdbtn_nam.setSelected(true);
		} else {
			rdbtn_nu.setSelected(false);
		}
		this.textField_diem1.setText(diemMon1+"");
		this.textField_diem2.setText(diemMon2+"");
		this.textField_diem3.setText(diemMon3+"");
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3063)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:561)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2023-03-14 23:37:52.814
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3063)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:561)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2023-03-14 23:37:52.815
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3063)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:561)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2023-03-14 23:37:52.952
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package View;

import java.awt.EventQueue;

import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.border.EmptyBorder;

import Model.QLSV_model;
import Model.SinhVien;
import Model.Tinh;

import javax.swing.JMenuBar;
import javax.swing.JMenu;
import javax.swing.JMenuItem;
import javax.swing.JSeparator;
import javax.swing.JLabel;
import java.awt.Font;
import javax.swing.JScrollPane;
import javax.swing.JComboBox;
import javax.swing.JTextField;
import javax.swing.ButtonGroup;
import javax.swing.JButton;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

import Controller.Listener;

import javax.swing.JRadioButton;
import java.awt.event.ActionListener;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.awt.event.ActionEvent;

public class view_QLSV extends JFrame {

	private JPanel contentPane;
	public QLSV_model model;
	private JTextField textField_maSV;
	private JTable table;
	public JTextField textField_maSVUnder;
	public JTextField textField_hoTen;
	public JTextField textField_ngaySinh;
	public JTextField textField_diem1;
	public JTextField textField_diem2;
	public JTextField textField_diem3;
	public JComboBox comboBox_queQuanUnder;
	private JComboBox comboBox_queQuan;
	public ButtonGroup btngr;
	public JRadioButton rdbtn_nam;
	public JRadioButton rdbtn_nu;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					view_QLSV frame = new view_QLSV();
					frame.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the frame.
	 */
	public view_QLSV() {
		model = new QLSV_model();
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setBounds(100, 100, 757, 759);
		setTitle("Chương trình quản lý sinh viên của Trần Phúc Khánh");
		
		JMenuBar menuBar = new JMenuBar();
		setJMenuBar(menuBar);
		
		JMenu menu_file = new JMenu("File");
		menuBar.add(menu_file);
		
		JMenuItem menuItem_open = new JMenuItem("Open");
		menu_file.add(menuItem_open);
		
		JMenuItem mntmClose = new JMenuItem("Close");
		menu_file.add(mntmClose);
		
		JSeparator separator = new JSeparator();
		menu_file.add(separator);
		
		JMenuItem menuItem_exit = new JMenuItem("Exit");
		menu_file.add(menuItem_exit);
		
		JMenu menu_about = new JMenu("About");
		menuBar.add(menu_about);
		
		JMenuItem menuItem_about_me = new JMenuItem("About me");
		menu_about.add(menuItem_about_me);
		contentPane = new JPanel();
		contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));

		setContentPane(contentPane);
		contentPane.setLayout(null);
		
		JLabel label_queQuan = new JLabel("Quê quán");
		label_queQuan.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_queQuan.setBounds(47, 40, 86, 42);
		contentPane.add(label_queQuan);
		
		comboBox_queQuan = new JComboBox();
		ArrayList<Tinh> listTinh = Tinh.getDS_Tinh();
		comboBox_queQuan.addItem("");
		for (Tinh tinh : listTinh) {
			comboBox_queQuan.addItem(tinh.getTenTinh());
		}
		comboBox_queQuan.setFont(new Font("Tahoma", Font.PLAIN, 15));
		comboBox_queQuan.setBounds(140, 40, 102, 43);
		contentPane.add(comboBox_queQuan);
		
		JLabel label_maSinhVien = new JLabel("Mã sinh viên");
		label_maSinhVien.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_maSinhVien.setBounds(306, 40, 110, 42);
		contentPane.add(label_maSinhVien);
		
		textField_maSV = new JTextField();
		textField_maSV.setBounds(426, 40, 102, 43);
		contentPane.add(textField_maSV);
		textField_maSV.setColumns(10);
		
		JButton button_timKiem = new JButton("Tìm kiếm");
		button_timKiem.setFont(new Font("Tahoma", Font.PLAIN, 20));
		button_timKiem.setBounds(591, 40, 127, 43);
		contentPane.add(button_timKiem);
		
		JSeparator separator_1 = new JSeparator();
		separator_1.setBounds(10, 102, 728, 2);
		contentPane.add(separator_1);
		
		JLabel label_danhSachSV = new JLabel("Danh sách SV");
		label_danhSachSV.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_danhSachSV.setBounds(26, 127, 122, 42);
		contentPane.add(label_danhSachSV);
		
		table = new JTable();
		table.setFont(new Font("Tahoma", Font.PLAIN, 10));
		table.setModel(new DefaultTableModel(
			new Object[][] {
			},
			new String[] {
				"Mã SV", "Họ tên", "Quê quán", "Ngày sinh", "Giới tính", "Điểm môn 1", "Điểm môn 2", "Điểm môn 3"
			}
		));
		
		JScrollPane scrollPane = new JScrollPane(table);
		scrollPane.setBounds(26, 179, 696, 92);
		contentPane.add(scrollPane);
		
		JLabel label_thongTinSV = new JLabel("Thông tin SV");
		label_thongTinSV.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_thongTinSV.setBounds(26, 303, 115, 42);
		contentPane.add(label_thongTinSV);
		
		JSeparator separator_2 = new JSeparator();
		separator_2.setBounds(10, 291, 728, 2);
		contentPane.add(separator_2);
		
		JLabel label_maSinhVienUnder = new JLabel("Mã sinh viên");
		label_maSinhVienUnder.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_maSinhVienUnder.setBounds(26, 355, 110, 42);
		contentPane.add(label_maSinhVienUnder);
		
		JLabel label_hoTenUnder = new JLabel("Họ tên");
		label_hoTenUnder.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_hoTenUnder.setBounds(26, 422, 110, 42);
		contentPane.add(label_hoTenUnder);
		
		JLabel label_queQuanUnder = new JLabel("Quê quán");
		label_queQuanUnder.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_queQuanUnder.setBounds(26, 489, 110, 42);
		contentPane.add(label_queQuanUnder);
		
		JLabel label_ngaySinhUnder = new JLabel("Ngày sinh");
		label_ngaySinhUnder.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_ngaySinhUnder.setBounds(26, 556, 110, 42);
		contentPane.add(label_ngaySinhUnder);
		
		textField_maSVUnder = new JTextField();
		textField_maSVUnder.setColumns(10);
		textField_maSVUnder.setBounds(161, 355, 170, 43);
		contentPane.add(textField_maSVUnder);
		
		textField_hoTen = new JTextField();
		textField_hoTen.setColumns(10);
		textField_hoTen.setBounds(161, 422, 170, 43);
		contentPane.add(textField_hoTen);
		
		textField_ngaySinh = new JTextField();
		textField_ngaySinh.setColumns(10);
		textField_ngaySinh.setBounds(161, 556, 170, 43);
		contentPane.add(textField_ngaySinh);
		
		JLabel label_gioiTinhUnder = new JLabel("Giới tính");
		label_gioiTinhUnder.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_gioiTinhUnder.setBounds(426, 355, 110, 42);
		contentPane.add(label_gioiTinhUnder);
		
		JLabel label_diem1Under = new JLabel("Điểm 1");
		label_diem1Under.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_diem1Under.setBounds(426, 422, 110, 42);
		contentPane.add(label_diem1Under);
		
		JLabel label_diem2Under = new JLabel("Điểm 2");
		label_diem2Under.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_diem2Under.setBounds(426, 489, 110, 42);
		contentPane.add(label_diem2Under);
		
		JLabel label_diem3Under = new JLabel("Điểm 3");
		label_diem3Under.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_diem3Under.setBounds(426, 556, 110, 42);
		contentPane.add(label_diem3Under);
		
		textField_diem1 = new JTextField();
		textField_diem1.setColumns(10);
		textField_diem1.setBounds(562, 422, 170, 43);
		contentPane.add(textField_diem1);
		
		textField_diem2 = new JTextField();
		textField_diem2.setColumns(10);
		textField_diem2.setBounds(562, 489, 170, 43);
		contentPane.add(textField_diem2);
		
		textField_diem3 = new JTextField();
		textField_diem3.setColumns(10);
		textField_diem3.setBounds(562, 556, 170, 43);
		contentPane.add(textField_diem3);
		
		rdbtn_nam = new JRadioButton("Nam");
		rdbtn_nam.setFont(new Font("Tahoma", Font.PLAIN, 20));
		rdbtn_nam.setBounds(562, 355, 71, 42);
		contentPane.add(rdbtn_nam);
		rdbtn_nam.setSelected(true);
		
		rdbtn_nu = new JRadioButton("Nữ");
		rdbtn_nu.setFont(new Font("Tahoma", Font.PLAIN, 20));
		rdbtn_nu.setBounds(647, 355, 71, 42);
		contentPane.add(rdbtn_nu);
		
		btngr = new ButtonGroup();
		btngr.add(rdbtn_nam);
		btngr.add(rdbtn_nu);
		
		ActionListener listener = new Listener(this);
		
		JButton btn_them = new JButton("Thêm");
		btn_them.addActionListener(listener);
		btn_them.setFont(new Font("Tahoma", Font.PLAIN, 20));
		btn_them.setBounds(21, 633, 127, 43);
		contentPane.add(btn_them);
		
		JButton btn_xoa = new JButton("Xóa");
		btn_xoa.addActionListener(listener);
		btn_xoa.setFont(new Font("Tahoma", Font.PLAIN, 20));
		btn_xoa.setBounds(595, 633, 127, 43);
		contentPane.add(btn_xoa);
		
		JButton btn_capNhat = new JButton("Cập nhật");
		btn_capNhat.addActionListener(listener);
		btn_capNhat.setFont(new Font("Tahoma", Font.PLAIN, 20));
		btn_capNhat.setBounds(215, 633, 127, 43);
		contentPane.add(btn_capNhat);
		
		JButton btn_luu = new JButton("Lưu");
		btn_luu.addActionListener(listener);
		btn_luu.setFont(new Font("Tahoma", Font.PLAIN, 20));
		btn_luu.setBounds(409, 633, 127, 43);
		contentPane.add(btn_luu);
		
		JSeparator separator_1_1 = new JSeparator();
		separator_1_1.setBounds(10, 615, 728, 2);
		contentPane.add(separator_1_1);
		
		comboBox_queQuanUnder = new JComboBox();
		comboBox_queQuanUnder.addItem("");
		for (Tinh tinh : listTinh) {
			comboBox_queQuanUnder.addItem(tinh.getTenTinh());
		}
		comboBox_queQuanUnder.setBounds(161, 488, 170, 43);
		contentPane.add(comboBox_queQuanUnder);
	}

	public void xoaForm() {
		textField_maSV.setText("");
		textField_maSVUnder.setText("");
		textField_hoTen.setText("");
		textField_ngaySinh.setText("");
		textField_diem1.setText("");
		textField_diem2.setText("");
		textField_diem3.setText("");
		comboBox_queQuanUnder.setSelectedIndex(-1);
		btngr.clearSelection();
	}

	public void themHoacCapNhatSV(SinhVien sv) {
		DefaultTableModel defaultTableModel = (DefaultTableModel) table.getModel();
		if (!this.model.kiemTraTonTai(sv)) {
			this.model.addSV(sv);
			defaultTableModel.addRow(new Object[]{
													sv.getMaSinhVien()+"", 
													sv.getTenSinhVien(),
													sv.getQueQuan().getTenTinh(),
													sv.getNgaySinh().getDate()+"/"+(sv.getNgaySinh().getMonth() + 1)+"/"+(sv.getNgaySinh().getYear()+1900),
													sv.isGioiTinh() ? "Nam" : "Nữ",
													sv.getDiemMon1()+"",
													sv.getDiemMon2()+"",
													sv.getDiemMon3()+""});
		}
		else {
			this.model.update(sv);
			int soDong = defaultTableModel.getRowCount();
			for (int i = 0; i < soDong; i++) {
				String id = defaultTableModel.getValueAt(soDong, 0)+"";
				if (id.equals(sv.getMaSinhVien()+"")) {
					defaultTableModel.getValueAt(sv.getMaSinhVien()+"", i ,0);
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
				}
			}
		}
	}

	public void hienThiThongTinSinhVienDangDuocChon() {
		DefaultTableModel defaultTableModel = (DefaultTableModel) table.getModel();
		int row = table.getSelectedRow();
		
		int maSV = Integer.valueOf(defaultTableModel.getValueAt(row, 0)+"");
		String tenSV = defaultTableModel.getValueAt(row, 1)+"";
		Tinh tinh = Tinh.getTinhByTen(defaultTableModel.getValueAt(row, 2)+"");
		String ngaySinh = defaultTableModel.getValueAt(row, 3)+"";
		String textGioiTinh = defaultTableModel.getValueAt(row, 4)+"";
		boolean gioiTinh = textGioiTinh.equals("Nam");
		float diemMon1 = Float.valueOf(defaultTableModel.getValueAt(row, 5)+"");
		float diemMon2 = Float.valueOf(defaultTableModel.getValueAt(row, 6)+"");
		float diemMon3 = Float.valueOf(defaultTableModel.getValueAt(row, 7)+"");
		
		this.textField_maSVUnder.setText(maSV+"");
		this.textField_hoTen.setText(tenSV+"");
		this.comboBox_queQuan.setSelectedItem(tinh.getTenTinh()+"");
		this.textField_ngaySinh.setText(ngaySinh+"");
		if (gioiTinh) {
			rdbtn_nam.setSelected(true);
		} else {
			rdbtn_nu.setSelected(false);
		}
		this.textField_diem1.setText(diemMon1+"");
		this.textField_diem2.setText(diemMon2+"");
		this.textField_diem3.setText(diemMon3+"");
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3063)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-03-14 23:37:52.953
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3063)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-03-14 23:37:52.954
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3063)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2023-03-14 23:37:54.060
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package View;

import java.awt.EventQueue;

import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.border.EmptyBorder;

import Model.QLSV_model;
import Model.SinhVien;
import Model.Tinh;

import javax.swing.JMenuBar;
import javax.swing.JMenu;
import javax.swing.JMenuItem;
import javax.swing.JSeparator;
import javax.swing.JLabel;
import java.awt.Font;
import javax.swing.JScrollPane;
import javax.swing.JComboBox;
import javax.swing.JTextField;
import javax.swing.ButtonGroup;
import javax.swing.JButton;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

import Controller.Listener;

import javax.swing.JRadioButton;
import java.awt.event.ActionListener;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.awt.event.ActionEvent;

public class view_QLSV extends JFrame {

	private JPanel contentPane;
	public QLSV_model model;
	private JTextField textField_maSV;
	private JTable table;
	public JTextField textField_maSVUnder;
	public JTextField textField_hoTen;
	public JTextField textField_ngaySinh;
	public JTextField textField_diem1;
	public JTextField textField_diem2;
	public JTextField textField_diem3;
	public JComboBox comboBox_queQuanUnder;
	private JComboBox comboBox_queQuan;
	public ButtonGroup btngr;
	public JRadioButton rdbtn_nam;
	public JRadioButton rdbtn_nu;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					view_QLSV frame = new view_QLSV();
					frame.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the frame.
	 */
	public view_QLSV() {
		model = new QLSV_model();
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setBounds(100, 100, 757, 759);
		setTitle("Chương trình quản lý sinh viên của Trần Phúc Khánh");
		
		JMenuBar menuBar = new JMenuBar();
		setJMenuBar(menuBar);
		
		JMenu menu_file = new JMenu("File");
		menuBar.add(menu_file);
		
		JMenuItem menuItem_open = new JMenuItem("Open");
		menu_file.add(menuItem_open);
		
		JMenuItem mntmClose = new JMenuItem("Close");
		menu_file.add(mntmClose);
		
		JSeparator separator = new JSeparator();
		menu_file.add(separator);
		
		JMenuItem menuItem_exit = new JMenuItem("Exit");
		menu_file.add(menuItem_exit);
		
		JMenu menu_about = new JMenu("About");
		menuBar.add(menu_about);
		
		JMenuItem menuItem_about_me = new JMenuItem("About me");
		menu_about.add(menuItem_about_me);
		contentPane = new JPanel();
		contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));

		setContentPane(contentPane);
		contentPane.setLayout(null);
		
		JLabel label_queQuan = new JLabel("Quê quán");
		label_queQuan.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_queQuan.setBounds(47, 40, 86, 42);
		contentPane.add(label_queQuan);
		
		comboBox_queQuan = new JComboBox();
		ArrayList<Tinh> listTinh = Tinh.getDS_Tinh();
		comboBox_queQuan.addItem("");
		for (Tinh tinh : listTinh) {
			comboBox_queQuan.addItem(tinh.getTenTinh());
		}
		comboBox_queQuan.setFont(new Font("Tahoma", Font.PLAIN, 15));
		comboBox_queQuan.setBounds(140, 40, 102, 43);
		contentPane.add(comboBox_queQuan);
		
		JLabel label_maSinhVien = new JLabel("Mã sinh viên");
		label_maSinhVien.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_maSinhVien.setBounds(306, 40, 110, 42);
		contentPane.add(label_maSinhVien);
		
		textField_maSV = new JTextField();
		textField_maSV.setBounds(426, 40, 102, 43);
		contentPane.add(textField_maSV);
		textField_maSV.setColumns(10);
		
		JButton button_timKiem = new JButton("Tìm kiếm");
		button_timKiem.setFont(new Font("Tahoma", Font.PLAIN, 20));
		button_timKiem.setBounds(591, 40, 127, 43);
		contentPane.add(button_timKiem);
		
		JSeparator separator_1 = new JSeparator();
		separator_1.setBounds(10, 102, 728, 2);
		contentPane.add(separator_1);
		
		JLabel label_danhSachSV = new JLabel("Danh sách SV");
		label_danhSachSV.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_danhSachSV.setBounds(26, 127, 122, 42);
		contentPane.add(label_danhSachSV);
		
		table = new JTable();
		table.setFont(new Font("Tahoma", Font.PLAIN, 10));
		table.setModel(new DefaultTableModel(
			new Object[][] {
			},
			new String[] {
				"Mã SV", "Họ tên", "Quê quán", "Ngày sinh", "Giới tính", "Điểm môn 1", "Điểm môn 2", "Điểm môn 3"
			}
		));
		
		JScrollPane scrollPane = new JScrollPane(table);
		scrollPane.setBounds(26, 179, 696, 92);
		contentPane.add(scrollPane);
		
		JLabel label_thongTinSV = new JLabel("Thông tin SV");
		label_thongTinSV.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_thongTinSV.setBounds(26, 303, 115, 42);
		contentPane.add(label_thongTinSV);
		
		JSeparator separator_2 = new JSeparator();
		separator_2.setBounds(10, 291, 728, 2);
		contentPane.add(separator_2);
		
		JLabel label_maSinhVienUnder = new JLabel("Mã sinh viên");
		label_maSinhVienUnder.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_maSinhVienUnder.setBounds(26, 355, 110, 42);
		contentPane.add(label_maSinhVienUnder);
		
		JLabel label_hoTenUnder = new JLabel("Họ tên");
		label_hoTenUnder.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_hoTenUnder.setBounds(26, 422, 110, 42);
		contentPane.add(label_hoTenUnder);
		
		JLabel label_queQuanUnder = new JLabel("Quê quán");
		label_queQuanUnder.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_queQuanUnder.setBounds(26, 489, 110, 42);
		contentPane.add(label_queQuanUnder);
		
		JLabel label_ngaySinhUnder = new JLabel("Ngày sinh");
		label_ngaySinhUnder.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_ngaySinhUnder.setBounds(26, 556, 110, 42);
		contentPane.add(label_ngaySinhUnder);
		
		textField_maSVUnder = new JTextField();
		textField_maSVUnder.setColumns(10);
		textField_maSVUnder.setBounds(161, 355, 170, 43);
		contentPane.add(textField_maSVUnder);
		
		textField_hoTen = new JTextField();
		textField_hoTen.setColumns(10);
		textField_hoTen.setBounds(161, 422, 170, 43);
		contentPane.add(textField_hoTen);
		
		textField_ngaySinh = new JTextField();
		textField_ngaySinh.setColumns(10);
		textField_ngaySinh.setBounds(161, 556, 170, 43);
		contentPane.add(textField_ngaySinh);
		
		JLabel label_gioiTinhUnder = new JLabel("Giới tính");
		label_gioiTinhUnder.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_gioiTinhUnder.setBounds(426, 355, 110, 42);
		contentPane.add(label_gioiTinhUnder);
		
		JLabel label_diem1Under = new JLabel("Điểm 1");
		label_diem1Under.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_diem1Under.setBounds(426, 422, 110, 42);
		contentPane.add(label_diem1Under);
		
		JLabel label_diem2Under = new JLabel("Điểm 2");
		label_diem2Under.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_diem2Under.setBounds(426, 489, 110, 42);
		contentPane.add(label_diem2Under);
		
		JLabel label_diem3Under = new JLabel("Điểm 3");
		label_diem3Under.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_diem3Under.setBounds(426, 556, 110, 42);
		contentPane.add(label_diem3Under);
		
		textField_diem1 = new JTextField();
		textField_diem1.setColumns(10);
		textField_diem1.setBounds(562, 422, 170, 43);
		contentPane.add(textField_diem1);
		
		textField_diem2 = new JTextField();
		textField_diem2.setColumns(10);
		textField_diem2.setBounds(562, 489, 170, 43);
		contentPane.add(textField_diem2);
		
		textField_diem3 = new JTextField();
		textField_diem3.setColumns(10);
		textField_diem3.setBounds(562, 556, 170, 43);
		contentPane.add(textField_diem3);
		
		rdbtn_nam = new JRadioButton("Nam");
		rdbtn_nam.setFont(new Font("Tahoma", Font.PLAIN, 20));
		rdbtn_nam.setBounds(562, 355, 71, 42);
		contentPane.add(rdbtn_nam);
		rdbtn_nam.setSelected(true);
		
		rdbtn_nu = new JRadioButton("Nữ");
		rdbtn_nu.setFont(new Font("Tahoma", Font.PLAIN, 20));
		rdbtn_nu.setBounds(647, 355, 71, 42);
		contentPane.add(rdbtn_nu);
		
		btngr = new ButtonGroup();
		btngr.add(rdbtn_nam);
		btngr.add(rdbtn_nu);
		
		ActionListener listener = new Listener(this);
		
		JButton btn_them = new JButton("Thêm");
		btn_them.addActionListener(listener);
		btn_them.setFont(new Font("Tahoma", Font.PLAIN, 20));
		btn_them.setBounds(21, 633, 127, 43);
		contentPane.add(btn_them);
		
		JButton btn_xoa = new JButton("Xóa");
		btn_xoa.addActionListener(listener);
		btn_xoa.setFont(new Font("Tahoma", Font.PLAIN, 20));
		btn_xoa.setBounds(595, 633, 127, 43);
		contentPane.add(btn_xoa);
		
		JButton btn_capNhat = new JButton("Cập nhật");
		btn_capNhat.addActionListener(listener);
		btn_capNhat.setFont(new Font("Tahoma", Font.PLAIN, 20));
		btn_capNhat.setBounds(215, 633, 127, 43);
		contentPane.add(btn_capNhat);
		
		JButton btn_luu = new JButton("Lưu");
		btn_luu.addActionListener(listener);
		btn_luu.setFont(new Font("Tahoma", Font.PLAIN, 20));
		btn_luu.setBounds(409, 633, 127, 43);
		contentPane.add(btn_luu);
		
		JSeparator separator_1_1 = new JSeparator();
		separator_1_1.setBounds(10, 615, 728, 2);
		contentPane.add(separator_1_1);
		
		comboBox_queQuanUnder = new JComboBox();
		comboBox_queQuanUnder.addItem("");
		for (Tinh tinh : listTinh) {
			comboBox_queQuanUnder.addItem(tinh.getTenTinh());
		}
		comboBox_queQuanUnder.setBounds(161, 488, 170, 43);
		contentPane.add(comboBox_queQuanUnder);
	}

	public void xoaForm() {
		textField_maSV.setText("");
		textField_maSVUnder.setText("");
		textField_hoTen.setText("");
		textField_ngaySinh.setText("");
		textField_diem1.setText("");
		textField_diem2.setText("");
		textField_diem3.setText("");
		comboBox_queQuanUnder.setSelectedIndex(-1);
		btngr.clearSelection();
	}

	public void themHoacCapNhatSV(SinhVien sv) {
		DefaultTableModel defaultTableModel = (DefaultTableModel) table.getModel();
		if (!this.model.kiemTraTonTai(sv)) {
			this.model.addSV(sv);
			defaultTableModel.addRow(new Object[]{
													sv.getMaSinhVien()+"", 
													sv.getTenSinhVien(),
													sv.getQueQuan().getTenTinh(),
													sv.getNgaySinh().getDate()+"/"+(sv.getNgaySinh().getMonth() + 1)+"/"+(sv.getNgaySinh().getYear()+1900),
													sv.isGioiTinh() ? "Nam" : "Nữ",
													sv.getDiemMon1()+"",
													sv.getDiemMon2()+"",
													sv.getDiemMon3()+""});
		}
		else {
			this.model.update(sv);
			int soDong = defaultTableModel.getRowCount();
			for (int i = 0; i < soDong; i++) {
				String id = defaultTableModel.getValueAt(soDong, 0)+"";
				if (id.equals(sv.getMaSinhVien()+"")) {
					defaultTableModel.getValueAt(sv.getMaSinhVien()+"", i ,0);
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
				}
			}
		}
	}

	public void hienThiThongTinSinhVienDangDuocChon() {
		DefaultTableModel defaultTableModel = (DefaultTableModel) table.getModel();
		int row = table.getSelectedRow();
		
		int maSV = Integer.valueOf(defaultTableModel.getValueAt(row, 0)+"");
		String tenSV = defaultTableModel.getValueAt(row, 1)+"";
		Tinh tinh = Tinh.getTinhByTen(defaultTableModel.getValueAt(row, 2)+"");
		String ngaySinh = defaultTableModel.getValueAt(row, 3)+"";
		String textGioiTinh = defaultTableModel.getValueAt(row, 4)+"";
		boolean gioiTinh = textGioiTinh.equals("Nam");
		float diemMon1 = Float.valueOf(defaultTableModel.getValueAt(row, 5)+"");
		float diemMon2 = Float.valueOf(defaultTableModel.getValueAt(row, 6)+"");
		float diemMon3 = Float.valueOf(defaultTableModel.getValueAt(row, 7)+"");
		
		this.textField_maSVUnder.setText(maSV+"");
		this.textField_hoTen.setText(tenSV+"");
		this.comboBox_queQuan.setSelectedItem(tinh.getTenTinh()+"");
		this.textField_ngaySinh.setText(ngaySinh+"");
		if (gioiTinh) {
			rdbtn_nam.setSelected(true);
		} else {
			rdbtn_nu.setSelected(false);
		}
		this.textField_diem1.setText(diemMon1+"");
		this.textField_diem2.setText(diemMon2+"");
		this.textField_diem3.setText(diemMon3+"");
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3063)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-03-14 23:37:54.061
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3063)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-03-14 23:37:54.062
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3063)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2023-03-14 23:37:55.724
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package View;

import java.awt.EventQueue;

import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.border.EmptyBorder;

import Model.QLSV_model;
import Model.SinhVien;
import Model.Tinh;

import javax.swing.JMenuBar;
import javax.swing.JMenu;
import javax.swing.JMenuItem;
import javax.swing.JSeparator;
import javax.swing.JLabel;
import java.awt.Font;
import javax.swing.JScrollPane;
import javax.swing.JComboBox;
import javax.swing.JTextField;
import javax.swing.ButtonGroup;
import javax.swing.JButton;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

import Controller.Listener;

import javax.swing.JRadioButton;
import java.awt.event.ActionListener;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.awt.event.ActionEvent;

public class view_QLSV extends JFrame {

	private JPanel contentPane;
	public QLSV_model model;
	private JTextField textField_maSV;
	private JTable table;
	public JTextField textField_maSVUnder;
	public JTextField textField_hoTen;
	public JTextField textField_ngaySinh;
	public JTextField textField_diem1;
	public JTextField textField_diem2;
	public JTextField textField_diem3;
	public JComboBox comboBox_queQuanUnder;
	private JComboBox comboBox_queQuan;
	public ButtonGroup btngr;
	public JRadioButton rdbtn_nam;
	public JRadioButton rdbtn_nu;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					view_QLSV frame = new view_QLSV();
					frame.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the frame.
	 */
	public view_QLSV() {
		model = new QLSV_model();
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setBounds(100, 100, 757, 759);
		setTitle("Chương trình quản lý sinh viên của Trần Phúc Khánh");
		
		JMenuBar menuBar = new JMenuBar();
		setJMenuBar(menuBar);
		
		JMenu menu_file = new JMenu("File");
		menuBar.add(menu_file);
		
		JMenuItem menuItem_open = new JMenuItem("Open");
		menu_file.add(menuItem_open);
		
		JMenuItem mntmClose = new JMenuItem("Close");
		menu_file.add(mntmClose);
		
		JSeparator separator = new JSeparator();
		menu_file.add(separator);
		
		JMenuItem menuItem_exit = new JMenuItem("Exit");
		menu_file.add(menuItem_exit);
		
		JMenu menu_about = new JMenu("About");
		menuBar.add(menu_about);
		
		JMenuItem menuItem_about_me = new JMenuItem("About me");
		menu_about.add(menuItem_about_me);
		contentPane = new JPanel();
		contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));

		setContentPane(contentPane);
		contentPane.setLayout(null);
		
		JLabel label_queQuan = new JLabel("Quê quán");
		label_queQuan.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_queQuan.setBounds(47, 40, 86, 42);
		contentPane.add(label_queQuan);
		
		comboBox_queQuan = new JComboBox();
		ArrayList<Tinh> listTinh = Tinh.getDS_Tinh();
		comboBox_queQuan.addItem("");
		for (Tinh tinh : listTinh) {
			comboBox_queQuan.addItem(tinh.getTenTinh());
		}
		comboBox_queQuan.setFont(new Font("Tahoma", Font.PLAIN, 15));
		comboBox_queQuan.setBounds(140, 40, 102, 43);
		contentPane.add(comboBox_queQuan);
		
		JLabel label_maSinhVien = new JLabel("Mã sinh viên");
		label_maSinhVien.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_maSinhVien.setBounds(306, 40, 110, 42);
		contentPane.add(label_maSinhVien);
		
		textField_maSV = new JTextField();
		textField_maSV.setBounds(426, 40, 102, 43);
		contentPane.add(textField_maSV);
		textField_maSV.setColumns(10);
		
		JButton button_timKiem = new JButton("Tìm kiếm");
		button_timKiem.setFont(new Font("Tahoma", Font.PLAIN, 20));
		button_timKiem.setBounds(591, 40, 127, 43);
		contentPane.add(button_timKiem);
		
		JSeparator separator_1 = new JSeparator();
		separator_1.setBounds(10, 102, 728, 2);
		contentPane.add(separator_1);
		
		JLabel label_danhSachSV = new JLabel("Danh sách SV");
		label_danhSachSV.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_danhSachSV.setBounds(26, 127, 122, 42);
		contentPane.add(label_danhSachSV);
		
		table = new JTable();
		table.setFont(new Font("Tahoma", Font.PLAIN, 10));
		table.setModel(new DefaultTableModel(
			new Object[][] {
			},
			new String[] {
				"Mã SV", "Họ tên", "Quê quán", "Ngày sinh", "Giới tính", "Điểm môn 1", "Điểm môn 2", "Điểm môn 3"
			}
		));
		
		JScrollPane scrollPane = new JScrollPane(table);
		scrollPane.setBounds(26, 179, 696, 92);
		contentPane.add(scrollPane);
		
		JLabel label_thongTinSV = new JLabel("Thông tin SV");
		label_thongTinSV.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_thongTinSV.setBounds(26, 303, 115, 42);
		contentPane.add(label_thongTinSV);
		
		JSeparator separator_2 = new JSeparator();
		separator_2.setBounds(10, 291, 728, 2);
		contentPane.add(separator_2);
		
		JLabel label_maSinhVienUnder = new JLabel("Mã sinh viên");
		label_maSinhVienUnder.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_maSinhVienUnder.setBounds(26, 355, 110, 42);
		contentPane.add(label_maSinhVienUnder);
		
		JLabel label_hoTenUnder = new JLabel("Họ tên");
		label_hoTenUnder.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_hoTenUnder.setBounds(26, 422, 110, 42);
		contentPane.add(label_hoTenUnder);
		
		JLabel label_queQuanUnder = new JLabel("Quê quán");
		label_queQuanUnder.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_queQuanUnder.setBounds(26, 489, 110, 42);
		contentPane.add(label_queQuanUnder);
		
		JLabel label_ngaySinhUnder = new JLabel("Ngày sinh");
		label_ngaySinhUnder.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_ngaySinhUnder.setBounds(26, 556, 110, 42);
		contentPane.add(label_ngaySinhUnder);
		
		textField_maSVUnder = new JTextField();
		textField_maSVUnder.setColumns(10);
		textField_maSVUnder.setBounds(161, 355, 170, 43);
		contentPane.add(textField_maSVUnder);
		
		textField_hoTen = new JTextField();
		textField_hoTen.setColumns(10);
		textField_hoTen.setBounds(161, 422, 170, 43);
		contentPane.add(textField_hoTen);
		
		textField_ngaySinh = new JTextField();
		textField_ngaySinh.setColumns(10);
		textField_ngaySinh.setBounds(161, 556, 170, 43);
		contentPane.add(textField_ngaySinh);
		
		JLabel label_gioiTinhUnder = new JLabel("Giới tính");
		label_gioiTinhUnder.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_gioiTinhUnder.setBounds(426, 355, 110, 42);
		contentPane.add(label_gioiTinhUnder);
		
		JLabel label_diem1Under = new JLabel("Điểm 1");
		label_diem1Under.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_diem1Under.setBounds(426, 422, 110, 42);
		contentPane.add(label_diem1Under);
		
		JLabel label_diem2Under = new JLabel("Điểm 2");
		label_diem2Under.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_diem2Under.setBounds(426, 489, 110, 42);
		contentPane.add(label_diem2Under);
		
		JLabel label_diem3Under = new JLabel("Điểm 3");
		label_diem3Under.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_diem3Under.setBounds(426, 556, 110, 42);
		contentPane.add(label_diem3Under);
		
		textField_diem1 = new JTextField();
		textField_diem1.setColumns(10);
		textField_diem1.setBounds(562, 422, 170, 43);
		contentPane.add(textField_diem1);
		
		textField_diem2 = new JTextField();
		textField_diem2.setColumns(10);
		textField_diem2.setBounds(562, 489, 170, 43);
		contentPane.add(textField_diem2);
		
		textField_diem3 = new JTextField();
		textField_diem3.setColumns(10);
		textField_diem3.setBounds(562, 556, 170, 43);
		contentPane.add(textField_diem3);
		
		rdbtn_nam = new JRadioButton("Nam");
		rdbtn_nam.setFont(new Font("Tahoma", Font.PLAIN, 20));
		rdbtn_nam.setBounds(562, 355, 71, 42);
		contentPane.add(rdbtn_nam);
		rdbtn_nam.setSelected(true);
		
		rdbtn_nu = new JRadioButton("Nữ");
		rdbtn_nu.setFont(new Font("Tahoma", Font.PLAIN, 20));
		rdbtn_nu.setBounds(647, 355, 71, 42);
		contentPane.add(rdbtn_nu);
		
		btngr = new ButtonGroup();
		btngr.add(rdbtn_nam);
		btngr.add(rdbtn_nu);
		
		ActionListener listener = new Listener(this);
		
		JButton btn_them = new JButton("Thêm");
		btn_them.addActionListener(listener);
		btn_them.setFont(new Font("Tahoma", Font.PLAIN, 20));
		btn_them.setBounds(21, 633, 127, 43);
		contentPane.add(btn_them);
		
		JButton btn_xoa = new JButton("Xóa");
		btn_xoa.addActionListener(listener);
		btn_xoa.setFont(new Font("Tahoma", Font.PLAIN, 20));
		btn_xoa.setBounds(595, 633, 127, 43);
		contentPane.add(btn_xoa);
		
		JButton btn_capNhat = new JButton("Cập nhật");
		btn_capNhat.addActionListener(listener);
		btn_capNhat.setFont(new Font("Tahoma", Font.PLAIN, 20));
		btn_capNhat.setBounds(215, 633, 127, 43);
		contentPane.add(btn_capNhat);
		
		JButton btn_luu = new JButton("Lưu");
		btn_luu.addActionListener(listener);
		btn_luu.setFont(new Font("Tahoma", Font.PLAIN, 20));
		btn_luu.setBounds(409, 633, 127, 43);
		contentPane.add(btn_luu);
		
		JSeparator separator_1_1 = new JSeparator();
		separator_1_1.setBounds(10, 615, 728, 2);
		contentPane.add(separator_1_1);
		
		comboBox_queQuanUnder = new JComboBox();
		comboBox_queQuanUnder.addItem("");
		for (Tinh tinh : listTinh) {
			comboBox_queQuanUnder.addItem(tinh.getTenTinh());
		}
		comboBox_queQuanUnder.setBounds(161, 488, 170, 43);
		contentPane.add(comboBox_queQuanUnder);
	}

	public void xoaForm() {
		textField_maSV.setText("");
		textField_maSVUnder.setText("");
		textField_hoTen.setText("");
		textField_ngaySinh.setText("");
		textField_diem1.setText("");
		textField_diem2.setText("");
		textField_diem3.setText("");
		comboBox_queQuanUnder.setSelectedIndex(-1);
		btngr.clearSelection();
	}

	public void themHoacCapNhatSV(SinhVien sv) {
		DefaultTableModel defaultTableModel = (DefaultTableModel) table.getModel();
		if (!this.model.kiemTraTonTai(sv)) {
			this.model.addSV(sv);
			defaultTableModel.addRow(new Object[]{
													sv.getMaSinhVien()+"", 
													sv.getTenSinhVien(),
													sv.getQueQuan().getTenTinh(),
													sv.getNgaySinh().getDate()+"/"+(sv.getNgaySinh().getMonth() + 1)+"/"+(sv.getNgaySinh().getYear()+1900),
													sv.isGioiTinh() ? "Nam" : "Nữ",
													sv.getDiemMon1()+"",
													sv.getDiemMon2()+"",
													sv.getDiemMon3()+""});
		}
		else {
			this.model.update(sv);
			int soDong = defaultTableModel.getRowCount();
			for (int i = 0; i < soDong; i++) {
				String id = defaultTableModel.getValueAt(soDong, 0)+"";
				if (id.equals(sv.getMaSinhVien()+"")) {
					defaultTableModel.getValueAt(sv.getMaSinhVien()+"", i ,0);
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
				}
			}
		}
	}

	public void hienThiThongTinSinhVienDangDuocChon() {
		DefaultTableModel defaultTableModel = (DefaultTableModel) table.getModel();
		int row = table.getSelectedRow();
		
		int maSV = Integer.valueOf(defaultTableModel.getValueAt(row, 0)+"");
		String tenSV = defaultTableModel.getValueAt(row, 1)+"";
		Tinh tinh = Tinh.getTinhByTen(defaultTableModel.getValueAt(row, 2)+"");
		String ngaySinh = defaultTableModel.getValueAt(row, 3)+"";
		String textGioiTinh = defaultTableModel.getValueAt(row, 4)+"";
		boolean gioiTinh = textGioiTinh.equals("Nam");
		float diemMon1 = Float.valueOf(defaultTableModel.getValueAt(row, 5)+"");
		float diemMon2 = Float.valueOf(defaultTableModel.getValueAt(row, 6)+"");
		float diemMon3 = Float.valueOf(defaultTableModel.getValueAt(row, 7)+"");
		
		this.textField_maSVUnder.setText(maSV+"");
		this.textField_hoTen.setText(tenSV+"");
		this.comboBox_queQuan.setSelectedItem(tinh.getTenTinh()+"");
		this.textField_ngaySinh.setText(ngaySinh+"");
		if (gioiTinh) {
			rdbtn_nam.setSelected(true);
		} else {
			rdbtn_nu.setSelected(false);
		}
		this.textField_diem1.setText(diemMon1+"");
		this.textField_diem2.setText(diemMon2+"");
		this.textField_diem3.setText(diemMon3+"");
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3063)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-03-14 23:37:55.725
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3063)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-03-14 23:37:55.727
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3063)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2023-03-14 23:37:56.356
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package View;

import java.awt.EventQueue;

import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.border.EmptyBorder;

import Model.QLSV_model;
import Model.SinhVien;
import Model.Tinh;

import javax.swing.JMenuBar;
import javax.swing.JMenu;
import javax.swing.JMenuItem;
import javax.swing.JSeparator;
import javax.swing.JLabel;
import java.awt.Font;
import javax.swing.JScrollPane;
import javax.swing.JComboBox;
import javax.swing.JTextField;
import javax.swing.ButtonGroup;
import javax.swing.JButton;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

import Controller.Listener;

import javax.swing.JRadioButton;
import java.awt.event.ActionListener;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.awt.event.ActionEvent;

public class view_QLSV extends JFrame {

	private JPanel contentPane;
	public QLSV_model model;
	private JTextField textField_maSV;
	private JTable table;
	public JTextField textField_maSVUnder;
	public JTextField textField_hoTen;
	public JTextField textField_ngaySinh;
	public JTextField textField_diem1;
	public JTextField textField_diem2;
	public JTextField textField_diem3;
	public JComboBox comboBox_queQuanUnder;
	private JComboBox comboBox_queQuan;
	public ButtonGroup btngr;
	public JRadioButton rdbtn_nam;
	public JRadioButton rdbtn_nu;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					view_QLSV frame = new view_QLSV();
					frame.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the frame.
	 */
	public view_QLSV() {
		model = new QLSV_model();
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setBounds(100, 100, 757, 759);
		setTitle("Chương trình quản lý sinh viên của Trần Phúc Khánh");
		
		JMenuBar menuBar = new JMenuBar();
		setJMenuBar(menuBar);
		
		JMenu menu_file = new JMenu("File");
		menuBar.add(menu_file);
		
		JMenuItem menuItem_open = new JMenuItem("Open");
		menu_file.add(menuItem_open);
		
		JMenuItem mntmClose = new JMenuItem("Close");
		menu_file.add(mntmClose);
		
		JSeparator separator = new JSeparator();
		menu_file.add(separator);
		
		JMenuItem menuItem_exit = new JMenuItem("Exit");
		menu_file.add(menuItem_exit);
		
		JMenu menu_about = new JMenu("About");
		menuBar.add(menu_about);
		
		JMenuItem menuItem_about_me = new JMenuItem("About me");
		menu_about.add(menuItem_about_me);
		contentPane = new JPanel();
		contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));

		setContentPane(contentPane);
		contentPane.setLayout(null);
		
		JLabel label_queQuan = new JLabel("Quê quán");
		label_queQuan.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_queQuan.setBounds(47, 40, 86, 42);
		contentPane.add(label_queQuan);
		
		comboBox_queQuan = new JComboBox();
		ArrayList<Tinh> listTinh = Tinh.getDS_Tinh();
		comboBox_queQuan.addItem("");
		for (Tinh tinh : listTinh) {
			comboBox_queQuan.addItem(tinh.getTenTinh());
		}
		comboBox_queQuan.setFont(new Font("Tahoma", Font.PLAIN, 15));
		comboBox_queQuan.setBounds(140, 40, 102, 43);
		contentPane.add(comboBox_queQuan);
		
		JLabel label_maSinhVien = new JLabel("Mã sinh viên");
		label_maSinhVien.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_maSinhVien.setBounds(306, 40, 110, 42);
		contentPane.add(label_maSinhVien);
		
		textField_maSV = new JTextField();
		textField_maSV.setBounds(426, 40, 102, 43);
		contentPane.add(textField_maSV);
		textField_maSV.setColumns(10);
		
		JButton button_timKiem = new JButton("Tìm kiếm");
		button_timKiem.setFont(new Font("Tahoma", Font.PLAIN, 20));
		button_timKiem.setBounds(591, 40, 127, 43);
		contentPane.add(button_timKiem);
		
		JSeparator separator_1 = new JSeparator();
		separator_1.setBounds(10, 102, 728, 2);
		contentPane.add(separator_1);
		
		JLabel label_danhSachSV = new JLabel("Danh sách SV");
		label_danhSachSV.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_danhSachSV.setBounds(26, 127, 122, 42);
		contentPane.add(label_danhSachSV);
		
		table = new JTable();
		table.setFont(new Font("Tahoma", Font.PLAIN, 10));
		table.setModel(new DefaultTableModel(
			new Object[][] {
			},
			new String[] {
				"Mã SV", "Họ tên", "Quê quán", "Ngày sinh", "Giới tính", "Điểm môn 1", "Điểm môn 2", "Điểm môn 3"
			}
		));
		
		JScrollPane scrollPane = new JScrollPane(table);
		scrollPane.setBounds(26, 179, 696, 92);
		contentPane.add(scrollPane);
		
		JLabel label_thongTinSV = new JLabel("Thông tin SV");
		label_thongTinSV.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_thongTinSV.setBounds(26, 303, 115, 42);
		contentPane.add(label_thongTinSV);
		
		JSeparator separator_2 = new JSeparator();
		separator_2.setBounds(10, 291, 728, 2);
		contentPane.add(separator_2);
		
		JLabel label_maSinhVienUnder = new JLabel("Mã sinh viên");
		label_maSinhVienUnder.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_maSinhVienUnder.setBounds(26, 355, 110, 42);
		contentPane.add(label_maSinhVienUnder);
		
		JLabel label_hoTenUnder = new JLabel("Họ tên");
		label_hoTenUnder.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_hoTenUnder.setBounds(26, 422, 110, 42);
		contentPane.add(label_hoTenUnder);
		
		JLabel label_queQuanUnder = new JLabel("Quê quán");
		label_queQuanUnder.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_queQuanUnder.setBounds(26, 489, 110, 42);
		contentPane.add(label_queQuanUnder);
		
		JLabel label_ngaySinhUnder = new JLabel("Ngày sinh");
		label_ngaySinhUnder.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_ngaySinhUnder.setBounds(26, 556, 110, 42);
		contentPane.add(label_ngaySinhUnder);
		
		textField_maSVUnder = new JTextField();
		textField_maSVUnder.setColumns(10);
		textField_maSVUnder.setBounds(161, 355, 170, 43);
		contentPane.add(textField_maSVUnder);
		
		textField_hoTen = new JTextField();
		textField_hoTen.setColumns(10);
		textField_hoTen.setBounds(161, 422, 170, 43);
		contentPane.add(textField_hoTen);
		
		textField_ngaySinh = new JTextField();
		textField_ngaySinh.setColumns(10);
		textField_ngaySinh.setBounds(161, 556, 170, 43);
		contentPane.add(textField_ngaySinh);
		
		JLabel label_gioiTinhUnder = new JLabel("Giới tính");
		label_gioiTinhUnder.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_gioiTinhUnder.setBounds(426, 355, 110, 42);
		contentPane.add(label_gioiTinhUnder);
		
		JLabel label_diem1Under = new JLabel("Điểm 1");
		label_diem1Under.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_diem1Under.setBounds(426, 422, 110, 42);
		contentPane.add(label_diem1Under);
		
		JLabel label_diem2Under = new JLabel("Điểm 2");
		label_diem2Under.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_diem2Under.setBounds(426, 489, 110, 42);
		contentPane.add(label_diem2Under);
		
		JLabel label_diem3Under = new JLabel("Điểm 3");
		label_diem3Under.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_diem3Under.setBounds(426, 556, 110, 42);
		contentPane.add(label_diem3Under);
		
		textField_diem1 = new JTextField();
		textField_diem1.setColumns(10);
		textField_diem1.setBounds(562, 422, 170, 43);
		contentPane.add(textField_diem1);
		
		textField_diem2 = new JTextField();
		textField_diem2.setColumns(10);
		textField_diem2.setBounds(562, 489, 170, 43);
		contentPane.add(textField_diem2);
		
		textField_diem3 = new JTextField();
		textField_diem3.setColumns(10);
		textField_diem3.setBounds(562, 556, 170, 43);
		contentPane.add(textField_diem3);
		
		rdbtn_nam = new JRadioButton("Nam");
		rdbtn_nam.setFont(new Font("Tahoma", Font.PLAIN, 20));
		rdbtn_nam.setBounds(562, 355, 71, 42);
		contentPane.add(rdbtn_nam);
		rdbtn_nam.setSelected(true);
		
		rdbtn_nu = new JRadioButton("Nữ");
		rdbtn_nu.setFont(new Font("Tahoma", Font.PLAIN, 20));
		rdbtn_nu.setBounds(647, 355, 71, 42);
		contentPane.add(rdbtn_nu);
		
		btngr = new ButtonGroup();
		btngr.add(rdbtn_nam);
		btngr.add(rdbtn_nu);
		
		ActionListener listener = new Listener(this);
		
		JButton btn_them = new JButton("Thêm");
		btn_them.addActionListener(listener);
		btn_them.setFont(new Font("Tahoma", Font.PLAIN, 20));
		btn_them.setBounds(21, 633, 127, 43);
		contentPane.add(btn_them);
		
		JButton btn_xoa = new JButton("Xóa");
		btn_xoa.addActionListener(listener);
		btn_xoa.setFont(new Font("Tahoma", Font.PLAIN, 20));
		btn_xoa.setBounds(595, 633, 127, 43);
		contentPane.add(btn_xoa);
		
		JButton btn_capNhat = new JButton("Cập nhật");
		btn_capNhat.addActionListener(listener);
		btn_capNhat.setFont(new Font("Tahoma", Font.PLAIN, 20));
		btn_capNhat.setBounds(215, 633, 127, 43);
		contentPane.add(btn_capNhat);
		
		JButton btn_luu = new JButton("Lưu");
		btn_luu.addActionListener(listener);
		btn_luu.setFont(new Font("Tahoma", Font.PLAIN, 20));
		btn_luu.setBounds(409, 633, 127, 43);
		contentPane.add(btn_luu);
		
		JSeparator separator_1_1 = new JSeparator();
		separator_1_1.setBounds(10, 615, 728, 2);
		contentPane.add(separator_1_1);
		
		comboBox_queQuanUnder = new JComboBox();
		comboBox_queQuanUnder.addItem("");
		for (Tinh tinh : listTinh) {
			comboBox_queQuanUnder.addItem(tinh.getTenTinh());
		}
		comboBox_queQuanUnder.setBounds(161, 488, 170, 43);
		contentPane.add(comboBox_queQuanUnder);
	}

	public void xoaForm() {
		textField_maSV.setText("");
		textField_maSVUnder.setText("");
		textField_hoTen.setText("");
		textField_ngaySinh.setText("");
		textField_diem1.setText("");
		textField_diem2.setText("");
		textField_diem3.setText("");
		comboBox_queQuanUnder.setSelectedIndex(-1);
		btngr.clearSelection();
	}

	public void themHoacCapNhatSV(SinhVien sv) {
		DefaultTableModel defaultTableModel = (DefaultTableModel) table.getModel();
		if (!this.model.kiemTraTonTai(sv)) {
			this.model.addSV(sv);
			defaultTableModel.addRow(new Object[]{
													sv.getMaSinhVien()+"", 
													sv.getTenSinhVien(),
													sv.getQueQuan().getTenTinh(),
													sv.getNgaySinh().getDate()+"/"+(sv.getNgaySinh().getMonth() + 1)+"/"+(sv.getNgaySinh().getYear()+1900),
													sv.isGioiTinh() ? "Nam" : "Nữ",
													sv.getDiemMon1()+"",
													sv.getDiemMon2()+"",
													sv.getDiemMon3()+""});
		}
		else {
			this.model.update(sv);
			int soDong = defaultTableModel.getRowCount();
			for (int i = 0; i < soDong; i++) {
				String id = defaultTableModel.getValueAt(soDong, 0)+"";
				if (id.equals(sv.getMaSinhVien()+"")) {
					defaultTableModel.getValueAt(sv.getMaSinhVien()+"", i,0);
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
				}
			}
		}
	}

	public void hienThiThongTinSinhVienDangDuocChon() {
		DefaultTableModel defaultTableModel = (DefaultTableModel) table.getModel();
		int row = table.getSelectedRow();
		
		int maSV = Integer.valueOf(defaultTableModel.getValueAt(row, 0)+"");
		String tenSV = defaultTableModel.getValueAt(row, 1)+"";
		Tinh tinh = Tinh.getTinhByTen(defaultTableModel.getValueAt(row, 2)+"");
		String ngaySinh = defaultTableModel.getValueAt(row, 3)+"";
		String textGioiTinh = defaultTableModel.getValueAt(row, 4)+"";
		boolean gioiTinh = textGioiTinh.equals("Nam");
		float diemMon1 = Float.valueOf(defaultTableModel.getValueAt(row, 5)+"");
		float diemMon2 = Float.valueOf(defaultTableModel.getValueAt(row, 6)+"");
		float diemMon3 = Float.valueOf(defaultTableModel.getValueAt(row, 7)+"");
		
		this.textField_maSVUnder.setText(maSV+"");
		this.textField_hoTen.setText(tenSV+"");
		this.comboBox_queQuan.setSelectedItem(tinh.getTenTinh()+"");
		this.textField_ngaySinh.setText(ngaySinh+"");
		if (gioiTinh) {
			rdbtn_nam.setSelected(true);
		} else {
			rdbtn_nu.setSelected(false);
		}
		this.textField_diem1.setText(diemMon1+"");
		this.textField_diem2.setText(diemMon2+"");
		this.textField_diem3.setText(diemMon3+"");
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3063)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:561)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2023-03-14 23:37:56.357
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3063)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:561)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2023-03-14 23:37:56.357
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3063)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:561)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2023-03-14 23:37:56.455
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package View;

import java.awt.EventQueue;

import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.border.EmptyBorder;

import Model.QLSV_model;
import Model.SinhVien;
import Model.Tinh;

import javax.swing.JMenuBar;
import javax.swing.JMenu;
import javax.swing.JMenuItem;
import javax.swing.JSeparator;
import javax.swing.JLabel;
import java.awt.Font;
import javax.swing.JScrollPane;
import javax.swing.JComboBox;
import javax.swing.JTextField;
import javax.swing.ButtonGroup;
import javax.swing.JButton;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

import Controller.Listener;

import javax.swing.JRadioButton;
import java.awt.event.ActionListener;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.awt.event.ActionEvent;

public class view_QLSV extends JFrame {

	private JPanel contentPane;
	public QLSV_model model;
	private JTextField textField_maSV;
	private JTable table;
	public JTextField textField_maSVUnder;
	public JTextField textField_hoTen;
	public JTextField textField_ngaySinh;
	public JTextField textField_diem1;
	public JTextField textField_diem2;
	public JTextField textField_diem3;
	public JComboBox comboBox_queQuanUnder;
	private JComboBox comboBox_queQuan;
	public ButtonGroup btngr;
	public JRadioButton rdbtn_nam;
	public JRadioButton rdbtn_nu;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					view_QLSV frame = new view_QLSV();
					frame.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the frame.
	 */
	public view_QLSV() {
		model = new QLSV_model();
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setBounds(100, 100, 757, 759);
		setTitle("Chương trình quản lý sinh viên của Trần Phúc Khánh");
		
		JMenuBar menuBar = new JMenuBar();
		setJMenuBar(menuBar);
		
		JMenu menu_file = new JMenu("File");
		menuBar.add(menu_file);
		
		JMenuItem menuItem_open = new JMenuItem("Open");
		menu_file.add(menuItem_open);
		
		JMenuItem mntmClose = new JMenuItem("Close");
		menu_file.add(mntmClose);
		
		JSeparator separator = new JSeparator();
		menu_file.add(separator);
		
		JMenuItem menuItem_exit = new JMenuItem("Exit");
		menu_file.add(menuItem_exit);
		
		JMenu menu_about = new JMenu("About");
		menuBar.add(menu_about);
		
		JMenuItem menuItem_about_me = new JMenuItem("About me");
		menu_about.add(menuItem_about_me);
		contentPane = new JPanel();
		contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));

		setContentPane(contentPane);
		contentPane.setLayout(null);
		
		JLabel label_queQuan = new JLabel("Quê quán");
		label_queQuan.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_queQuan.setBounds(47, 40, 86, 42);
		contentPane.add(label_queQuan);
		
		comboBox_queQuan = new JComboBox();
		ArrayList<Tinh> listTinh = Tinh.getDS_Tinh();
		comboBox_queQuan.addItem("");
		for (Tinh tinh : listTinh) {
			comboBox_queQuan.addItem(tinh.getTenTinh());
		}
		comboBox_queQuan.setFont(new Font("Tahoma", Font.PLAIN, 15));
		comboBox_queQuan.setBounds(140, 40, 102, 43);
		contentPane.add(comboBox_queQuan);
		
		JLabel label_maSinhVien = new JLabel("Mã sinh viên");
		label_maSinhVien.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_maSinhVien.setBounds(306, 40, 110, 42);
		contentPane.add(label_maSinhVien);
		
		textField_maSV = new JTextField();
		textField_maSV.setBounds(426, 40, 102, 43);
		contentPane.add(textField_maSV);
		textField_maSV.setColumns(10);
		
		JButton button_timKiem = new JButton("Tìm kiếm");
		button_timKiem.setFont(new Font("Tahoma", Font.PLAIN, 20));
		button_timKiem.setBounds(591, 40, 127, 43);
		contentPane.add(button_timKiem);
		
		JSeparator separator_1 = new JSeparator();
		separator_1.setBounds(10, 102, 728, 2);
		contentPane.add(separator_1);
		
		JLabel label_danhSachSV = new JLabel("Danh sách SV");
		label_danhSachSV.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_danhSachSV.setBounds(26, 127, 122, 42);
		contentPane.add(label_danhSachSV);
		
		table = new JTable();
		table.setFont(new Font("Tahoma", Font.PLAIN, 10));
		table.setModel(new DefaultTableModel(
			new Object[][] {
			},
			new String[] {
				"Mã SV", "Họ tên", "Quê quán", "Ngày sinh", "Giới tính", "Điểm môn 1", "Điểm môn 2", "Điểm môn 3"
			}
		));
		
		JScrollPane scrollPane = new JScrollPane(table);
		scrollPane.setBounds(26, 179, 696, 92);
		contentPane.add(scrollPane);
		
		JLabel label_thongTinSV = new JLabel("Thông tin SV");
		label_thongTinSV.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_thongTinSV.setBounds(26, 303, 115, 42);
		contentPane.add(label_thongTinSV);
		
		JSeparator separator_2 = new JSeparator();
		separator_2.setBounds(10, 291, 728, 2);
		contentPane.add(separator_2);
		
		JLabel label_maSinhVienUnder = new JLabel("Mã sinh viên");
		label_maSinhVienUnder.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_maSinhVienUnder.setBounds(26, 355, 110, 42);
		contentPane.add(label_maSinhVienUnder);
		
		JLabel label_hoTenUnder = new JLabel("Họ tên");
		label_hoTenUnder.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_hoTenUnder.setBounds(26, 422, 110, 42);
		contentPane.add(label_hoTenUnder);
		
		JLabel label_queQuanUnder = new JLabel("Quê quán");
		label_queQuanUnder.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_queQuanUnder.setBounds(26, 489, 110, 42);
		contentPane.add(label_queQuanUnder);
		
		JLabel label_ngaySinhUnder = new JLabel("Ngày sinh");
		label_ngaySinhUnder.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_ngaySinhUnder.setBounds(26, 556, 110, 42);
		contentPane.add(label_ngaySinhUnder);
		
		textField_maSVUnder = new JTextField();
		textField_maSVUnder.setColumns(10);
		textField_maSVUnder.setBounds(161, 355, 170, 43);
		contentPane.add(textField_maSVUnder);
		
		textField_hoTen = new JTextField();
		textField_hoTen.setColumns(10);
		textField_hoTen.setBounds(161, 422, 170, 43);
		contentPane.add(textField_hoTen);
		
		textField_ngaySinh = new JTextField();
		textField_ngaySinh.setColumns(10);
		textField_ngaySinh.setBounds(161, 556, 170, 43);
		contentPane.add(textField_ngaySinh);
		
		JLabel label_gioiTinhUnder = new JLabel("Giới tính");
		label_gioiTinhUnder.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_gioiTinhUnder.setBounds(426, 355, 110, 42);
		contentPane.add(label_gioiTinhUnder);
		
		JLabel label_diem1Under = new JLabel("Điểm 1");
		label_diem1Under.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_diem1Under.setBounds(426, 422, 110, 42);
		contentPane.add(label_diem1Under);
		
		JLabel label_diem2Under = new JLabel("Điểm 2");
		label_diem2Under.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_diem2Under.setBounds(426, 489, 110, 42);
		contentPane.add(label_diem2Under);
		
		JLabel label_diem3Under = new JLabel("Điểm 3");
		label_diem3Under.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_diem3Under.setBounds(426, 556, 110, 42);
		contentPane.add(label_diem3Under);
		
		textField_diem1 = new JTextField();
		textField_diem1.setColumns(10);
		textField_diem1.setBounds(562, 422, 170, 43);
		contentPane.add(textField_diem1);
		
		textField_diem2 = new JTextField();
		textField_diem2.setColumns(10);
		textField_diem2.setBounds(562, 489, 170, 43);
		contentPane.add(textField_diem2);
		
		textField_diem3 = new JTextField();
		textField_diem3.setColumns(10);
		textField_diem3.setBounds(562, 556, 170, 43);
		contentPane.add(textField_diem3);
		
		rdbtn_nam = new JRadioButton("Nam");
		rdbtn_nam.setFont(new Font("Tahoma", Font.PLAIN, 20));
		rdbtn_nam.setBounds(562, 355, 71, 42);
		contentPane.add(rdbtn_nam);
		rdbtn_nam.setSelected(true);
		
		rdbtn_nu = new JRadioButton("Nữ");
		rdbtn_nu.setFont(new Font("Tahoma", Font.PLAIN, 20));
		rdbtn_nu.setBounds(647, 355, 71, 42);
		contentPane.add(rdbtn_nu);
		
		btngr = new ButtonGroup();
		btngr.add(rdbtn_nam);
		btngr.add(rdbtn_nu);
		
		ActionListener listener = new Listener(this);
		
		JButton btn_them = new JButton("Thêm");
		btn_them.addActionListener(listener);
		btn_them.setFont(new Font("Tahoma", Font.PLAIN, 20));
		btn_them.setBounds(21, 633, 127, 43);
		contentPane.add(btn_them);
		
		JButton btn_xoa = new JButton("Xóa");
		btn_xoa.addActionListener(listener);
		btn_xoa.setFont(new Font("Tahoma", Font.PLAIN, 20));
		btn_xoa.setBounds(595, 633, 127, 43);
		contentPane.add(btn_xoa);
		
		JButton btn_capNhat = new JButton("Cập nhật");
		btn_capNhat.addActionListener(listener);
		btn_capNhat.setFont(new Font("Tahoma", Font.PLAIN, 20));
		btn_capNhat.setBounds(215, 633, 127, 43);
		contentPane.add(btn_capNhat);
		
		JButton btn_luu = new JButton("Lưu");
		btn_luu.addActionListener(listener);
		btn_luu.setFont(new Font("Tahoma", Font.PLAIN, 20));
		btn_luu.setBounds(409, 633, 127, 43);
		contentPane.add(btn_luu);
		
		JSeparator separator_1_1 = new JSeparator();
		separator_1_1.setBounds(10, 615, 728, 2);
		contentPane.add(separator_1_1);
		
		comboBox_queQuanUnder = new JComboBox();
		comboBox_queQuanUnder.addItem("");
		for (Tinh tinh : listTinh) {
			comboBox_queQuanUnder.addItem(tinh.getTenTinh());
		}
		comboBox_queQuanUnder.setBounds(161, 488, 170, 43);
		contentPane.add(comboBox_queQuanUnder);
	}

	public void xoaForm() {
		textField_maSV.setText("");
		textField_maSVUnder.setText("");
		textField_hoTen.setText("");
		textField_ngaySinh.setText("");
		textField_diem1.setText("");
		textField_diem2.setText("");
		textField_diem3.setText("");
		comboBox_queQuanUnder.setSelectedIndex(-1);
		btngr.clearSelection();
	}

	public void themHoacCapNhatSV(SinhVien sv) {
		DefaultTableModel defaultTableModel = (DefaultTableModel) table.getModel();
		if (!this.model.kiemTraTonTai(sv)) {
			this.model.addSV(sv);
			defaultTableModel.addRow(new Object[]{
													sv.getMaSinhVien()+"", 
													sv.getTenSinhVien(),
													sv.getQueQuan().getTenTinh(),
													sv.getNgaySinh().getDate()+"/"+(sv.getNgaySinh().getMonth() + 1)+"/"+(sv.getNgaySinh().getYear()+1900),
													sv.isGioiTinh() ? "Nam" : "Nữ",
													sv.getDiemMon1()+"",
													sv.getDiemMon2()+"",
													sv.getDiemMon3()+""});
		}
		else {
			this.model.update(sv);
			int soDong = defaultTableModel.getRowCount();
			for (int i = 0; i < soDong; i++) {
				String id = defaultTableModel.getValueAt(soDong, 0)+"";
				if (id.equals(sv.getMaSinhVien()+"")) {
					defaultTableModel.getValueAt(sv.getMaSinhVien()+"", i,0);
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
				}
			}
		}
	}

	public void hienThiThongTinSinhVienDangDuocChon() {
		DefaultTableModel defaultTableModel = (DefaultTableModel) table.getModel();
		int row = table.getSelectedRow();
		
		int maSV = Integer.valueOf(defaultTableModel.getValueAt(row, 0)+"");
		String tenSV = defaultTableModel.getValueAt(row, 1)+"";
		Tinh tinh = Tinh.getTinhByTen(defaultTableModel.getValueAt(row, 2)+"");
		String ngaySinh = defaultTableModel.getValueAt(row, 3)+"";
		String textGioiTinh = defaultTableModel.getValueAt(row, 4)+"";
		boolean gioiTinh = textGioiTinh.equals("Nam");
		float diemMon1 = Float.valueOf(defaultTableModel.getValueAt(row, 5)+"");
		float diemMon2 = Float.valueOf(defaultTableModel.getValueAt(row, 6)+"");
		float diemMon3 = Float.valueOf(defaultTableModel.getValueAt(row, 7)+"");
		
		this.textField_maSVUnder.setText(maSV+"");
		this.textField_hoTen.setText(tenSV+"");
		this.comboBox_queQuan.setSelectedItem(tinh.getTenTinh()+"");
		this.textField_ngaySinh.setText(ngaySinh+"");
		if (gioiTinh) {
			rdbtn_nam.setSelected(true);
		} else {
			rdbtn_nu.setSelected(false);
		}
		this.textField_diem1.setText(diemMon1+"");
		this.textField_diem2.setText(diemMon2+"");
		this.textField_diem3.setText(diemMon3+"");
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3063)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-03-14 23:37:56.456
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3063)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-03-14 23:37:56.457
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3063)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2023-03-14 23:37:57.188
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package View;

import java.awt.EventQueue;

import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.border.EmptyBorder;

import Model.QLSV_model;
import Model.SinhVien;
import Model.Tinh;

import javax.swing.JMenuBar;
import javax.swing.JMenu;
import javax.swing.JMenuItem;
import javax.swing.JSeparator;
import javax.swing.JLabel;
import java.awt.Font;
import javax.swing.JScrollPane;
import javax.swing.JComboBox;
import javax.swing.JTextField;
import javax.swing.ButtonGroup;
import javax.swing.JButton;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

import Controller.Listener;

import javax.swing.JRadioButton;
import java.awt.event.ActionListener;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.awt.event.ActionEvent;

public class view_QLSV extends JFrame {

	private JPanel contentPane;
	public QLSV_model model;
	private JTextField textField_maSV;
	private JTable table;
	public JTextField textField_maSVUnder;
	public JTextField textField_hoTen;
	public JTextField textField_ngaySinh;
	public JTextField textField_diem1;
	public JTextField textField_diem2;
	public JTextField textField_diem3;
	public JComboBox comboBox_queQuanUnder;
	private JComboBox comboBox_queQuan;
	public ButtonGroup btngr;
	public JRadioButton rdbtn_nam;
	public JRadioButton rdbtn_nu;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					view_QLSV frame = new view_QLSV();
					frame.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the frame.
	 */
	public view_QLSV() {
		model = new QLSV_model();
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setBounds(100, 100, 757, 759);
		setTitle("Chương trình quản lý sinh viên của Trần Phúc Khánh");
		
		JMenuBar menuBar = new JMenuBar();
		setJMenuBar(menuBar);
		
		JMenu menu_file = new JMenu("File");
		menuBar.add(menu_file);
		
		JMenuItem menuItem_open = new JMenuItem("Open");
		menu_file.add(menuItem_open);
		
		JMenuItem mntmClose = new JMenuItem("Close");
		menu_file.add(mntmClose);
		
		JSeparator separator = new JSeparator();
		menu_file.add(separator);
		
		JMenuItem menuItem_exit = new JMenuItem("Exit");
		menu_file.add(menuItem_exit);
		
		JMenu menu_about = new JMenu("About");
		menuBar.add(menu_about);
		
		JMenuItem menuItem_about_me = new JMenuItem("About me");
		menu_about.add(menuItem_about_me);
		contentPane = new JPanel();
		contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));

		setContentPane(contentPane);
		contentPane.setLayout(null);
		
		JLabel label_queQuan = new JLabel("Quê quán");
		label_queQuan.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_queQuan.setBounds(47, 40, 86, 42);
		contentPane.add(label_queQuan);
		
		comboBox_queQuan = new JComboBox();
		ArrayList<Tinh> listTinh = Tinh.getDS_Tinh();
		comboBox_queQuan.addItem("");
		for (Tinh tinh : listTinh) {
			comboBox_queQuan.addItem(tinh.getTenTinh());
		}
		comboBox_queQuan.setFont(new Font("Tahoma", Font.PLAIN, 15));
		comboBox_queQuan.setBounds(140, 40, 102, 43);
		contentPane.add(comboBox_queQuan);
		
		JLabel label_maSinhVien = new JLabel("Mã sinh viên");
		label_maSinhVien.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_maSinhVien.setBounds(306, 40, 110, 42);
		contentPane.add(label_maSinhVien);
		
		textField_maSV = new JTextField();
		textField_maSV.setBounds(426, 40, 102, 43);
		contentPane.add(textField_maSV);
		textField_maSV.setColumns(10);
		
		JButton button_timKiem = new JButton("Tìm kiếm");
		button_timKiem.setFont(new Font("Tahoma", Font.PLAIN, 20));
		button_timKiem.setBounds(591, 40, 127, 43);
		contentPane.add(button_timKiem);
		
		JSeparator separator_1 = new JSeparator();
		separator_1.setBounds(10, 102, 728, 2);
		contentPane.add(separator_1);
		
		JLabel label_danhSachSV = new JLabel("Danh sách SV");
		label_danhSachSV.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_danhSachSV.setBounds(26, 127, 122, 42);
		contentPane.add(label_danhSachSV);
		
		table = new JTable();
		table.setFont(new Font("Tahoma", Font.PLAIN, 10));
		table.setModel(new DefaultTableModel(
			new Object[][] {
			},
			new String[] {
				"Mã SV", "Họ tên", "Quê quán", "Ngày sinh", "Giới tính", "Điểm môn 1", "Điểm môn 2", "Điểm môn 3"
			}
		));
		
		JScrollPane scrollPane = new JScrollPane(table);
		scrollPane.setBounds(26, 179, 696, 92);
		contentPane.add(scrollPane);
		
		JLabel label_thongTinSV = new JLabel("Thông tin SV");
		label_thongTinSV.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_thongTinSV.setBounds(26, 303, 115, 42);
		contentPane.add(label_thongTinSV);
		
		JSeparator separator_2 = new JSeparator();
		separator_2.setBounds(10, 291, 728, 2);
		contentPane.add(separator_2);
		
		JLabel label_maSinhVienUnder = new JLabel("Mã sinh viên");
		label_maSinhVienUnder.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_maSinhVienUnder.setBounds(26, 355, 110, 42);
		contentPane.add(label_maSinhVienUnder);
		
		JLabel label_hoTenUnder = new JLabel("Họ tên");
		label_hoTenUnder.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_hoTenUnder.setBounds(26, 422, 110, 42);
		contentPane.add(label_hoTenUnder);
		
		JLabel label_queQuanUnder = new JLabel("Quê quán");
		label_queQuanUnder.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_queQuanUnder.setBounds(26, 489, 110, 42);
		contentPane.add(label_queQuanUnder);
		
		JLabel label_ngaySinhUnder = new JLabel("Ngày sinh");
		label_ngaySinhUnder.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_ngaySinhUnder.setBounds(26, 556, 110, 42);
		contentPane.add(label_ngaySinhUnder);
		
		textField_maSVUnder = new JTextField();
		textField_maSVUnder.setColumns(10);
		textField_maSVUnder.setBounds(161, 355, 170, 43);
		contentPane.add(textField_maSVUnder);
		
		textField_hoTen = new JTextField();
		textField_hoTen.setColumns(10);
		textField_hoTen.setBounds(161, 422, 170, 43);
		contentPane.add(textField_hoTen);
		
		textField_ngaySinh = new JTextField();
		textField_ngaySinh.setColumns(10);
		textField_ngaySinh.setBounds(161, 556, 170, 43);
		contentPane.add(textField_ngaySinh);
		
		JLabel label_gioiTinhUnder = new JLabel("Giới tính");
		label_gioiTinhUnder.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_gioiTinhUnder.setBounds(426, 355, 110, 42);
		contentPane.add(label_gioiTinhUnder);
		
		JLabel label_diem1Under = new JLabel("Điểm 1");
		label_diem1Under.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_diem1Under.setBounds(426, 422, 110, 42);
		contentPane.add(label_diem1Under);
		
		JLabel label_diem2Under = new JLabel("Điểm 2");
		label_diem2Under.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_diem2Under.setBounds(426, 489, 110, 42);
		contentPane.add(label_diem2Under);
		
		JLabel label_diem3Under = new JLabel("Điểm 3");
		label_diem3Under.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_diem3Under.setBounds(426, 556, 110, 42);
		contentPane.add(label_diem3Under);
		
		textField_diem1 = new JTextField();
		textField_diem1.setColumns(10);
		textField_diem1.setBounds(562, 422, 170, 43);
		contentPane.add(textField_diem1);
		
		textField_diem2 = new JTextField();
		textField_diem2.setColumns(10);
		textField_diem2.setBounds(562, 489, 170, 43);
		contentPane.add(textField_diem2);
		
		textField_diem3 = new JTextField();
		textField_diem3.setColumns(10);
		textField_diem3.setBounds(562, 556, 170, 43);
		contentPane.add(textField_diem3);
		
		rdbtn_nam = new JRadioButton("Nam");
		rdbtn_nam.setFont(new Font("Tahoma", Font.PLAIN, 20));
		rdbtn_nam.setBounds(562, 355, 71, 42);
		contentPane.add(rdbtn_nam);
		rdbtn_nam.setSelected(true);
		
		rdbtn_nu = new JRadioButton("Nữ");
		rdbtn_nu.setFont(new Font("Tahoma", Font.PLAIN, 20));
		rdbtn_nu.setBounds(647, 355, 71, 42);
		contentPane.add(rdbtn_nu);
		
		btngr = new ButtonGroup();
		btngr.add(rdbtn_nam);
		btngr.add(rdbtn_nu);
		
		ActionListener listener = new Listener(this);
		
		JButton btn_them = new JButton("Thêm");
		btn_them.addActionListener(listener);
		btn_them.setFont(new Font("Tahoma", Font.PLAIN, 20));
		btn_them.setBounds(21, 633, 127, 43);
		contentPane.add(btn_them);
		
		JButton btn_xoa = new JButton("Xóa");
		btn_xoa.addActionListener(listener);
		btn_xoa.setFont(new Font("Tahoma", Font.PLAIN, 20));
		btn_xoa.setBounds(595, 633, 127, 43);
		contentPane.add(btn_xoa);
		
		JButton btn_capNhat = new JButton("Cập nhật");
		btn_capNhat.addActionListener(listener);
		btn_capNhat.setFont(new Font("Tahoma", Font.PLAIN, 20));
		btn_capNhat.setBounds(215, 633, 127, 43);
		contentPane.add(btn_capNhat);
		
		JButton btn_luu = new JButton("Lưu");
		btn_luu.addActionListener(listener);
		btn_luu.setFont(new Font("Tahoma", Font.PLAIN, 20));
		btn_luu.setBounds(409, 633, 127, 43);
		contentPane.add(btn_luu);
		
		JSeparator separator_1_1 = new JSeparator();
		separator_1_1.setBounds(10, 615, 728, 2);
		contentPane.add(separator_1_1);
		
		comboBox_queQuanUnder = new JComboBox();
		comboBox_queQuanUnder.addItem("");
		for (Tinh tinh : listTinh) {
			comboBox_queQuanUnder.addItem(tinh.getTenTinh());
		}
		comboBox_queQuanUnder.setBounds(161, 488, 170, 43);
		contentPane.add(comboBox_queQuanUnder);
	}

	public void xoaForm() {
		textField_maSV.setText("");
		textField_maSVUnder.setText("");
		textField_hoTen.setText("");
		textField_ngaySinh.setText("");
		textField_diem1.setText("");
		textField_diem2.setText("");
		textField_diem3.setText("");
		comboBox_queQuanUnder.setSelectedIndex(-1);
		btngr.clearSelection();
	}

	public void themHoacCapNhatSV(SinhVien sv) {
		DefaultTableModel defaultTableModel = (DefaultTableModel) table.getModel();
		if (!this.model.kiemTraTonTai(sv)) {
			this.model.addSV(sv);
			defaultTableModel.addRow(new Object[]{
													sv.getMaSinhVien()+"", 
													sv.getTenSinhVien(),
													sv.getQueQuan().getTenTinh(),
													sv.getNgaySinh().getDate()+"/"+(sv.getNgaySinh().getMonth() + 1)+"/"+(sv.getNgaySinh().getYear()+1900),
													sv.isGioiTinh() ? "Nam" : "Nữ",
													sv.getDiemMon1()+"",
													sv.getDiemMon2()+"",
													sv.getDiemMon3()+""});
		}
		else {
			this.model.update(sv);
			int soDong = defaultTableModel.getRowCount();
			for (int i = 0; i < soDong; i++) {
				String id = defaultTableModel.getValueAt(soDong, 0)+"";
				if (id.equals(sv.getMaSinhVien()+"")) {
					defaultTableModel.getValueAt(sv.getMaSinhVien()+"", i,0);
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
				}
			}
		}
	}

	public void hienThiThongTinSinhVienDangDuocChon() {
		DefaultTableModel defaultTableModel = (DefaultTableModel) table.getModel();
		int row = table.getSelectedRow();
		
		int maSV = Integer.valueOf(defaultTableModel.getValueAt(row, 0)+"");
		String tenSV = defaultTableModel.getValueAt(row, 1)+"";
		Tinh tinh = Tinh.getTinhByTen(defaultTableModel.getValueAt(row, 2)+"");
		String ngaySinh = defaultTableModel.getValueAt(row, 3)+"";
		String textGioiTinh = defaultTableModel.getValueAt(row, 4)+"";
		boolean gioiTinh = textGioiTinh.equals("Nam");
		float diemMon1 = Float.valueOf(defaultTableModel.getValueAt(row, 5)+"");
		float diemMon2 = Float.valueOf(defaultTableModel.getValueAt(row, 6)+"");
		float diemMon3 = Float.valueOf(defaultTableModel.getValueAt(row, 7)+"");
		
		this.textField_maSVUnder.setText(maSV+"");
		this.textField_hoTen.setText(tenSV+"");
		this.comboBox_queQuan.setSelectedItem(tinh.getTenTinh()+"");
		this.textField_ngaySinh.setText(ngaySinh+"");
		if (gioiTinh) {
			rdbtn_nam.setSelected(true);
		} else {
			rdbtn_nu.setSelected(false);
		}
		this.textField_diem1.setText(diemMon1+"");
		this.textField_diem2.setText(diemMon2+"");
		this.textField_diem3.setText(diemMon3+"");
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3063)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-03-14 23:37:57.189
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3063)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-03-14 23:37:57.189
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3063)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2023-03-14 23:37:59.723
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package View;

import java.awt.EventQueue;

import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.border.EmptyBorder;

import Model.QLSV_model;
import Model.SinhVien;
import Model.Tinh;

import javax.swing.JMenuBar;
import javax.swing.JMenu;
import javax.swing.JMenuItem;
import javax.swing.JSeparator;
import javax.swing.JLabel;
import java.awt.Font;
import javax.swing.JScrollPane;
import javax.swing.JComboBox;
import javax.swing.JTextField;
import javax.swing.ButtonGroup;
import javax.swing.JButton;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

import Controller.Listener;

import javax.swing.JRadioButton;
import java.awt.event.ActionListener;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.awt.event.ActionEvent;

public class view_QLSV extends JFrame {

	private JPanel contentPane;
	public QLSV_model model;
	private JTextField textField_maSV;
	private JTable table;
	public JTextField textField_maSVUnder;
	public JTextField textField_hoTen;
	public JTextField textField_ngaySinh;
	public JTextField textField_diem1;
	public JTextField textField_diem2;
	public JTextField textField_diem3;
	public JComboBox comboBox_queQuanUnder;
	private JComboBox comboBox_queQuan;
	public ButtonGroup btngr;
	public JRadioButton rdbtn_nam;
	public JRadioButton rdbtn_nu;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					view_QLSV frame = new view_QLSV();
					frame.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the frame.
	 */
	public view_QLSV() {
		model = new QLSV_model();
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setBounds(100, 100, 757, 759);
		setTitle("Chương trình quản lý sinh viên của Trần Phúc Khánh");
		
		JMenuBar menuBar = new JMenuBar();
		setJMenuBar(menuBar);
		
		JMenu menu_file = new JMenu("File");
		menuBar.add(menu_file);
		
		JMenuItem menuItem_open = new JMenuItem("Open");
		menu_file.add(menuItem_open);
		
		JMenuItem mntmClose = new JMenuItem("Close");
		menu_file.add(mntmClose);
		
		JSeparator separator = new JSeparator();
		menu_file.add(separator);
		
		JMenuItem menuItem_exit = new JMenuItem("Exit");
		menu_file.add(menuItem_exit);
		
		JMenu menu_about = new JMenu("About");
		menuBar.add(menu_about);
		
		JMenuItem menuItem_about_me = new JMenuItem("About me");
		menu_about.add(menuItem_about_me);
		contentPane = new JPanel();
		contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));

		setContentPane(contentPane);
		contentPane.setLayout(null);
		
		JLabel label_queQuan = new JLabel("Quê quán");
		label_queQuan.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_queQuan.setBounds(47, 40, 86, 42);
		contentPane.add(label_queQuan);
		
		comboBox_queQuan = new JComboBox();
		ArrayList<Tinh> listTinh = Tinh.getDS_Tinh();
		comboBox_queQuan.addItem("");
		for (Tinh tinh : listTinh) {
			comboBox_queQuan.addItem(tinh.getTenTinh());
		}
		comboBox_queQuan.setFont(new Font("Tahoma", Font.PLAIN, 15));
		comboBox_queQuan.setBounds(140, 40, 102, 43);
		contentPane.add(comboBox_queQuan);
		
		JLabel label_maSinhVien = new JLabel("Mã sinh viên");
		label_maSinhVien.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_maSinhVien.setBounds(306, 40, 110, 42);
		contentPane.add(label_maSinhVien);
		
		textField_maSV = new JTextField();
		textField_maSV.setBounds(426, 40, 102, 43);
		contentPane.add(textField_maSV);
		textField_maSV.setColumns(10);
		
		JButton button_timKiem = new JButton("Tìm kiếm");
		button_timKiem.setFont(new Font("Tahoma", Font.PLAIN, 20));
		button_timKiem.setBounds(591, 40, 127, 43);
		contentPane.add(button_timKiem);
		
		JSeparator separator_1 = new JSeparator();
		separator_1.setBounds(10, 102, 728, 2);
		contentPane.add(separator_1);
		
		JLabel label_danhSachSV = new JLabel("Danh sách SV");
		label_danhSachSV.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_danhSachSV.setBounds(26, 127, 122, 42);
		contentPane.add(label_danhSachSV);
		
		table = new JTable();
		table.setFont(new Font("Tahoma", Font.PLAIN, 10));
		table.setModel(new DefaultTableModel(
			new Object[][] {
			},
			new String[] {
				"Mã SV", "Họ tên", "Quê quán", "Ngày sinh", "Giới tính", "Điểm môn 1", "Điểm môn 2", "Điểm môn 3"
			}
		));
		
		JScrollPane scrollPane = new JScrollPane(table);
		scrollPane.setBounds(26, 179, 696, 92);
		contentPane.add(scrollPane);
		
		JLabel label_thongTinSV = new JLabel("Thông tin SV");
		label_thongTinSV.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_thongTinSV.setBounds(26, 303, 115, 42);
		contentPane.add(label_thongTinSV);
		
		JSeparator separator_2 = new JSeparator();
		separator_2.setBounds(10, 291, 728, 2);
		contentPane.add(separator_2);
		
		JLabel label_maSinhVienUnder = new JLabel("Mã sinh viên");
		label_maSinhVienUnder.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_maSinhVienUnder.setBounds(26, 355, 110, 42);
		contentPane.add(label_maSinhVienUnder);
		
		JLabel label_hoTenUnder = new JLabel("Họ tên");
		label_hoTenUnder.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_hoTenUnder.setBounds(26, 422, 110, 42);
		contentPane.add(label_hoTenUnder);
		
		JLabel label_queQuanUnder = new JLabel("Quê quán");
		label_queQuanUnder.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_queQuanUnder.setBounds(26, 489, 110, 42);
		contentPane.add(label_queQuanUnder);
		
		JLabel label_ngaySinhUnder = new JLabel("Ngày sinh");
		label_ngaySinhUnder.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_ngaySinhUnder.setBounds(26, 556, 110, 42);
		contentPane.add(label_ngaySinhUnder);
		
		textField_maSVUnder = new JTextField();
		textField_maSVUnder.setColumns(10);
		textField_maSVUnder.setBounds(161, 355, 170, 43);
		contentPane.add(textField_maSVUnder);
		
		textField_hoTen = new JTextField();
		textField_hoTen.setColumns(10);
		textField_hoTen.setBounds(161, 422, 170, 43);
		contentPane.add(textField_hoTen);
		
		textField_ngaySinh = new JTextField();
		textField_ngaySinh.setColumns(10);
		textField_ngaySinh.setBounds(161, 556, 170, 43);
		contentPane.add(textField_ngaySinh);
		
		JLabel label_gioiTinhUnder = new JLabel("Giới tính");
		label_gioiTinhUnder.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_gioiTinhUnder.setBounds(426, 355, 110, 42);
		contentPane.add(label_gioiTinhUnder);
		
		JLabel label_diem1Under = new JLabel("Điểm 1");
		label_diem1Under.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_diem1Under.setBounds(426, 422, 110, 42);
		contentPane.add(label_diem1Under);
		
		JLabel label_diem2Under = new JLabel("Điểm 2");
		label_diem2Under.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_diem2Under.setBounds(426, 489, 110, 42);
		contentPane.add(label_diem2Under);
		
		JLabel label_diem3Under = new JLabel("Điểm 3");
		label_diem3Under.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_diem3Under.setBounds(426, 556, 110, 42);
		contentPane.add(label_diem3Under);
		
		textField_diem1 = new JTextField();
		textField_diem1.setColumns(10);
		textField_diem1.setBounds(562, 422, 170, 43);
		contentPane.add(textField_diem1);
		
		textField_diem2 = new JTextField();
		textField_diem2.setColumns(10);
		textField_diem2.setBounds(562, 489, 170, 43);
		contentPane.add(textField_diem2);
		
		textField_diem3 = new JTextField();
		textField_diem3.setColumns(10);
		textField_diem3.setBounds(562, 556, 170, 43);
		contentPane.add(textField_diem3);
		
		rdbtn_nam = new JRadioButton("Nam");
		rdbtn_nam.setFont(new Font("Tahoma", Font.PLAIN, 20));
		rdbtn_nam.setBounds(562, 355, 71, 42);
		contentPane.add(rdbtn_nam);
		rdbtn_nam.setSelected(true);
		
		rdbtn_nu = new JRadioButton("Nữ");
		rdbtn_nu.setFont(new Font("Tahoma", Font.PLAIN, 20));
		rdbtn_nu.setBounds(647, 355, 71, 42);
		contentPane.add(rdbtn_nu);
		
		btngr = new ButtonGroup();
		btngr.add(rdbtn_nam);
		btngr.add(rdbtn_nu);
		
		ActionListener listener = new Listener(this);
		
		JButton btn_them = new JButton("Thêm");
		btn_them.addActionListener(listener);
		btn_them.setFont(new Font("Tahoma", Font.PLAIN, 20));
		btn_them.setBounds(21, 633, 127, 43);
		contentPane.add(btn_them);
		
		JButton btn_xoa = new JButton("Xóa");
		btn_xoa.addActionListener(listener);
		btn_xoa.setFont(new Font("Tahoma", Font.PLAIN, 20));
		btn_xoa.setBounds(595, 633, 127, 43);
		contentPane.add(btn_xoa);
		
		JButton btn_capNhat = new JButton("Cập nhật");
		btn_capNhat.addActionListener(listener);
		btn_capNhat.setFont(new Font("Tahoma", Font.PLAIN, 20));
		btn_capNhat.setBounds(215, 633, 127, 43);
		contentPane.add(btn_capNhat);
		
		JButton btn_luu = new JButton("Lưu");
		btn_luu.addActionListener(listener);
		btn_luu.setFont(new Font("Tahoma", Font.PLAIN, 20));
		btn_luu.setBounds(409, 633, 127, 43);
		contentPane.add(btn_luu);
		
		JSeparator separator_1_1 = new JSeparator();
		separator_1_1.setBounds(10, 615, 728, 2);
		contentPane.add(separator_1_1);
		
		comboBox_queQuanUnder = new JComboBox();
		comboBox_queQuanUnder.addItem("");
		for (Tinh tinh : listTinh) {
			comboBox_queQuanUnder.addItem(tinh.getTenTinh());
		}
		comboBox_queQuanUnder.setBounds(161, 488, 170, 43);
		contentPane.add(comboBox_queQuanUnder);
	}

	public void xoaForm() {
		textField_maSV.setText("");
		textField_maSVUnder.setText("");
		textField_hoTen.setText("");
		textField_ngaySinh.setText("");
		textField_diem1.setText("");
		textField_diem2.setText("");
		textField_diem3.setText("");
		comboBox_queQuanUnder.setSelectedIndex(-1);
		btngr.clearSelection();
	}

	public void themHoacCapNhatSV(SinhVien sv) {
		DefaultTableModel defaultTableModel = (DefaultTableModel) table.getModel();
		if (!this.model.kiemTraTonTai(sv)) {
			this.model.addSV(sv);
			defaultTableModel.addRow(new Object[]{
													sv.getMaSinhVien()+"", 
													sv.getTenSinhVien(),
													sv.getQueQuan().getTenTinh(),
													sv.getNgaySinh().getDate()+"/"+(sv.getNgaySinh().getMonth() + 1)+"/"+(sv.getNgaySinh().getYear()+1900),
													sv.isGioiTinh() ? "Nam" : "Nữ",
													sv.getDiemMon1()+"",
													sv.getDiemMon2()+"",
													sv.getDiemMon3()+""});
		}
		else {
			this.model.update(sv);
			int soDong = defaultTableModel.getRowCount();
			for (int i = 0; i < soDong; i++) {
				String id = defaultTableModel.getValueAt(soDong, 0)+"";
				if (id.equals(sv.getMaSinhVien()+"")) {
					defaultTableModel.getValueAt(sv.getMaSinhVien()+"", i,0);
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
				}
			}
		}
	}

	public void hienThiThongTinSinhVienDangDuocChon() {
		DefaultTableModel defaultTableModel = (DefaultTableModel) table.getModel();
		int row = table.getSelectedRow();
		
		int maSV = Integer.valueOf(defaultTableModel.getValueAt(row, 0)+"");
		String tenSV = defaultTableModel.getValueAt(row, 1)+"";
		Tinh tinh = Tinh.getTinhByTen(defaultTableModel.getValueAt(row, 2)+"");
		String ngaySinh = defaultTableModel.getValueAt(row, 3)+"";
		String textGioiTinh = defaultTableModel.getValueAt(row, 4)+"";
		boolean gioiTinh = textGioiTinh.equals("Nam");
		float diemMon1 = Float.valueOf(defaultTableModel.getValueAt(row, 5)+"");
		float diemMon2 = Float.valueOf(defaultTableModel.getValueAt(row, 6)+"");
		float diemMon3 = Float.valueOf(defaultTableModel.getValueAt(row, 7)+"");
		
		this.textField_maSVUnder.setText(maSV+"");
		this.textField_hoTen.setText(tenSV+"");
		this.comboBox_queQuan.setSelectedItem(tinh.getTenTinh()+"");
		this.textField_ngaySinh.setText(ngaySinh+"");
		if (gioiTinh) {
			rdbtn_nam.setSelected(true);
		} else {
			rdbtn_nu.setSelected(false);
		}
		this.textField_diem1.setText(diemMon1+"");
		this.textField_diem2.setText(diemMon2+"");
		this.textField_diem3.setText(diemMon3+"");
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3063)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-03-14 23:37:59.724
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3063)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-03-14 23:37:59.725
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3063)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2023-03-14 23:38:00.793
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package View;

import java.awt.EventQueue;

import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.border.EmptyBorder;

import Model.QLSV_model;
import Model.SinhVien;
import Model.Tinh;

import javax.swing.JMenuBar;
import javax.swing.JMenu;
import javax.swing.JMenuItem;
import javax.swing.JSeparator;
import javax.swing.JLabel;
import java.awt.Font;
import javax.swing.JScrollPane;
import javax.swing.JComboBox;
import javax.swing.JTextField;
import javax.swing.ButtonGroup;
import javax.swing.JButton;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

import Controller.Listener;

import javax.swing.JRadioButton;
import java.awt.event.ActionListener;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.awt.event.ActionEvent;

public class view_QLSV extends JFrame {

	private JPanel contentPane;
	public QLSV_model model;
	private JTextField textField_maSV;
	private JTable table;
	public JTextField textField_maSVUnder;
	public JTextField textField_hoTen;
	public JTextField textField_ngaySinh;
	public JTextField textField_diem1;
	public JTextField textField_diem2;
	public JTextField textField_diem3;
	public JComboBox comboBox_queQuanUnder;
	private JComboBox comboBox_queQuan;
	public ButtonGroup btngr;
	public JRadioButton rdbtn_nam;
	public JRadioButton rdbtn_nu;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					view_QLSV frame = new view_QLSV();
					frame.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the frame.
	 */
	public view_QLSV() {
		model = new QLSV_model();
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setBounds(100, 100, 757, 759);
		setTitle("Chương trình quản lý sinh viên của Trần Phúc Khánh");
		
		JMenuBar menuBar = new JMenuBar();
		setJMenuBar(menuBar);
		
		JMenu menu_file = new JMenu("File");
		menuBar.add(menu_file);
		
		JMenuItem menuItem_open = new JMenuItem("Open");
		menu_file.add(menuItem_open);
		
		JMenuItem mntmClose = new JMenuItem("Close");
		menu_file.add(mntmClose);
		
		JSeparator separator = new JSeparator();
		menu_file.add(separator);
		
		JMenuItem menuItem_exit = new JMenuItem("Exit");
		menu_file.add(menuItem_exit);
		
		JMenu menu_about = new JMenu("About");
		menuBar.add(menu_about);
		
		JMenuItem menuItem_about_me = new JMenuItem("About me");
		menu_about.add(menuItem_about_me);
		contentPane = new JPanel();
		contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));

		setContentPane(contentPane);
		contentPane.setLayout(null);
		
		JLabel label_queQuan = new JLabel("Quê quán");
		label_queQuan.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_queQuan.setBounds(47, 40, 86, 42);
		contentPane.add(label_queQuan);
		
		comboBox_queQuan = new JComboBox();
		ArrayList<Tinh> listTinh = Tinh.getDS_Tinh();
		comboBox_queQuan.addItem("");
		for (Tinh tinh : listTinh) {
			comboBox_queQuan.addItem(tinh.getTenTinh());
		}
		comboBox_queQuan.setFont(new Font("Tahoma", Font.PLAIN, 15));
		comboBox_queQuan.setBounds(140, 40, 102, 43);
		contentPane.add(comboBox_queQuan);
		
		JLabel label_maSinhVien = new JLabel("Mã sinh viên");
		label_maSinhVien.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_maSinhVien.setBounds(306, 40, 110, 42);
		contentPane.add(label_maSinhVien);
		
		textField_maSV = new JTextField();
		textField_maSV.setBounds(426, 40, 102, 43);
		contentPane.add(textField_maSV);
		textField_maSV.setColumns(10);
		
		JButton button_timKiem = new JButton("Tìm kiếm");
		button_timKiem.setFont(new Font("Tahoma", Font.PLAIN, 20));
		button_timKiem.setBounds(591, 40, 127, 43);
		contentPane.add(button_timKiem);
		
		JSeparator separator_1 = new JSeparator();
		separator_1.setBounds(10, 102, 728, 2);
		contentPane.add(separator_1);
		
		JLabel label_danhSachSV = new JLabel("Danh sách SV");
		label_danhSachSV.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_danhSachSV.setBounds(26, 127, 122, 42);
		contentPane.add(label_danhSachSV);
		
		table = new JTable();
		table.setFont(new Font("Tahoma", Font.PLAIN, 10));
		table.setModel(new DefaultTableModel(
			new Object[][] {
			},
			new String[] {
				"Mã SV", "Họ tên", "Quê quán", "Ngày sinh", "Giới tính", "Điểm môn 1", "Điểm môn 2", "Điểm môn 3"
			}
		));
		
		JScrollPane scrollPane = new JScrollPane(table);
		scrollPane.setBounds(26, 179, 696, 92);
		contentPane.add(scrollPane);
		
		JLabel label_thongTinSV = new JLabel("Thông tin SV");
		label_thongTinSV.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_thongTinSV.setBounds(26, 303, 115, 42);
		contentPane.add(label_thongTinSV);
		
		JSeparator separator_2 = new JSeparator();
		separator_2.setBounds(10, 291, 728, 2);
		contentPane.add(separator_2);
		
		JLabel label_maSinhVienUnder = new JLabel("Mã sinh viên");
		label_maSinhVienUnder.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_maSinhVienUnder.setBounds(26, 355, 110, 42);
		contentPane.add(label_maSinhVienUnder);
		
		JLabel label_hoTenUnder = new JLabel("Họ tên");
		label_hoTenUnder.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_hoTenUnder.setBounds(26, 422, 110, 42);
		contentPane.add(label_hoTenUnder);
		
		JLabel label_queQuanUnder = new JLabel("Quê quán");
		label_queQuanUnder.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_queQuanUnder.setBounds(26, 489, 110, 42);
		contentPane.add(label_queQuanUnder);
		
		JLabel label_ngaySinhUnder = new JLabel("Ngày sinh");
		label_ngaySinhUnder.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_ngaySinhUnder.setBounds(26, 556, 110, 42);
		contentPane.add(label_ngaySinhUnder);
		
		textField_maSVUnder = new JTextField();
		textField_maSVUnder.setColumns(10);
		textField_maSVUnder.setBounds(161, 355, 170, 43);
		contentPane.add(textField_maSVUnder);
		
		textField_hoTen = new JTextField();
		textField_hoTen.setColumns(10);
		textField_hoTen.setBounds(161, 422, 170, 43);
		contentPane.add(textField_hoTen);
		
		textField_ngaySinh = new JTextField();
		textField_ngaySinh.setColumns(10);
		textField_ngaySinh.setBounds(161, 556, 170, 43);
		contentPane.add(textField_ngaySinh);
		
		JLabel label_gioiTinhUnder = new JLabel("Giới tính");
		label_gioiTinhUnder.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_gioiTinhUnder.setBounds(426, 355, 110, 42);
		contentPane.add(label_gioiTinhUnder);
		
		JLabel label_diem1Under = new JLabel("Điểm 1");
		label_diem1Under.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_diem1Under.setBounds(426, 422, 110, 42);
		contentPane.add(label_diem1Under);
		
		JLabel label_diem2Under = new JLabel("Điểm 2");
		label_diem2Under.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_diem2Under.setBounds(426, 489, 110, 42);
		contentPane.add(label_diem2Under);
		
		JLabel label_diem3Under = new JLabel("Điểm 3");
		label_diem3Under.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_diem3Under.setBounds(426, 556, 110, 42);
		contentPane.add(label_diem3Under);
		
		textField_diem1 = new JTextField();
		textField_diem1.setColumns(10);
		textField_diem1.setBounds(562, 422, 170, 43);
		contentPane.add(textField_diem1);
		
		textField_diem2 = new JTextField();
		textField_diem2.setColumns(10);
		textField_diem2.setBounds(562, 489, 170, 43);
		contentPane.add(textField_diem2);
		
		textField_diem3 = new JTextField();
		textField_diem3.setColumns(10);
		textField_diem3.setBounds(562, 556, 170, 43);
		contentPane.add(textField_diem3);
		
		rdbtn_nam = new JRadioButton("Nam");
		rdbtn_nam.setFont(new Font("Tahoma", Font.PLAIN, 20));
		rdbtn_nam.setBounds(562, 355, 71, 42);
		contentPane.add(rdbtn_nam);
		rdbtn_nam.setSelected(true);
		
		rdbtn_nu = new JRadioButton("Nữ");
		rdbtn_nu.setFont(new Font("Tahoma", Font.PLAIN, 20));
		rdbtn_nu.setBounds(647, 355, 71, 42);
		contentPane.add(rdbtn_nu);
		
		btngr = new ButtonGroup();
		btngr.add(rdbtn_nam);
		btngr.add(rdbtn_nu);
		
		ActionListener listener = new Listener(this);
		
		JButton btn_them = new JButton("Thêm");
		btn_them.addActionListener(listener);
		btn_them.setFont(new Font("Tahoma", Font.PLAIN, 20));
		btn_them.setBounds(21, 633, 127, 43);
		contentPane.add(btn_them);
		
		JButton btn_xoa = new JButton("Xóa");
		btn_xoa.addActionListener(listener);
		btn_xoa.setFont(new Font("Tahoma", Font.PLAIN, 20));
		btn_xoa.setBounds(595, 633, 127, 43);
		contentPane.add(btn_xoa);
		
		JButton btn_capNhat = new JButton("Cập nhật");
		btn_capNhat.addActionListener(listener);
		btn_capNhat.setFont(new Font("Tahoma", Font.PLAIN, 20));
		btn_capNhat.setBounds(215, 633, 127, 43);
		contentPane.add(btn_capNhat);
		
		JButton btn_luu = new JButton("Lưu");
		btn_luu.addActionListener(listener);
		btn_luu.setFont(new Font("Tahoma", Font.PLAIN, 20));
		btn_luu.setBounds(409, 633, 127, 43);
		contentPane.add(btn_luu);
		
		JSeparator separator_1_1 = new JSeparator();
		separator_1_1.setBounds(10, 615, 728, 2);
		contentPane.add(separator_1_1);
		
		comboBox_queQuanUnder = new JComboBox();
		comboBox_queQuanUnder.addItem("");
		for (Tinh tinh : listTinh) {
			comboBox_queQuanUnder.addItem(tinh.getTenTinh());
		}
		comboBox_queQuanUnder.setBounds(161, 488, 170, 43);
		contentPane.add(comboBox_queQuanUnder);
	}

	public void xoaForm() {
		textField_maSV.setText("");
		textField_maSVUnder.setText("");
		textField_hoTen.setText("");
		textField_ngaySinh.setText("");
		textField_diem1.setText("");
		textField_diem2.setText("");
		textField_diem3.setText("");
		comboBox_queQuanUnder.setSelectedIndex(-1);
		btngr.clearSelection();
	}

	public void themHoacCapNhatSV(SinhVien sv) {
		DefaultTableModel defaultTableModel = (DefaultTableModel) table.getModel();
		if (!this.model.kiemTraTonTai(sv)) {
			this.model.addSV(sv);
			defaultTableModel.addRow(new Object[]{
													sv.getMaSinhVien()+"", 
													sv.getTenSinhVien(),
													sv.getQueQuan().getTenTinh(),
													sv.getNgaySinh().getDate()+"/"+(sv.getNgaySinh().getMonth() + 1)+"/"+(sv.getNgaySinh().getYear()+1900),
													sv.isGioiTinh() ? "Nam" : "Nữ",
													sv.getDiemMon1()+"",
													sv.getDiemMon2()+"",
													sv.getDiemMon3()+""});
		}
		else {
			this.model.update(sv);
			int soDong = defaultTableModel.getRowCount();
			for (int i = 0; i < soDong; i++) {
				String id = defaultTableModel.getValueAt(soDong, 0)+"";
				if (id.equals(sv.getMaSinhVien()+"")) {
					defaultTableModel.getValueAt(sv.getMaSinhVien()+"", i,0);
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
				}
			}
		}
	}

	public void hienThiThongTinSinhVienDangDuocChon() {
		DefaultTableModel defaultTableModel = (DefaultTableModel) table.getModel();
		int row = table.getSelectedRow();
		
		int maSV = Integer.valueOf(defaultTableModel.getValueAt(row, 0)+"");
		String tenSV = defaultTableModel.getValueAt(row, 1)+"";
		Tinh tinh = Tinh.getTinhByTen(defaultTableModel.getValueAt(row, 2)+"");
		String ngaySinh = defaultTableModel.getValueAt(row, 3)+"";
		String textGioiTinh = defaultTableModel.getValueAt(row, 4)+"";
		boolean gioiTinh = textGioiTinh.equals("Nam");
		float diemMon1 = Float.valueOf(defaultTableModel.getValueAt(row, 5)+"");
		float diemMon2 = Float.valueOf(defaultTableModel.getValueAt(row, 6)+"");
		float diemMon3 = Float.valueOf(defaultTableModel.getValueAt(row, 7)+"");
		
		this.textField_maSVUnder.setText(maSV+"");
		this.textField_hoTen.setText(tenSV+"");
		this.comboBox_queQuan.setSelectedItem(tinh.getTenTinh()+"");
		this.textField_ngaySinh.setText(ngaySinh+"");
		if (gioiTinh) {
			rdbtn_nam.setSelected(true);
		} else {
			rdbtn_nu.setSelected(false);
		}
		this.textField_diem1.setText(diemMon1+"");
		this.textField_diem2.setText(diemMon2+"");
		this.textField_diem3.setText(diemMon3+"");
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3063)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-03-14 23:38:00.794
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3063)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-03-14 23:38:00.794
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3063)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2023-03-14 23:38:01.388
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package View;

import java.awt.EventQueue;

import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.border.EmptyBorder;

import Model.QLSV_model;
import Model.SinhVien;
import Model.Tinh;

import javax.swing.JMenuBar;
import javax.swing.JMenu;
import javax.swing.JMenuItem;
import javax.swing.JSeparator;
import javax.swing.JLabel;
import java.awt.Font;
import javax.swing.JScrollPane;
import javax.swing.JComboBox;
import javax.swing.JTextField;
import javax.swing.ButtonGroup;
import javax.swing.JButton;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

import Controller.Listener;

import javax.swing.JRadioButton;
import java.awt.event.ActionListener;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.awt.event.ActionEvent;

public class view_QLSV extends JFrame {

	private JPanel contentPane;
	public QLSV_model model;
	private JTextField textField_maSV;
	private JTable table;
	public JTextField textField_maSVUnder;
	public JTextField textField_hoTen;
	public JTextField textField_ngaySinh;
	public JTextField textField_diem1;
	public JTextField textField_diem2;
	public JTextField textField_diem3;
	public JComboBox comboBox_queQuanUnder;
	private JComboBox comboBox_queQuan;
	public ButtonGroup btngr;
	public JRadioButton rdbtn_nam;
	public JRadioButton rdbtn_nu;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					view_QLSV frame = new view_QLSV();
					frame.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the frame.
	 */
	public view_QLSV() {
		model = new QLSV_model();
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setBounds(100, 100, 757, 759);
		setTitle("Chương trình quản lý sinh viên của Trần Phúc Khánh");
		
		JMenuBar menuBar = new JMenuBar();
		setJMenuBar(menuBar);
		
		JMenu menu_file = new JMenu("File");
		menuBar.add(menu_file);
		
		JMenuItem menuItem_open = new JMenuItem("Open");
		menu_file.add(menuItem_open);
		
		JMenuItem mntmClose = new JMenuItem("Close");
		menu_file.add(mntmClose);
		
		JSeparator separator = new JSeparator();
		menu_file.add(separator);
		
		JMenuItem menuItem_exit = new JMenuItem("Exit");
		menu_file.add(menuItem_exit);
		
		JMenu menu_about = new JMenu("About");
		menuBar.add(menu_about);
		
		JMenuItem menuItem_about_me = new JMenuItem("About me");
		menu_about.add(menuItem_about_me);
		contentPane = new JPanel();
		contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));

		setContentPane(contentPane);
		contentPane.setLayout(null);
		
		JLabel label_queQuan = new JLabel("Quê quán");
		label_queQuan.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_queQuan.setBounds(47, 40, 86, 42);
		contentPane.add(label_queQuan);
		
		comboBox_queQuan = new JComboBox();
		ArrayList<Tinh> listTinh = Tinh.getDS_Tinh();
		comboBox_queQuan.addItem("");
		for (Tinh tinh : listTinh) {
			comboBox_queQuan.addItem(tinh.getTenTinh());
		}
		comboBox_queQuan.setFont(new Font("Tahoma", Font.PLAIN, 15));
		comboBox_queQuan.setBounds(140, 40, 102, 43);
		contentPane.add(comboBox_queQuan);
		
		JLabel label_maSinhVien = new JLabel("Mã sinh viên");
		label_maSinhVien.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_maSinhVien.setBounds(306, 40, 110, 42);
		contentPane.add(label_maSinhVien);
		
		textField_maSV = new JTextField();
		textField_maSV.setBounds(426, 40, 102, 43);
		contentPane.add(textField_maSV);
		textField_maSV.setColumns(10);
		
		JButton button_timKiem = new JButton("Tìm kiếm");
		button_timKiem.setFont(new Font("Tahoma", Font.PLAIN, 20));
		button_timKiem.setBounds(591, 40, 127, 43);
		contentPane.add(button_timKiem);
		
		JSeparator separator_1 = new JSeparator();
		separator_1.setBounds(10, 102, 728, 2);
		contentPane.add(separator_1);
		
		JLabel label_danhSachSV = new JLabel("Danh sách SV");
		label_danhSachSV.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_danhSachSV.setBounds(26, 127, 122, 42);
		contentPane.add(label_danhSachSV);
		
		table = new JTable();
		table.setFont(new Font("Tahoma", Font.PLAIN, 10));
		table.setModel(new DefaultTableModel(
			new Object[][] {
			},
			new String[] {
				"Mã SV", "Họ tên", "Quê quán", "Ngày sinh", "Giới tính", "Điểm môn 1", "Điểm môn 2", "Điểm môn 3"
			}
		));
		
		JScrollPane scrollPane = new JScrollPane(table);
		scrollPane.setBounds(26, 179, 696, 92);
		contentPane.add(scrollPane);
		
		JLabel label_thongTinSV = new JLabel("Thông tin SV");
		label_thongTinSV.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_thongTinSV.setBounds(26, 303, 115, 42);
		contentPane.add(label_thongTinSV);
		
		JSeparator separator_2 = new JSeparator();
		separator_2.setBounds(10, 291, 728, 2);
		contentPane.add(separator_2);
		
		JLabel label_maSinhVienUnder = new JLabel("Mã sinh viên");
		label_maSinhVienUnder.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_maSinhVienUnder.setBounds(26, 355, 110, 42);
		contentPane.add(label_maSinhVienUnder);
		
		JLabel label_hoTenUnder = new JLabel("Họ tên");
		label_hoTenUnder.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_hoTenUnder.setBounds(26, 422, 110, 42);
		contentPane.add(label_hoTenUnder);
		
		JLabel label_queQuanUnder = new JLabel("Quê quán");
		label_queQuanUnder.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_queQuanUnder.setBounds(26, 489, 110, 42);
		contentPane.add(label_queQuanUnder);
		
		JLabel label_ngaySinhUnder = new JLabel("Ngày sinh");
		label_ngaySinhUnder.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_ngaySinhUnder.setBounds(26, 556, 110, 42);
		contentPane.add(label_ngaySinhUnder);
		
		textField_maSVUnder = new JTextField();
		textField_maSVUnder.setColumns(10);
		textField_maSVUnder.setBounds(161, 355, 170, 43);
		contentPane.add(textField_maSVUnder);
		
		textField_hoTen = new JTextField();
		textField_hoTen.setColumns(10);
		textField_hoTen.setBounds(161, 422, 170, 43);
		contentPane.add(textField_hoTen);
		
		textField_ngaySinh = new JTextField();
		textField_ngaySinh.setColumns(10);
		textField_ngaySinh.setBounds(161, 556, 170, 43);
		contentPane.add(textField_ngaySinh);
		
		JLabel label_gioiTinhUnder = new JLabel("Giới tính");
		label_gioiTinhUnder.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_gioiTinhUnder.setBounds(426, 355, 110, 42);
		contentPane.add(label_gioiTinhUnder);
		
		JLabel label_diem1Under = new JLabel("Điểm 1");
		label_diem1Under.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_diem1Under.setBounds(426, 422, 110, 42);
		contentPane.add(label_diem1Under);
		
		JLabel label_diem2Under = new JLabel("Điểm 2");
		label_diem2Under.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_diem2Under.setBounds(426, 489, 110, 42);
		contentPane.add(label_diem2Under);
		
		JLabel label_diem3Under = new JLabel("Điểm 3");
		label_diem3Under.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_diem3Under.setBounds(426, 556, 110, 42);
		contentPane.add(label_diem3Under);
		
		textField_diem1 = new JTextField();
		textField_diem1.setColumns(10);
		textField_diem1.setBounds(562, 422, 170, 43);
		contentPane.add(textField_diem1);
		
		textField_diem2 = new JTextField();
		textField_diem2.setColumns(10);
		textField_diem2.setBounds(562, 489, 170, 43);
		contentPane.add(textField_diem2);
		
		textField_diem3 = new JTextField();
		textField_diem3.setColumns(10);
		textField_diem3.setBounds(562, 556, 170, 43);
		contentPane.add(textField_diem3);
		
		rdbtn_nam = new JRadioButton("Nam");
		rdbtn_nam.setFont(new Font("Tahoma", Font.PLAIN, 20));
		rdbtn_nam.setBounds(562, 355, 71, 42);
		contentPane.add(rdbtn_nam);
		rdbtn_nam.setSelected(true);
		
		rdbtn_nu = new JRadioButton("Nữ");
		rdbtn_nu.setFont(new Font("Tahoma", Font.PLAIN, 20));
		rdbtn_nu.setBounds(647, 355, 71, 42);
		contentPane.add(rdbtn_nu);
		
		btngr = new ButtonGroup();
		btngr.add(rdbtn_nam);
		btngr.add(rdbtn_nu);
		
		ActionListener listener = new Listener(this);
		
		JButton btn_them = new JButton("Thêm");
		btn_them.addActionListener(listener);
		btn_them.setFont(new Font("Tahoma", Font.PLAIN, 20));
		btn_them.setBounds(21, 633, 127, 43);
		contentPane.add(btn_them);
		
		JButton btn_xoa = new JButton("Xóa");
		btn_xoa.addActionListener(listener);
		btn_xoa.setFont(new Font("Tahoma", Font.PLAIN, 20));
		btn_xoa.setBounds(595, 633, 127, 43);
		contentPane.add(btn_xoa);
		
		JButton btn_capNhat = new JButton("Cập nhật");
		btn_capNhat.addActionListener(listener);
		btn_capNhat.setFont(new Font("Tahoma", Font.PLAIN, 20));
		btn_capNhat.setBounds(215, 633, 127, 43);
		contentPane.add(btn_capNhat);
		
		JButton btn_luu = new JButton("Lưu");
		btn_luu.addActionListener(listener);
		btn_luu.setFont(new Font("Tahoma", Font.PLAIN, 20));
		btn_luu.setBounds(409, 633, 127, 43);
		contentPane.add(btn_luu);
		
		JSeparator separator_1_1 = new JSeparator();
		separator_1_1.setBounds(10, 615, 728, 2);
		contentPane.add(separator_1_1);
		
		comboBox_queQuanUnder = new JComboBox();
		comboBox_queQuanUnder.addItem("");
		for (Tinh tinh : listTinh) {
			comboBox_queQuanUnder.addItem(tinh.getTenTinh());
		}
		comboBox_queQuanUnder.setBounds(161, 488, 170, 43);
		contentPane.add(comboBox_queQuanUnder);
	}

	public void xoaForm() {
		textField_maSV.setText("");
		textField_maSVUnder.setText("");
		textField_hoTen.setText("");
		textField_ngaySinh.setText("");
		textField_diem1.setText("");
		textField_diem2.setText("");
		textField_diem3.setText("");
		comboBox_queQuanUnder.setSelectedIndex(-1);
		btngr.clearSelection();
	}

	public void themHoacCapNhatSV(SinhVien sv) {
		DefaultTableModel defaultTableModel = (DefaultTableModel) table.getModel();
		if (!this.model.kiemTraTonTai(sv)) {
			this.model.addSV(sv);
			defaultTableModel.addRow(new Object[]{
													sv.getMaSinhVien()+"", 
													sv.getTenSinhVien(),
													sv.getQueQuan().getTenTinh(),
													sv.getNgaySinh().getDate()+"/"+(sv.getNgaySinh().getMonth() + 1)+"/"+(sv.getNgaySinh().getYear()+1900),
													sv.isGioiTinh() ? "Nam" : "Nữ",
													sv.getDiemMon1()+"",
													sv.getDiemMon2()+"",
													sv.getDiemMon3()+""});
		}
		else {
			this.model.update(sv);
			int soDong = defaultTableModel.getRowCount();
			for (int i = 0; i < soDong; i++) {
				String id = defaultTableModel.getValueAt(soDong, 0)+"";
				if (id.equals(sv.getMaSinhVien()+"")) {
					defaultTableModel.getValueAt(sv.getMaSinhVien()+"", i, 0);
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
				}
			}
		}
	}

	public void hienThiThongTinSinhVienDangDuocChon() {
		DefaultTableModel defaultTableModel = (DefaultTableModel) table.getModel();
		int row = table.getSelectedRow();
		
		int maSV = Integer.valueOf(defaultTableModel.getValueAt(row, 0)+"");
		String tenSV = defaultTableModel.getValueAt(row, 1)+"";
		Tinh tinh = Tinh.getTinhByTen(defaultTableModel.getValueAt(row, 2)+"");
		String ngaySinh = defaultTableModel.getValueAt(row, 3)+"";
		String textGioiTinh = defaultTableModel.getValueAt(row, 4)+"";
		boolean gioiTinh = textGioiTinh.equals("Nam");
		float diemMon1 = Float.valueOf(defaultTableModel.getValueAt(row, 5)+"");
		float diemMon2 = Float.valueOf(defaultTableModel.getValueAt(row, 6)+"");
		float diemMon3 = Float.valueOf(defaultTableModel.getValueAt(row, 7)+"");
		
		this.textField_maSVUnder.setText(maSV+"");
		this.textField_hoTen.setText(tenSV+"");
		this.comboBox_queQuan.setSelectedItem(tinh.getTenTinh()+"");
		this.textField_ngaySinh.setText(ngaySinh+"");
		if (gioiTinh) {
			rdbtn_nam.setSelected(true);
		} else {
			rdbtn_nu.setSelected(false);
		}
		this.textField_diem1.setText(diemMon1+"");
		this.textField_diem2.setText(diemMon2+"");
		this.textField_diem3.setText(diemMon3+"");
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3063)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:561)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2023-03-14 23:38:01.389
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3063)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:561)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2023-03-14 23:38:01.390
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3063)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:561)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2023-03-14 23:38:01.445
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package View;

import java.awt.EventQueue;

import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.border.EmptyBorder;

import Model.QLSV_model;
import Model.SinhVien;
import Model.Tinh;

import javax.swing.JMenuBar;
import javax.swing.JMenu;
import javax.swing.JMenuItem;
import javax.swing.JSeparator;
import javax.swing.JLabel;
import java.awt.Font;
import javax.swing.JScrollPane;
import javax.swing.JComboBox;
import javax.swing.JTextField;
import javax.swing.ButtonGroup;
import javax.swing.JButton;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

import Controller.Listener;

import javax.swing.JRadioButton;
import java.awt.event.ActionListener;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.awt.event.ActionEvent;

public class view_QLSV extends JFrame {

	private JPanel contentPane;
	public QLSV_model model;
	private JTextField textField_maSV;
	private JTable table;
	public JTextField textField_maSVUnder;
	public JTextField textField_hoTen;
	public JTextField textField_ngaySinh;
	public JTextField textField_diem1;
	public JTextField textField_diem2;
	public JTextField textField_diem3;
	public JComboBox comboBox_queQuanUnder;
	private JComboBox comboBox_queQuan;
	public ButtonGroup btngr;
	public JRadioButton rdbtn_nam;
	public JRadioButton rdbtn_nu;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					view_QLSV frame = new view_QLSV();
					frame.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the frame.
	 */
	public view_QLSV() {
		model = new QLSV_model();
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setBounds(100, 100, 757, 759);
		setTitle("Chương trình quản lý sinh viên của Trần Phúc Khánh");
		
		JMenuBar menuBar = new JMenuBar();
		setJMenuBar(menuBar);
		
		JMenu menu_file = new JMenu("File");
		menuBar.add(menu_file);
		
		JMenuItem menuItem_open = new JMenuItem("Open");
		menu_file.add(menuItem_open);
		
		JMenuItem mntmClose = new JMenuItem("Close");
		menu_file.add(mntmClose);
		
		JSeparator separator = new JSeparator();
		menu_file.add(separator);
		
		JMenuItem menuItem_exit = new JMenuItem("Exit");
		menu_file.add(menuItem_exit);
		
		JMenu menu_about = new JMenu("About");
		menuBar.add(menu_about);
		
		JMenuItem menuItem_about_me = new JMenuItem("About me");
		menu_about.add(menuItem_about_me);
		contentPane = new JPanel();
		contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));

		setContentPane(contentPane);
		contentPane.setLayout(null);
		
		JLabel label_queQuan = new JLabel("Quê quán");
		label_queQuan.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_queQuan.setBounds(47, 40, 86, 42);
		contentPane.add(label_queQuan);
		
		comboBox_queQuan = new JComboBox();
		ArrayList<Tinh> listTinh = Tinh.getDS_Tinh();
		comboBox_queQuan.addItem("");
		for (Tinh tinh : listTinh) {
			comboBox_queQuan.addItem(tinh.getTenTinh());
		}
		comboBox_queQuan.setFont(new Font("Tahoma", Font.PLAIN, 15));
		comboBox_queQuan.setBounds(140, 40, 102, 43);
		contentPane.add(comboBox_queQuan);
		
		JLabel label_maSinhVien = new JLabel("Mã sinh viên");
		label_maSinhVien.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_maSinhVien.setBounds(306, 40, 110, 42);
		contentPane.add(label_maSinhVien);
		
		textField_maSV = new JTextField();
		textField_maSV.setBounds(426, 40, 102, 43);
		contentPane.add(textField_maSV);
		textField_maSV.setColumns(10);
		
		JButton button_timKiem = new JButton("Tìm kiếm");
		button_timKiem.setFont(new Font("Tahoma", Font.PLAIN, 20));
		button_timKiem.setBounds(591, 40, 127, 43);
		contentPane.add(button_timKiem);
		
		JSeparator separator_1 = new JSeparator();
		separator_1.setBounds(10, 102, 728, 2);
		contentPane.add(separator_1);
		
		JLabel label_danhSachSV = new JLabel("Danh sách SV");
		label_danhSachSV.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_danhSachSV.setBounds(26, 127, 122, 42);
		contentPane.add(label_danhSachSV);
		
		table = new JTable();
		table.setFont(new Font("Tahoma", Font.PLAIN, 10));
		table.setModel(new DefaultTableModel(
			new Object[][] {
			},
			new String[] {
				"Mã SV", "Họ tên", "Quê quán", "Ngày sinh", "Giới tính", "Điểm môn 1", "Điểm môn 2", "Điểm môn 3"
			}
		));
		
		JScrollPane scrollPane = new JScrollPane(table);
		scrollPane.setBounds(26, 179, 696, 92);
		contentPane.add(scrollPane);
		
		JLabel label_thongTinSV = new JLabel("Thông tin SV");
		label_thongTinSV.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_thongTinSV.setBounds(26, 303, 115, 42);
		contentPane.add(label_thongTinSV);
		
		JSeparator separator_2 = new JSeparator();
		separator_2.setBounds(10, 291, 728, 2);
		contentPane.add(separator_2);
		
		JLabel label_maSinhVienUnder = new JLabel("Mã sinh viên");
		label_maSinhVienUnder.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_maSinhVienUnder.setBounds(26, 355, 110, 42);
		contentPane.add(label_maSinhVienUnder);
		
		JLabel label_hoTenUnder = new JLabel("Họ tên");
		label_hoTenUnder.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_hoTenUnder.setBounds(26, 422, 110, 42);
		contentPane.add(label_hoTenUnder);
		
		JLabel label_queQuanUnder = new JLabel("Quê quán");
		label_queQuanUnder.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_queQuanUnder.setBounds(26, 489, 110, 42);
		contentPane.add(label_queQuanUnder);
		
		JLabel label_ngaySinhUnder = new JLabel("Ngày sinh");
		label_ngaySinhUnder.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_ngaySinhUnder.setBounds(26, 556, 110, 42);
		contentPane.add(label_ngaySinhUnder);
		
		textField_maSVUnder = new JTextField();
		textField_maSVUnder.setColumns(10);
		textField_maSVUnder.setBounds(161, 355, 170, 43);
		contentPane.add(textField_maSVUnder);
		
		textField_hoTen = new JTextField();
		textField_hoTen.setColumns(10);
		textField_hoTen.setBounds(161, 422, 170, 43);
		contentPane.add(textField_hoTen);
		
		textField_ngaySinh = new JTextField();
		textField_ngaySinh.setColumns(10);
		textField_ngaySinh.setBounds(161, 556, 170, 43);
		contentPane.add(textField_ngaySinh);
		
		JLabel label_gioiTinhUnder = new JLabel("Giới tính");
		label_gioiTinhUnder.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_gioiTinhUnder.setBounds(426, 355, 110, 42);
		contentPane.add(label_gioiTinhUnder);
		
		JLabel label_diem1Under = new JLabel("Điểm 1");
		label_diem1Under.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_diem1Under.setBounds(426, 422, 110, 42);
		contentPane.add(label_diem1Under);
		
		JLabel label_diem2Under = new JLabel("Điểm 2");
		label_diem2Under.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_diem2Under.setBounds(426, 489, 110, 42);
		contentPane.add(label_diem2Under);
		
		JLabel label_diem3Under = new JLabel("Điểm 3");
		label_diem3Under.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_diem3Under.setBounds(426, 556, 110, 42);
		contentPane.add(label_diem3Under);
		
		textField_diem1 = new JTextField();
		textField_diem1.setColumns(10);
		textField_diem1.setBounds(562, 422, 170, 43);
		contentPane.add(textField_diem1);
		
		textField_diem2 = new JTextField();
		textField_diem2.setColumns(10);
		textField_diem2.setBounds(562, 489, 170, 43);
		contentPane.add(textField_diem2);
		
		textField_diem3 = new JTextField();
		textField_diem3.setColumns(10);
		textField_diem3.setBounds(562, 556, 170, 43);
		contentPane.add(textField_diem3);
		
		rdbtn_nam = new JRadioButton("Nam");
		rdbtn_nam.setFont(new Font("Tahoma", Font.PLAIN, 20));
		rdbtn_nam.setBounds(562, 355, 71, 42);
		contentPane.add(rdbtn_nam);
		rdbtn_nam.setSelected(true);
		
		rdbtn_nu = new JRadioButton("Nữ");
		rdbtn_nu.setFont(new Font("Tahoma", Font.PLAIN, 20));
		rdbtn_nu.setBounds(647, 355, 71, 42);
		contentPane.add(rdbtn_nu);
		
		btngr = new ButtonGroup();
		btngr.add(rdbtn_nam);
		btngr.add(rdbtn_nu);
		
		ActionListener listener = new Listener(this);
		
		JButton btn_them = new JButton("Thêm");
		btn_them.addActionListener(listener);
		btn_them.setFont(new Font("Tahoma", Font.PLAIN, 20));
		btn_them.setBounds(21, 633, 127, 43);
		contentPane.add(btn_them);
		
		JButton btn_xoa = new JButton("Xóa");
		btn_xoa.addActionListener(listener);
		btn_xoa.setFont(new Font("Tahoma", Font.PLAIN, 20));
		btn_xoa.setBounds(595, 633, 127, 43);
		contentPane.add(btn_xoa);
		
		JButton btn_capNhat = new JButton("Cập nhật");
		btn_capNhat.addActionListener(listener);
		btn_capNhat.setFont(new Font("Tahoma", Font.PLAIN, 20));
		btn_capNhat.setBounds(215, 633, 127, 43);
		contentPane.add(btn_capNhat);
		
		JButton btn_luu = new JButton("Lưu");
		btn_luu.addActionListener(listener);
		btn_luu.setFont(new Font("Tahoma", Font.PLAIN, 20));
		btn_luu.setBounds(409, 633, 127, 43);
		contentPane.add(btn_luu);
		
		JSeparator separator_1_1 = new JSeparator();
		separator_1_1.setBounds(10, 615, 728, 2);
		contentPane.add(separator_1_1);
		
		comboBox_queQuanUnder = new JComboBox();
		comboBox_queQuanUnder.addItem("");
		for (Tinh tinh : listTinh) {
			comboBox_queQuanUnder.addItem(tinh.getTenTinh());
		}
		comboBox_queQuanUnder.setBounds(161, 488, 170, 43);
		contentPane.add(comboBox_queQuanUnder);
	}

	public void xoaForm() {
		textField_maSV.setText("");
		textField_maSVUnder.setText("");
		textField_hoTen.setText("");
		textField_ngaySinh.setText("");
		textField_diem1.setText("");
		textField_diem2.setText("");
		textField_diem3.setText("");
		comboBox_queQuanUnder.setSelectedIndex(-1);
		btngr.clearSelection();
	}

	public void themHoacCapNhatSV(SinhVien sv) {
		DefaultTableModel defaultTableModel = (DefaultTableModel) table.getModel();
		if (!this.model.kiemTraTonTai(sv)) {
			this.model.addSV(sv);
			defaultTableModel.addRow(new Object[]{
													sv.getMaSinhVien()+"", 
													sv.getTenSinhVien(),
													sv.getQueQuan().getTenTinh(),
													sv.getNgaySinh().getDate()+"/"+(sv.getNgaySinh().getMonth() + 1)+"/"+(sv.getNgaySinh().getYear()+1900),
													sv.isGioiTinh() ? "Nam" : "Nữ",
													sv.getDiemMon1()+"",
													sv.getDiemMon2()+"",
													sv.getDiemMon3()+""});
		}
		else {
			this.model.update(sv);
			int soDong = defaultTableModel.getRowCount();
			for (int i = 0; i < soDong; i++) {
				String id = defaultTableModel.getValueAt(soDong, 0)+"";
				if (id.equals(sv.getMaSinhVien()+"")) {
					defaultTableModel.getValueAt(sv.getMaSinhVien()+"", i, 0);
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
				}
			}
		}
	}

	public void hienThiThongTinSinhVienDangDuocChon() {
		DefaultTableModel defaultTableModel = (DefaultTableModel) table.getModel();
		int row = table.getSelectedRow();
		
		int maSV = Integer.valueOf(defaultTableModel.getValueAt(row, 0)+"");
		String tenSV = defaultTableModel.getValueAt(row, 1)+"";
		Tinh tinh = Tinh.getTinhByTen(defaultTableModel.getValueAt(row, 2)+"");
		String ngaySinh = defaultTableModel.getValueAt(row, 3)+"";
		String textGioiTinh = defaultTableModel.getValueAt(row, 4)+"";
		boolean gioiTinh = textGioiTinh.equals("Nam");
		float diemMon1 = Float.valueOf(defaultTableModel.getValueAt(row, 5)+"");
		float diemMon2 = Float.valueOf(defaultTableModel.getValueAt(row, 6)+"");
		float diemMon3 = Float.valueOf(defaultTableModel.getValueAt(row, 7)+"");
		
		this.textField_maSVUnder.setText(maSV+"");
		this.textField_hoTen.setText(tenSV+"");
		this.comboBox_queQuan.setSelectedItem(tinh.getTenTinh()+"");
		this.textField_ngaySinh.setText(ngaySinh+"");
		if (gioiTinh) {
			rdbtn_nam.setSelected(true);
		} else {
			rdbtn_nu.setSelected(false);
		}
		this.textField_diem1.setText(diemMon1+"");
		this.textField_diem2.setText(diemMon2+"");
		this.textField_diem3.setText(diemMon3+"");
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3063)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-03-14 23:38:01.448
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3063)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-03-14 23:38:01.450
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3063)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2023-03-14 23:38:02.318
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package View;

import java.awt.EventQueue;

import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.border.EmptyBorder;

import Model.QLSV_model;
import Model.SinhVien;
import Model.Tinh;

import javax.swing.JMenuBar;
import javax.swing.JMenu;
import javax.swing.JMenuItem;
import javax.swing.JSeparator;
import javax.swing.JLabel;
import java.awt.Font;
import javax.swing.JScrollPane;
import javax.swing.JComboBox;
import javax.swing.JTextField;
import javax.swing.ButtonGroup;
import javax.swing.JButton;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

import Controller.Listener;

import javax.swing.JRadioButton;
import java.awt.event.ActionListener;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.awt.event.ActionEvent;

public class view_QLSV extends JFrame {

	private JPanel contentPane;
	public QLSV_model model;
	private JTextField textField_maSV;
	private JTable table;
	public JTextField textField_maSVUnder;
	public JTextField textField_hoTen;
	public JTextField textField_ngaySinh;
	public JTextField textField_diem1;
	public JTextField textField_diem2;
	public JTextField textField_diem3;
	public JComboBox comboBox_queQuanUnder;
	private JComboBox comboBox_queQuan;
	public ButtonGroup btngr;
	public JRadioButton rdbtn_nam;
	public JRadioButton rdbtn_nu;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					view_QLSV frame = new view_QLSV();
					frame.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the frame.
	 */
	public view_QLSV() {
		model = new QLSV_model();
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setBounds(100, 100, 757, 759);
		setTitle("Chương trình quản lý sinh viên của Trần Phúc Khánh");
		
		JMenuBar menuBar = new JMenuBar();
		setJMenuBar(menuBar);
		
		JMenu menu_file = new JMenu("File");
		menuBar.add(menu_file);
		
		JMenuItem menuItem_open = new JMenuItem("Open");
		menu_file.add(menuItem_open);
		
		JMenuItem mntmClose = new JMenuItem("Close");
		menu_file.add(mntmClose);
		
		JSeparator separator = new JSeparator();
		menu_file.add(separator);
		
		JMenuItem menuItem_exit = new JMenuItem("Exit");
		menu_file.add(menuItem_exit);
		
		JMenu menu_about = new JMenu("About");
		menuBar.add(menu_about);
		
		JMenuItem menuItem_about_me = new JMenuItem("About me");
		menu_about.add(menuItem_about_me);
		contentPane = new JPanel();
		contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));

		setContentPane(contentPane);
		contentPane.setLayout(null);
		
		JLabel label_queQuan = new JLabel("Quê quán");
		label_queQuan.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_queQuan.setBounds(47, 40, 86, 42);
		contentPane.add(label_queQuan);
		
		comboBox_queQuan = new JComboBox();
		ArrayList<Tinh> listTinh = Tinh.getDS_Tinh();
		comboBox_queQuan.addItem("");
		for (Tinh tinh : listTinh) {
			comboBox_queQuan.addItem(tinh.getTenTinh());
		}
		comboBox_queQuan.setFont(new Font("Tahoma", Font.PLAIN, 15));
		comboBox_queQuan.setBounds(140, 40, 102, 43);
		contentPane.add(comboBox_queQuan);
		
		JLabel label_maSinhVien = new JLabel("Mã sinh viên");
		label_maSinhVien.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_maSinhVien.setBounds(306, 40, 110, 42);
		contentPane.add(label_maSinhVien);
		
		textField_maSV = new JTextField();
		textField_maSV.setBounds(426, 40, 102, 43);
		contentPane.add(textField_maSV);
		textField_maSV.setColumns(10);
		
		JButton button_timKiem = new JButton("Tìm kiếm");
		button_timKiem.setFont(new Font("Tahoma", Font.PLAIN, 20));
		button_timKiem.setBounds(591, 40, 127, 43);
		contentPane.add(button_timKiem);
		
		JSeparator separator_1 = new JSeparator();
		separator_1.setBounds(10, 102, 728, 2);
		contentPane.add(separator_1);
		
		JLabel label_danhSachSV = new JLabel("Danh sách SV");
		label_danhSachSV.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_danhSachSV.setBounds(26, 127, 122, 42);
		contentPane.add(label_danhSachSV);
		
		table = new JTable();
		table.setFont(new Font("Tahoma", Font.PLAIN, 10));
		table.setModel(new DefaultTableModel(
			new Object[][] {
			},
			new String[] {
				"Mã SV", "Họ tên", "Quê quán", "Ngày sinh", "Giới tính", "Điểm môn 1", "Điểm môn 2", "Điểm môn 3"
			}
		));
		
		JScrollPane scrollPane = new JScrollPane(table);
		scrollPane.setBounds(26, 179, 696, 92);
		contentPane.add(scrollPane);
		
		JLabel label_thongTinSV = new JLabel("Thông tin SV");
		label_thongTinSV.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_thongTinSV.setBounds(26, 303, 115, 42);
		contentPane.add(label_thongTinSV);
		
		JSeparator separator_2 = new JSeparator();
		separator_2.setBounds(10, 291, 728, 2);
		contentPane.add(separator_2);
		
		JLabel label_maSinhVienUnder = new JLabel("Mã sinh viên");
		label_maSinhVienUnder.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_maSinhVienUnder.setBounds(26, 355, 110, 42);
		contentPane.add(label_maSinhVienUnder);
		
		JLabel label_hoTenUnder = new JLabel("Họ tên");
		label_hoTenUnder.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_hoTenUnder.setBounds(26, 422, 110, 42);
		contentPane.add(label_hoTenUnder);
		
		JLabel label_queQuanUnder = new JLabel("Quê quán");
		label_queQuanUnder.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_queQuanUnder.setBounds(26, 489, 110, 42);
		contentPane.add(label_queQuanUnder);
		
		JLabel label_ngaySinhUnder = new JLabel("Ngày sinh");
		label_ngaySinhUnder.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_ngaySinhUnder.setBounds(26, 556, 110, 42);
		contentPane.add(label_ngaySinhUnder);
		
		textField_maSVUnder = new JTextField();
		textField_maSVUnder.setColumns(10);
		textField_maSVUnder.setBounds(161, 355, 170, 43);
		contentPane.add(textField_maSVUnder);
		
		textField_hoTen = new JTextField();
		textField_hoTen.setColumns(10);
		textField_hoTen.setBounds(161, 422, 170, 43);
		contentPane.add(textField_hoTen);
		
		textField_ngaySinh = new JTextField();
		textField_ngaySinh.setColumns(10);
		textField_ngaySinh.setBounds(161, 556, 170, 43);
		contentPane.add(textField_ngaySinh);
		
		JLabel label_gioiTinhUnder = new JLabel("Giới tính");
		label_gioiTinhUnder.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_gioiTinhUnder.setBounds(426, 355, 110, 42);
		contentPane.add(label_gioiTinhUnder);
		
		JLabel label_diem1Under = new JLabel("Điểm 1");
		label_diem1Under.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_diem1Under.setBounds(426, 422, 110, 42);
		contentPane.add(label_diem1Under);
		
		JLabel label_diem2Under = new JLabel("Điểm 2");
		label_diem2Under.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_diem2Under.setBounds(426, 489, 110, 42);
		contentPane.add(label_diem2Under);
		
		JLabel label_diem3Under = new JLabel("Điểm 3");
		label_diem3Under.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_diem3Under.setBounds(426, 556, 110, 42);
		contentPane.add(label_diem3Under);
		
		textField_diem1 = new JTextField();
		textField_diem1.setColumns(10);
		textField_diem1.setBounds(562, 422, 170, 43);
		contentPane.add(textField_diem1);
		
		textField_diem2 = new JTextField();
		textField_diem2.setColumns(10);
		textField_diem2.setBounds(562, 489, 170, 43);
		contentPane.add(textField_diem2);
		
		textField_diem3 = new JTextField();
		textField_diem3.setColumns(10);
		textField_diem3.setBounds(562, 556, 170, 43);
		contentPane.add(textField_diem3);
		
		rdbtn_nam = new JRadioButton("Nam");
		rdbtn_nam.setFont(new Font("Tahoma", Font.PLAIN, 20));
		rdbtn_nam.setBounds(562, 355, 71, 42);
		contentPane.add(rdbtn_nam);
		rdbtn_nam.setSelected(true);
		
		rdbtn_nu = new JRadioButton("Nữ");
		rdbtn_nu.setFont(new Font("Tahoma", Font.PLAIN, 20));
		rdbtn_nu.setBounds(647, 355, 71, 42);
		contentPane.add(rdbtn_nu);
		
		btngr = new ButtonGroup();
		btngr.add(rdbtn_nam);
		btngr.add(rdbtn_nu);
		
		ActionListener listener = new Listener(this);
		
		JButton btn_them = new JButton("Thêm");
		btn_them.addActionListener(listener);
		btn_them.setFont(new Font("Tahoma", Font.PLAIN, 20));
		btn_them.setBounds(21, 633, 127, 43);
		contentPane.add(btn_them);
		
		JButton btn_xoa = new JButton("Xóa");
		btn_xoa.addActionListener(listener);
		btn_xoa.setFont(new Font("Tahoma", Font.PLAIN, 20));
		btn_xoa.setBounds(595, 633, 127, 43);
		contentPane.add(btn_xoa);
		
		JButton btn_capNhat = new JButton("Cập nhật");
		btn_capNhat.addActionListener(listener);
		btn_capNhat.setFont(new Font("Tahoma", Font.PLAIN, 20));
		btn_capNhat.setBounds(215, 633, 127, 43);
		contentPane.add(btn_capNhat);
		
		JButton btn_luu = new JButton("Lưu");
		btn_luu.addActionListener(listener);
		btn_luu.setFont(new Font("Tahoma", Font.PLAIN, 20));
		btn_luu.setBounds(409, 633, 127, 43);
		contentPane.add(btn_luu);
		
		JSeparator separator_1_1 = new JSeparator();
		separator_1_1.setBounds(10, 615, 728, 2);
		contentPane.add(separator_1_1);
		
		comboBox_queQuanUnder = new JComboBox();
		comboBox_queQuanUnder.addItem("");
		for (Tinh tinh : listTinh) {
			comboBox_queQuanUnder.addItem(tinh.getTenTinh());
		}
		comboBox_queQuanUnder.setBounds(161, 488, 170, 43);
		contentPane.add(comboBox_queQuanUnder);
	}

	public void xoaForm() {
		textField_maSV.setText("");
		textField_maSVUnder.setText("");
		textField_hoTen.setText("");
		textField_ngaySinh.setText("");
		textField_diem1.setText("");
		textField_diem2.setText("");
		textField_diem3.setText("");
		comboBox_queQuanUnder.setSelectedIndex(-1);
		btngr.clearSelection();
	}

	public void themHoacCapNhatSV(SinhVien sv) {
		DefaultTableModel defaultTableModel = (DefaultTableModel) table.getModel();
		if (!this.model.kiemTraTonTai(sv)) {
			this.model.addSV(sv);
			defaultTableModel.addRow(new Object[]{
													sv.getMaSinhVien()+"", 
													sv.getTenSinhVien(),
													sv.getQueQuan().getTenTinh(),
													sv.getNgaySinh().getDate()+"/"+(sv.getNgaySinh().getMonth() + 1)+"/"+(sv.getNgaySinh().getYear()+1900),
													sv.isGioiTinh() ? "Nam" : "Nữ",
													sv.getDiemMon1()+"",
													sv.getDiemMon2()+"",
													sv.getDiemMon3()+""});
		}
		else {
			this.model.update(sv);
			int soDong = defaultTableModel.getRowCount();
			for (int i = 0; i < soDong; i++) {
				String id = defaultTableModel.getValueAt(soDong, 0)+"";
				if (id.equals(sv.getMaSinhVien()+"")) {
					defaultTableModel.getValueAt(sv.getMaSinhVien()+"", i, 0);
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
				}
			}
		}
	}

	public void hienThiThongTinSinhVienDangDuocChon() {
		DefaultTableModel defaultTableModel = (DefaultTableModel) table.getModel();
		int row = table.getSelectedRow();
		
		int maSV = Integer.valueOf(defaultTableModel.getValueAt(row, 0)+"");
		String tenSV = defaultTableModel.getValueAt(row, 1)+"";
		Tinh tinh = Tinh.getTinhByTen(defaultTableModel.getValueAt(row, 2)+"");
		String ngaySinh = defaultTableModel.getValueAt(row, 3)+"";
		String textGioiTinh = defaultTableModel.getValueAt(row, 4)+"";
		boolean gioiTinh = textGioiTinh.equals("Nam");
		float diemMon1 = Float.valueOf(defaultTableModel.getValueAt(row, 5)+"");
		float diemMon2 = Float.valueOf(defaultTableModel.getValueAt(row, 6)+"");
		float diemMon3 = Float.valueOf(defaultTableModel.getValueAt(row, 7)+"");
		
		this.textField_maSVUnder.setText(maSV+"");
		this.textField_hoTen.setText(tenSV+"");
		this.comboBox_queQuan.setSelectedItem(tinh.getTenTinh()+"");
		this.textField_ngaySinh.setText(ngaySinh+"");
		if (gioiTinh) {
			rdbtn_nam.setSelected(true);
		} else {
			rdbtn_nu.setSelected(false);
		}
		this.textField_diem1.setText(diemMon1+"");
		this.textField_diem2.setText(diemMon2+"");
		this.textField_diem3.setText(diemMon3+"");
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3063)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-03-14 23:38:02.319
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3063)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-03-14 23:38:02.319
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3063)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2023-03-14 23:38:18.420
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package View;

import java.awt.EventQueue;

import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.border.EmptyBorder;

import Model.QLSV_model;
import Model.SinhVien;
import Model.Tinh;

import javax.swing.JMenuBar;
import javax.swing.JMenu;
import javax.swing.JMenuItem;
import javax.swing.JSeparator;
import javax.swing.JLabel;
import java.awt.Font;
import javax.swing.JScrollPane;
import javax.swing.JComboBox;
import javax.swing.JTextField;
import javax.swing.ButtonGroup;
import javax.swing.JButton;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

import Controller.Listener;

import javax.swing.JRadioButton;
import java.awt.event.ActionListener;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.awt.event.ActionEvent;

public class view_QLSV extends JFrame {

	private JPanel contentPane;
	public QLSV_model model;
	private JTextField textField_maSV;
	private JTable table;
	public JTextField textField_maSVUnder;
	public JTextField textField_hoTen;
	public JTextField textField_ngaySinh;
	public JTextField textField_diem1;
	public JTextField textField_diem2;
	public JTextField textField_diem3;
	public JComboBox comboBox_queQuanUnder;
	private JComboBox comboBox_queQuan;
	public ButtonGroup btngr;
	public JRadioButton rdbtn_nam;
	public JRadioButton rdbtn_nu;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					view_QLSV frame = new view_QLSV();
					frame.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the frame.
	 */
	public view_QLSV() {
		model = new QLSV_model();
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setBounds(100, 100, 757, 759);
		setTitle("Chương trình quản lý sinh viên của Trần Phúc Khánh");
		
		JMenuBar menuBar = new JMenuBar();
		setJMenuBar(menuBar);
		
		JMenu menu_file = new JMenu("File");
		menuBar.add(menu_file);
		
		JMenuItem menuItem_open = new JMenuItem("Open");
		menu_file.add(menuItem_open);
		
		JMenuItem mntmClose = new JMenuItem("Close");
		menu_file.add(mntmClose);
		
		JSeparator separator = new JSeparator();
		menu_file.add(separator);
		
		JMenuItem menuItem_exit = new JMenuItem("Exit");
		menu_file.add(menuItem_exit);
		
		JMenu menu_about = new JMenu("About");
		menuBar.add(menu_about);
		
		JMenuItem menuItem_about_me = new JMenuItem("About me");
		menu_about.add(menuItem_about_me);
		contentPane = new JPanel();
		contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));

		setContentPane(contentPane);
		contentPane.setLayout(null);
		
		JLabel label_queQuan = new JLabel("Quê quán");
		label_queQuan.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_queQuan.setBounds(47, 40, 86, 42);
		contentPane.add(label_queQuan);
		
		comboBox_queQuan = new JComboBox();
		ArrayList<Tinh> listTinh = Tinh.getDS_Tinh();
		comboBox_queQuan.addItem("");
		for (Tinh tinh : listTinh) {
			comboBox_queQuan.addItem(tinh.getTenTinh());
		}
		comboBox_queQuan.setFont(new Font("Tahoma", Font.PLAIN, 15));
		comboBox_queQuan.setBounds(140, 40, 102, 43);
		contentPane.add(comboBox_queQuan);
		
		JLabel label_maSinhVien = new JLabel("Mã sinh viên");
		label_maSinhVien.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_maSinhVien.setBounds(306, 40, 110, 42);
		contentPane.add(label_maSinhVien);
		
		textField_maSV = new JTextField();
		textField_maSV.setBounds(426, 40, 102, 43);
		contentPane.add(textField_maSV);
		textField_maSV.setColumns(10);
		
		JButton button_timKiem = new JButton("Tìm kiếm");
		button_timKiem.setFont(new Font("Tahoma", Font.PLAIN, 20));
		button_timKiem.setBounds(591, 40, 127, 43);
		contentPane.add(button_timKiem);
		
		JSeparator separator_1 = new JSeparator();
		separator_1.setBounds(10, 102, 728, 2);
		contentPane.add(separator_1);
		
		JLabel label_danhSachSV = new JLabel("Danh sách SV");
		label_danhSachSV.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_danhSachSV.setBounds(26, 127, 122, 42);
		contentPane.add(label_danhSachSV);
		
		table = new JTable();
		table.setFont(new Font("Tahoma", Font.PLAIN, 10));
		table.setModel(new DefaultTableModel(
			new Object[][] {
			},
			new String[] {
				"Mã SV", "Họ tên", "Quê quán", "Ngày sinh", "Giới tính", "Điểm môn 1", "Điểm môn 2", "Điểm môn 3"
			}
		));
		
		JScrollPane scrollPane = new JScrollPane(table);
		scrollPane.setBounds(26, 179, 696, 92);
		contentPane.add(scrollPane);
		
		JLabel label_thongTinSV = new JLabel("Thông tin SV");
		label_thongTinSV.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_thongTinSV.setBounds(26, 303, 115, 42);
		contentPane.add(label_thongTinSV);
		
		JSeparator separator_2 = new JSeparator();
		separator_2.setBounds(10, 291, 728, 2);
		contentPane.add(separator_2);
		
		JLabel label_maSinhVienUnder = new JLabel("Mã sinh viên");
		label_maSinhVienUnder.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_maSinhVienUnder.setBounds(26, 355, 110, 42);
		contentPane.add(label_maSinhVienUnder);
		
		JLabel label_hoTenUnder = new JLabel("Họ tên");
		label_hoTenUnder.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_hoTenUnder.setBounds(26, 422, 110, 42);
		contentPane.add(label_hoTenUnder);
		
		JLabel label_queQuanUnder = new JLabel("Quê quán");
		label_queQuanUnder.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_queQuanUnder.setBounds(26, 489, 110, 42);
		contentPane.add(label_queQuanUnder);
		
		JLabel label_ngaySinhUnder = new JLabel("Ngày sinh");
		label_ngaySinhUnder.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_ngaySinhUnder.setBounds(26, 556, 110, 42);
		contentPane.add(label_ngaySinhUnder);
		
		textField_maSVUnder = new JTextField();
		textField_maSVUnder.setColumns(10);
		textField_maSVUnder.setBounds(161, 355, 170, 43);
		contentPane.add(textField_maSVUnder);
		
		textField_hoTen = new JTextField();
		textField_hoTen.setColumns(10);
		textField_hoTen.setBounds(161, 422, 170, 43);
		contentPane.add(textField_hoTen);
		
		textField_ngaySinh = new JTextField();
		textField_ngaySinh.setColumns(10);
		textField_ngaySinh.setBounds(161, 556, 170, 43);
		contentPane.add(textField_ngaySinh);
		
		JLabel label_gioiTinhUnder = new JLabel("Giới tính");
		label_gioiTinhUnder.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_gioiTinhUnder.setBounds(426, 355, 110, 42);
		contentPane.add(label_gioiTinhUnder);
		
		JLabel label_diem1Under = new JLabel("Điểm 1");
		label_diem1Under.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_diem1Under.setBounds(426, 422, 110, 42);
		contentPane.add(label_diem1Under);
		
		JLabel label_diem2Under = new JLabel("Điểm 2");
		label_diem2Under.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_diem2Under.setBounds(426, 489, 110, 42);
		contentPane.add(label_diem2Under);
		
		JLabel label_diem3Under = new JLabel("Điểm 3");
		label_diem3Under.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_diem3Under.setBounds(426, 556, 110, 42);
		contentPane.add(label_diem3Under);
		
		textField_diem1 = new JTextField();
		textField_diem1.setColumns(10);
		textField_diem1.setBounds(562, 422, 170, 43);
		contentPane.add(textField_diem1);
		
		textField_diem2 = new JTextField();
		textField_diem2.setColumns(10);
		textField_diem2.setBounds(562, 489, 170, 43);
		contentPane.add(textField_diem2);
		
		textField_diem3 = new JTextField();
		textField_diem3.setColumns(10);
		textField_diem3.setBounds(562, 556, 170, 43);
		contentPane.add(textField_diem3);
		
		rdbtn_nam = new JRadioButton("Nam");
		rdbtn_nam.setFont(new Font("Tahoma", Font.PLAIN, 20));
		rdbtn_nam.setBounds(562, 355, 71, 42);
		contentPane.add(rdbtn_nam);
		rdbtn_nam.setSelected(true);
		
		rdbtn_nu = new JRadioButton("Nữ");
		rdbtn_nu.setFont(new Font("Tahoma", Font.PLAIN, 20));
		rdbtn_nu.setBounds(647, 355, 71, 42);
		contentPane.add(rdbtn_nu);
		
		btngr = new ButtonGroup();
		btngr.add(rdbtn_nam);
		btngr.add(rdbtn_nu);
		
		ActionListener listener = new Listener(this);
		
		JButton btn_them = new JButton("Thêm");
		btn_them.addActionListener(listener);
		btn_them.setFont(new Font("Tahoma", Font.PLAIN, 20));
		btn_them.setBounds(21, 633, 127, 43);
		contentPane.add(btn_them);
		
		JButton btn_xoa = new JButton("Xóa");
		btn_xoa.addActionListener(listener);
		btn_xoa.setFont(new Font("Tahoma", Font.PLAIN, 20));
		btn_xoa.setBounds(595, 633, 127, 43);
		contentPane.add(btn_xoa);
		
		JButton btn_capNhat = new JButton("Cập nhật");
		btn_capNhat.addActionListener(listener);
		btn_capNhat.setFont(new Font("Tahoma", Font.PLAIN, 20));
		btn_capNhat.setBounds(215, 633, 127, 43);
		contentPane.add(btn_capNhat);
		
		JButton btn_luu = new JButton("Lưu");
		btn_luu.addActionListener(listener);
		btn_luu.setFont(new Font("Tahoma", Font.PLAIN, 20));
		btn_luu.setBounds(409, 633, 127, 43);
		contentPane.add(btn_luu);
		
		JSeparator separator_1_1 = new JSeparator();
		separator_1_1.setBounds(10, 615, 728, 2);
		contentPane.add(separator_1_1);
		
		comboBox_queQuanUnder = new JComboBox();
		comboBox_queQuanUnder.addItem("");
		for (Tinh tinh : listTinh) {
			comboBox_queQuanUnder.addItem(tinh.getTenTinh());
		}
		comboBox_queQuanUnder.setBounds(161, 488, 170, 43);
		contentPane.add(comboBox_queQuanUnder);
	}

	public void xoaForm() {
		textField_maSV.setText("");
		textField_maSVUnder.setText("");
		textField_hoTen.setText("");
		textField_ngaySinh.setText("");
		textField_diem1.setText("");
		textField_diem2.setText("");
		textField_diem3.setText("");
		comboBox_queQuanUnder.setSelectedIndex(-1);
		btngr.clearSelection();
	}

	public void themHoacCapNhatSV(SinhVien sv) {
		DefaultTableModel defaultTableModel = (DefaultTableModel) table.getModel();
		if (!this.model.kiemTraTonTai(sv)) {
			this.model.addSV(sv);
			defaultTableModel.addRow(new Object[]{
													sv.getMaSinhVien()+"", 
													sv.getTenSinhVien(),
													sv.getQueQuan().getTenTinh(),
													sv.getNgaySinh().getDate()+"/"+(sv.getNgaySinh().getMonth() + 1)+"/"+(sv.getNgaySinh().getYear()+1900),
													sv.isGioiTinh() ? "Nam" : "Nữ",
													sv.getDiemMon1()+"",
													sv.getDiemMon2()+"",
													sv.getDiemMon3()+""});
		}
		else {
			this.model.update(sv);
			int soDong = defaultTableModel.getRowCount();
			for (int i = 0; i < soDong; i++) {
				String id = defaultTableModel.getValueAt(soDong, 0)+"";
				if (id.equals(sv.getMaSinhVien()+"")) {
					defaultTableModel.getValueAt(sv.getMaSinhVien()+"", i, 0);
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
				}
			}
		}
	}

	public void hienThiThongTinSinhVienDangDuocChon() {
		DefaultTableModel defaultTableModel = (DefaultTableModel) table.getModel();
		int row = table.getSelectedRow();
		
		int maSV = Integer.valueOf(defaultTableModel.getValueAt(row, 0)+"");
		String tenSV = defaultTableModel.getValueAt(row, 1)+"";
		Tinh tinh = Tinh.getTinhByTen(defaultTableModel.getValueAt(row, 2)+"");
		String ngaySinh = defaultTableModel.getValueAt(row, 3)+"";
		String textGioiTinh = defaultTableModel.getValueAt(row, 4)+"";
		boolean gioiTinh = textGioiTinh.equals("Nam");
		float diemMon1 = Float.valueOf(defaultTableModel.getValueAt(row, 5)+"");
		float diemMon2 = Float.valueOf(defaultTableModel.getValueAt(row, 6)+"");
		float diemMon3 = Float.valueOf(defaultTableModel.getValueAt(row, 7)+"");
		
		this.textField_maSVUnder.setText(maSV+"");
		this.textField_hoTen.setText(tenSV+"");
		this.comboBox_queQuan.setSelectedItem(tinh.getTenTinh()+"");
		this.textField_ngaySinh.setText(ngaySinh+"");
		if (gioiTinh) {
			rdbtn_nam.setSelected(true);
		} else {
			rdbtn_nu.setSelected(false);
		}
		this.textField_diem1.setText(diemMon1+"");
		this.textField_diem2.setText(diemMon2+"");
		this.textField_diem3.setText(diemMon3+"");
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3063)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-03-14 23:38:18.421
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3063)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-03-14 23:38:18.422
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3063)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2023-03-14 23:38:19.028
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package View;

import java.awt.EventQueue;

import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.border.EmptyBorder;

import Model.QLSV_model;
import Model.SinhVien;
import Model.Tinh;

import javax.swing.JMenuBar;
import javax.swing.JMenu;
import javax.swing.JMenuItem;
import javax.swing.JSeparator;
import javax.swing.JLabel;
import java.awt.Font;
import javax.swing.JScrollPane;
import javax.swing.JComboBox;
import javax.swing.JTextField;
import javax.swing.ButtonGroup;
import javax.swing.JButton;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

import Controller.Listener;

import javax.swing.JRadioButton;
import java.awt.event.ActionListener;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.awt.event.ActionEvent;

public class view_QLSV extends JFrame {

	private JPanel contentPane;
	public QLSV_model model;
	private JTextField textField_maSV;
	private JTable table;
	public JTextField textField_maSVUnder;
	public JTextField textField_hoTen;
	public JTextField textField_ngaySinh;
	public JTextField textField_diem1;
	public JTextField textField_diem2;
	public JTextField textField_diem3;
	public JComboBox comboBox_queQuanUnder;
	private JComboBox comboBox_queQuan;
	public ButtonGroup btngr;
	public JRadioButton rdbtn_nam;
	public JRadioButton rdbtn_nu;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					view_QLSV frame = new view_QLSV();
					frame.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the frame.
	 */
	public view_QLSV() {
		model = new QLSV_model();
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setBounds(100, 100, 757, 759);
		setTitle("Chương trình quản lý sinh viên của Trần Phúc Khánh");
		
		JMenuBar menuBar = new JMenuBar();
		setJMenuBar(menuBar);
		
		JMenu menu_file = new JMenu("File");
		menuBar.add(menu_file);
		
		JMenuItem menuItem_open = new JMenuItem("Open");
		menu_file.add(menuItem_open);
		
		JMenuItem mntmClose = new JMenuItem("Close");
		menu_file.add(mntmClose);
		
		JSeparator separator = new JSeparator();
		menu_file.add(separator);
		
		JMenuItem menuItem_exit = new JMenuItem("Exit");
		menu_file.add(menuItem_exit);
		
		JMenu menu_about = new JMenu("About");
		menuBar.add(menu_about);
		
		JMenuItem menuItem_about_me = new JMenuItem("About me");
		menu_about.add(menuItem_about_me);
		contentPane = new JPanel();
		contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));

		setContentPane(contentPane);
		contentPane.setLayout(null);
		
		JLabel label_queQuan = new JLabel("Quê quán");
		label_queQuan.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_queQuan.setBounds(47, 40, 86, 42);
		contentPane.add(label_queQuan);
		
		comboBox_queQuan = new JComboBox();
		ArrayList<Tinh> listTinh = Tinh.getDS_Tinh();
		comboBox_queQuan.addItem("");
		for (Tinh tinh : listTinh) {
			comboBox_queQuan.addItem(tinh.getTenTinh());
		}
		comboBox_queQuan.setFont(new Font("Tahoma", Font.PLAIN, 15));
		comboBox_queQuan.setBounds(140, 40, 102, 43);
		contentPane.add(comboBox_queQuan);
		
		JLabel label_maSinhVien = new JLabel("Mã sinh viên");
		label_maSinhVien.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_maSinhVien.setBounds(306, 40, 110, 42);
		contentPane.add(label_maSinhVien);
		
		textField_maSV = new JTextField();
		textField_maSV.setBounds(426, 40, 102, 43);
		contentPane.add(textField_maSV);
		textField_maSV.setColumns(10);
		
		JButton button_timKiem = new JButton("Tìm kiếm");
		button_timKiem.setFont(new Font("Tahoma", Font.PLAIN, 20));
		button_timKiem.setBounds(591, 40, 127, 43);
		contentPane.add(button_timKiem);
		
		JSeparator separator_1 = new JSeparator();
		separator_1.setBounds(10, 102, 728, 2);
		contentPane.add(separator_1);
		
		JLabel label_danhSachSV = new JLabel("Danh sách SV");
		label_danhSachSV.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_danhSachSV.setBounds(26, 127, 122, 42);
		contentPane.add(label_danhSachSV);
		
		table = new JTable();
		table.setFont(new Font("Tahoma", Font.PLAIN, 10));
		table.setModel(new DefaultTableModel(
			new Object[][] {
			},
			new String[] {
				"Mã SV", "Họ tên", "Quê quán", "Ngày sinh", "Giới tính", "Điểm môn 1", "Điểm môn 2", "Điểm môn 3"
			}
		));
		
		JScrollPane scrollPane = new JScrollPane(table);
		scrollPane.setBounds(26, 179, 696, 92);
		contentPane.add(scrollPane);
		
		JLabel label_thongTinSV = new JLabel("Thông tin SV");
		label_thongTinSV.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_thongTinSV.setBounds(26, 303, 115, 42);
		contentPane.add(label_thongTinSV);
		
		JSeparator separator_2 = new JSeparator();
		separator_2.setBounds(10, 291, 728, 2);
		contentPane.add(separator_2);
		
		JLabel label_maSinhVienUnder = new JLabel("Mã sinh viên");
		label_maSinhVienUnder.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_maSinhVienUnder.setBounds(26, 355, 110, 42);
		contentPane.add(label_maSinhVienUnder);
		
		JLabel label_hoTenUnder = new JLabel("Họ tên");
		label_hoTenUnder.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_hoTenUnder.setBounds(26, 422, 110, 42);
		contentPane.add(label_hoTenUnder);
		
		JLabel label_queQuanUnder = new JLabel("Quê quán");
		label_queQuanUnder.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_queQuanUnder.setBounds(26, 489, 110, 42);
		contentPane.add(label_queQuanUnder);
		
		JLabel label_ngaySinhUnder = new JLabel("Ngày sinh");
		label_ngaySinhUnder.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_ngaySinhUnder.setBounds(26, 556, 110, 42);
		contentPane.add(label_ngaySinhUnder);
		
		textField_maSVUnder = new JTextField();
		textField_maSVUnder.setColumns(10);
		textField_maSVUnder.setBounds(161, 355, 170, 43);
		contentPane.add(textField_maSVUnder);
		
		textField_hoTen = new JTextField();
		textField_hoTen.setColumns(10);
		textField_hoTen.setBounds(161, 422, 170, 43);
		contentPane.add(textField_hoTen);
		
		textField_ngaySinh = new JTextField();
		textField_ngaySinh.setColumns(10);
		textField_ngaySinh.setBounds(161, 556, 170, 43);
		contentPane.add(textField_ngaySinh);
		
		JLabel label_gioiTinhUnder = new JLabel("Giới tính");
		label_gioiTinhUnder.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_gioiTinhUnder.setBounds(426, 355, 110, 42);
		contentPane.add(label_gioiTinhUnder);
		
		JLabel label_diem1Under = new JLabel("Điểm 1");
		label_diem1Under.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_diem1Under.setBounds(426, 422, 110, 42);
		contentPane.add(label_diem1Under);
		
		JLabel label_diem2Under = new JLabel("Điểm 2");
		label_diem2Under.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_diem2Under.setBounds(426, 489, 110, 42);
		contentPane.add(label_diem2Under);
		
		JLabel label_diem3Under = new JLabel("Điểm 3");
		label_diem3Under.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_diem3Under.setBounds(426, 556, 110, 42);
		contentPane.add(label_diem3Under);
		
		textField_diem1 = new JTextField();
		textField_diem1.setColumns(10);
		textField_diem1.setBounds(562, 422, 170, 43);
		contentPane.add(textField_diem1);
		
		textField_diem2 = new JTextField();
		textField_diem2.setColumns(10);
		textField_diem2.setBounds(562, 489, 170, 43);
		contentPane.add(textField_diem2);
		
		textField_diem3 = new JTextField();
		textField_diem3.setColumns(10);
		textField_diem3.setBounds(562, 556, 170, 43);
		contentPane.add(textField_diem3);
		
		rdbtn_nam = new JRadioButton("Nam");
		rdbtn_nam.setFont(new Font("Tahoma", Font.PLAIN, 20));
		rdbtn_nam.setBounds(562, 355, 71, 42);
		contentPane.add(rdbtn_nam);
		rdbtn_nam.setSelected(true);
		
		rdbtn_nu = new JRadioButton("Nữ");
		rdbtn_nu.setFont(new Font("Tahoma", Font.PLAIN, 20));
		rdbtn_nu.setBounds(647, 355, 71, 42);
		contentPane.add(rdbtn_nu);
		
		btngr = new ButtonGroup();
		btngr.add(rdbtn_nam);
		btngr.add(rdbtn_nu);
		
		ActionListener listener = new Listener(this);
		
		JButton btn_them = new JButton("Thêm");
		btn_them.addActionListener(listener);
		btn_them.setFont(new Font("Tahoma", Font.PLAIN, 20));
		btn_them.setBounds(21, 633, 127, 43);
		contentPane.add(btn_them);
		
		JButton btn_xoa = new JButton("Xóa");
		btn_xoa.addActionListener(listener);
		btn_xoa.setFont(new Font("Tahoma", Font.PLAIN, 20));
		btn_xoa.setBounds(595, 633, 127, 43);
		contentPane.add(btn_xoa);
		
		JButton btn_capNhat = new JButton("Cập nhật");
		btn_capNhat.addActionListener(listener);
		btn_capNhat.setFont(new Font("Tahoma", Font.PLAIN, 20));
		btn_capNhat.setBounds(215, 633, 127, 43);
		contentPane.add(btn_capNhat);
		
		JButton btn_luu = new JButton("Lưu");
		btn_luu.addActionListener(listener);
		btn_luu.setFont(new Font("Tahoma", Font.PLAIN, 20));
		btn_luu.setBounds(409, 633, 127, 43);
		contentPane.add(btn_luu);
		
		JSeparator separator_1_1 = new JSeparator();
		separator_1_1.setBounds(10, 615, 728, 2);
		contentPane.add(separator_1_1);
		
		comboBox_queQuanUnder = new JComboBox();
		comboBox_queQuanUnder.addItem("");
		for (Tinh tinh : listTinh) {
			comboBox_queQuanUnder.addItem(tinh.getTenTinh());
		}
		comboBox_queQuanUnder.setBounds(161, 488, 170, 43);
		contentPane.add(comboBox_queQuanUnder);
	}

	public void xoaForm() {
		textField_maSV.setText("");
		textField_maSVUnder.setText("");
		textField_hoTen.setText("");
		textField_ngaySinh.setText("");
		textField_diem1.setText("");
		textField_diem2.setText("");
		textField_diem3.setText("");
		comboBox_queQuanUnder.setSelectedIndex(-1);
		btngr.clearSelection();
	}

	public void themHoacCapNhatSV(SinhVien sv) {
		DefaultTableModel defaultTableModel = (DefaultTableModel) table.getModel();
		if (!this.model.kiemTraTonTai(sv)) {
			this.model.addSV(sv);
			defaultTableModel.addRow(new Object[]{
													sv.getMaSinhVien()+"", 
													sv.getTenSinhVien(),
													sv.getQueQuan().getTenTinh(),
													sv.getNgaySinh().getDate()+"/"+(sv.getNgaySinh().getMonth() + 1)+"/"+(sv.getNgaySinh().getYear()+1900),
													sv.isGioiTinh() ? "Nam" : "Nữ",
													sv.getDiemMon1()+"",
													sv.getDiemMon2()+"",
													sv.getDiemMon3()+""});
		}
		else {
			this.model.update(sv);
			int soDong = defaultTableModel.getRowCount();
			for (int i = 0; i < soDong; i++) {
				String id = defaultTableModel.getValueAt(soDong, 0)+"";
				if (id.equals(sv.getMaSinhVien()+"")) {
					defaultTableModel.getValueAt(sv.getMaSinhVien()+"", i, 0);
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
				}
			}
		}
	}

	public void hienThiThongTinSinhVienDangDuocChon() {
		DefaultTableModel defaultTableModel = (DefaultTableModel) table.getModel();
		int row = table.getSelectedRow();
		
		int maSV = Integer.valueOf(defaultTableModel.getValueAt(row, 0)+"");
		String tenSV = defaultTableModel.getValueAt(row, 1)+"";
		Tinh tinh = Tinh.getTinhByTen(defaultTableModel.getValueAt(row, 2)+"");
		String ngaySinh = defaultTableModel.getValueAt(row, 3)+"";
		String textGioiTinh = defaultTableModel.getValueAt(row, 4)+"";
		boolean gioiTinh = textGioiTinh.equals("Nam");
		float diemMon1 = Float.valueOf(defaultTableModel.getValueAt(row, 5)+"");
		float diemMon2 = Float.valueOf(defaultTableModel.getValueAt(row, 6)+"");
		float diemMon3 = Float.valueOf(defaultTableModel.getValueAt(row, 7)+"");
		
		this.textField_maSVUnder.setText(maSV+"");
		this.textField_hoTen.setText(tenSV+"");
		this.comboBox_queQuan.setSelectedItem(tinh.getTenTinh()+"");
		this.textField_ngaySinh.setText(ngaySinh+"");
		if (gioiTinh) {
			rdbtn_nam.setSelected(true);
		} else {
			rdbtn_nu.setSelected(false);
		}
		this.textField_diem1.setText(diemMon1+"");
		this.textField_diem2.setText(diemMon2+"");
		this.textField_diem3.setText(diemMon3+"");
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3063)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-03-14 23:38:19.030
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3063)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-03-14 23:38:19.030
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3063)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2023-03-14 23:38:20.917
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package View;

import java.awt.EventQueue;

import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.border.EmptyBorder;

import Model.QLSV_model;
import Model.SinhVien;
import Model.Tinh;

import javax.swing.JMenuBar;
import javax.swing.JMenu;
import javax.swing.JMenuItem;
import javax.swing.JSeparator;
import javax.swing.JLabel;
import java.awt.Font;
import javax.swing.JScrollPane;
import javax.swing.JComboBox;
import javax.swing.JTextField;
import javax.swing.ButtonGroup;
import javax.swing.JButton;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

import Controller.Listener;

import javax.swing.JRadioButton;
import java.awt.event.ActionListener;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.awt.event.ActionEvent;

public class view_QLSV extends JFrame {

	private JPanel contentPane;
	public QLSV_model model;
	private JTextField textField_maSV;
	private JTable table;
	public JTextField textField_maSVUnder;
	public JTextField textField_hoTen;
	public JTextField textField_ngaySinh;
	public JTextField textField_diem1;
	public JTextField textField_diem2;
	public JTextField textField_diem3;
	public JComboBox comboBox_queQuanUnder;
	private JComboBox comboBox_queQuan;
	public ButtonGroup btngr;
	public JRadioButton rdbtn_nam;
	public JRadioButton rdbtn_nu;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					view_QLSV frame = new view_QLSV();
					frame.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the frame.
	 */
	public view_QLSV() {
		model = new QLSV_model();
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setBounds(100, 100, 757, 759);
		setTitle("Chương trình quản lý sinh viên của Trần Phúc Khánh");
		
		JMenuBar menuBar = new JMenuBar();
		setJMenuBar(menuBar);
		
		JMenu menu_file = new JMenu("File");
		menuBar.add(menu_file);
		
		JMenuItem menuItem_open = new JMenuItem("Open");
		menu_file.add(menuItem_open);
		
		JMenuItem mntmClose = new JMenuItem("Close");
		menu_file.add(mntmClose);
		
		JSeparator separator = new JSeparator();
		menu_file.add(separator);
		
		JMenuItem menuItem_exit = new JMenuItem("Exit");
		menu_file.add(menuItem_exit);
		
		JMenu menu_about = new JMenu("About");
		menuBar.add(menu_about);
		
		JMenuItem menuItem_about_me = new JMenuItem("About me");
		menu_about.add(menuItem_about_me);
		contentPane = new JPanel();
		contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));

		setContentPane(contentPane);
		contentPane.setLayout(null);
		
		JLabel label_queQuan = new JLabel("Quê quán");
		label_queQuan.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_queQuan.setBounds(47, 40, 86, 42);
		contentPane.add(label_queQuan);
		
		comboBox_queQuan = new JComboBox();
		ArrayList<Tinh> listTinh = Tinh.getDS_Tinh();
		comboBox_queQuan.addItem("");
		for (Tinh tinh : listTinh) {
			comboBox_queQuan.addItem(tinh.getTenTinh());
		}
		comboBox_queQuan.setFont(new Font("Tahoma", Font.PLAIN, 15));
		comboBox_queQuan.setBounds(140, 40, 102, 43);
		contentPane.add(comboBox_queQuan);
		
		JLabel label_maSinhVien = new JLabel("Mã sinh viên");
		label_maSinhVien.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_maSinhVien.setBounds(306, 40, 110, 42);
		contentPane.add(label_maSinhVien);
		
		textField_maSV = new JTextField();
		textField_maSV.setBounds(426, 40, 102, 43);
		contentPane.add(textField_maSV);
		textField_maSV.setColumns(10);
		
		JButton button_timKiem = new JButton("Tìm kiếm");
		button_timKiem.setFont(new Font("Tahoma", Font.PLAIN, 20));
		button_timKiem.setBounds(591, 40, 127, 43);
		contentPane.add(button_timKiem);
		
		JSeparator separator_1 = new JSeparator();
		separator_1.setBounds(10, 102, 728, 2);
		contentPane.add(separator_1);
		
		JLabel label_danhSachSV = new JLabel("Danh sách SV");
		label_danhSachSV.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_danhSachSV.setBounds(26, 127, 122, 42);
		contentPane.add(label_danhSachSV);
		
		table = new JTable();
		table.setFont(new Font("Tahoma", Font.PLAIN, 10));
		table.setModel(new DefaultTableModel(
			new Object[][] {
			},
			new String[] {
				"Mã SV", "Họ tên", "Quê quán", "Ngày sinh", "Giới tính", "Điểm môn 1", "Điểm môn 2", "Điểm môn 3"
			}
		));
		
		JScrollPane scrollPane = new JScrollPane(table);
		scrollPane.setBounds(26, 179, 696, 92);
		contentPane.add(scrollPane);
		
		JLabel label_thongTinSV = new JLabel("Thông tin SV");
		label_thongTinSV.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_thongTinSV.setBounds(26, 303, 115, 42);
		contentPane.add(label_thongTinSV);
		
		JSeparator separator_2 = new JSeparator();
		separator_2.setBounds(10, 291, 728, 2);
		contentPane.add(separator_2);
		
		JLabel label_maSinhVienUnder = new JLabel("Mã sinh viên");
		label_maSinhVienUnder.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_maSinhVienUnder.setBounds(26, 355, 110, 42);
		contentPane.add(label_maSinhVienUnder);
		
		JLabel label_hoTenUnder = new JLabel("Họ tên");
		label_hoTenUnder.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_hoTenUnder.setBounds(26, 422, 110, 42);
		contentPane.add(label_hoTenUnder);
		
		JLabel label_queQuanUnder = new JLabel("Quê quán");
		label_queQuanUnder.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_queQuanUnder.setBounds(26, 489, 110, 42);
		contentPane.add(label_queQuanUnder);
		
		JLabel label_ngaySinhUnder = new JLabel("Ngày sinh");
		label_ngaySinhUnder.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_ngaySinhUnder.setBounds(26, 556, 110, 42);
		contentPane.add(label_ngaySinhUnder);
		
		textField_maSVUnder = new JTextField();
		textField_maSVUnder.setColumns(10);
		textField_maSVUnder.setBounds(161, 355, 170, 43);
		contentPane.add(textField_maSVUnder);
		
		textField_hoTen = new JTextField();
		textField_hoTen.setColumns(10);
		textField_hoTen.setBounds(161, 422, 170, 43);
		contentPane.add(textField_hoTen);
		
		textField_ngaySinh = new JTextField();
		textField_ngaySinh.setColumns(10);
		textField_ngaySinh.setBounds(161, 556, 170, 43);
		contentPane.add(textField_ngaySinh);
		
		JLabel label_gioiTinhUnder = new JLabel("Giới tính");
		label_gioiTinhUnder.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_gioiTinhUnder.setBounds(426, 355, 110, 42);
		contentPane.add(label_gioiTinhUnder);
		
		JLabel label_diem1Under = new JLabel("Điểm 1");
		label_diem1Under.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_diem1Under.setBounds(426, 422, 110, 42);
		contentPane.add(label_diem1Under);
		
		JLabel label_diem2Under = new JLabel("Điểm 2");
		label_diem2Under.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_diem2Under.setBounds(426, 489, 110, 42);
		contentPane.add(label_diem2Under);
		
		JLabel label_diem3Under = new JLabel("Điểm 3");
		label_diem3Under.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_diem3Under.setBounds(426, 556, 110, 42);
		contentPane.add(label_diem3Under);
		
		textField_diem1 = new JTextField();
		textField_diem1.setColumns(10);
		textField_diem1.setBounds(562, 422, 170, 43);
		contentPane.add(textField_diem1);
		
		textField_diem2 = new JTextField();
		textField_diem2.setColumns(10);
		textField_diem2.setBounds(562, 489, 170, 43);
		contentPane.add(textField_diem2);
		
		textField_diem3 = new JTextField();
		textField_diem3.setColumns(10);
		textField_diem3.setBounds(562, 556, 170, 43);
		contentPane.add(textField_diem3);
		
		rdbtn_nam = new JRadioButton("Nam");
		rdbtn_nam.setFont(new Font("Tahoma", Font.PLAIN, 20));
		rdbtn_nam.setBounds(562, 355, 71, 42);
		contentPane.add(rdbtn_nam);
		rdbtn_nam.setSelected(true);
		
		rdbtn_nu = new JRadioButton("Nữ");
		rdbtn_nu.setFont(new Font("Tahoma", Font.PLAIN, 20));
		rdbtn_nu.setBounds(647, 355, 71, 42);
		contentPane.add(rdbtn_nu);
		
		btngr = new ButtonGroup();
		btngr.add(rdbtn_nam);
		btngr.add(rdbtn_nu);
		
		ActionListener listener = new Listener(this);
		
		JButton btn_them = new JButton("Thêm");
		btn_them.addActionListener(listener);
		btn_them.setFont(new Font("Tahoma", Font.PLAIN, 20));
		btn_them.setBounds(21, 633, 127, 43);
		contentPane.add(btn_them);
		
		JButton btn_xoa = new JButton("Xóa");
		btn_xoa.addActionListener(listener);
		btn_xoa.setFont(new Font("Tahoma", Font.PLAIN, 20));
		btn_xoa.setBounds(595, 633, 127, 43);
		contentPane.add(btn_xoa);
		
		JButton btn_capNhat = new JButton("Cập nhật");
		btn_capNhat.addActionListener(listener);
		btn_capNhat.setFont(new Font("Tahoma", Font.PLAIN, 20));
		btn_capNhat.setBounds(215, 633, 127, 43);
		contentPane.add(btn_capNhat);
		
		JButton btn_luu = new JButton("Lưu");
		btn_luu.addActionListener(listener);
		btn_luu.setFont(new Font("Tahoma", Font.PLAIN, 20));
		btn_luu.setBounds(409, 633, 127, 43);
		contentPane.add(btn_luu);
		
		JSeparator separator_1_1 = new JSeparator();
		separator_1_1.setBounds(10, 615, 728, 2);
		contentPane.add(separator_1_1);
		
		comboBox_queQuanUnder = new JComboBox();
		comboBox_queQuanUnder.addItem("");
		for (Tinh tinh : listTinh) {
			comboBox_queQuanUnder.addItem(tinh.getTenTinh());
		}
		comboBox_queQuanUnder.setBounds(161, 488, 170, 43);
		contentPane.add(comboBox_queQuanUnder);
	}

	public void xoaForm() {
		textField_maSV.setText("");
		textField_maSVUnder.setText("");
		textField_hoTen.setText("");
		textField_ngaySinh.setText("");
		textField_diem1.setText("");
		textField_diem2.setText("");
		textField_diem3.setText("");
		comboBox_queQuanUnder.setSelectedIndex(-1);
		btngr.clearSelection();
	}

	public void themHoacCapNhatSV(SinhVien sv) {
		DefaultTableModel defaultTableModel = (DefaultTableModel) table.getModel();
		if (!this.model.kiemTraTonTai(sv)) {
			this.model.addSV(sv);
			defaultTableModel.addRow(new Object[]{
													sv.getMaSinhVien()+"", 
													sv.getTenSinhVien(),
													sv.getQueQuan().getTenTinh(),
													sv.getNgaySinh().getDate()+"/"+(sv.getNgaySinh().getMonth() + 1)+"/"+(sv.getNgaySinh().getYear()+1900),
													sv.isGioiTinh() ? "Nam" : "Nữ",
													sv.getDiemMon1()+"",
													sv.getDiemMon2()+"",
													sv.getDiemMon3()+""});
		}
		else {
			this.model.update(sv);
			int soDong = defaultTableModel.getRowCount();
			for (int i = 0; i < soDong; i++) {
				String id = defaultTableModel.getValueAt(soDong, 0)+"";
				if (id.equals(sv.getMaSinhVien()+"")) {
					defaultTableModel.getValueAt(sv.getMaSinhVien()+"", i, 0);
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
				}
			}
		}
	}

	public void hienThiThongTinSinhVienDangDuocChon() {
		DefaultTableModel defaultTableModel = (DefaultTableModel) table.getModel();
		int row = table.getSelectedRow();
		
		int maSV = Integer.valueOf(defaultTableModel.getValueAt(row, 0)+"");
		String tenSV = defaultTableModel.getValueAt(row, 1)+"";
		Tinh tinh = Tinh.getTinhByTen(defaultTableModel.getValueAt(row, 2)+"");
		String ngaySinh = defaultTableModel.getValueAt(row, 3)+"";
		String textGioiTinh = defaultTableModel.getValueAt(row, 4)+"";
		boolean gioiTinh = textGioiTinh.equals("Nam");
		float diemMon1 = Float.valueOf(defaultTableModel.getValueAt(row, 5)+"");
		float diemMon2 = Float.valueOf(defaultTableModel.getValueAt(row, 6)+"");
		float diemMon3 = Float.valueOf(defaultTableModel.getValueAt(row, 7)+"");
		
		this.textField_maSVUnder.setText(maSV+"");
		this.textField_hoTen.setText(tenSV+"");
		this.comboBox_queQuan.setSelectedItem(tinh.getTenTinh()+"");
		this.textField_ngaySinh.setText(ngaySinh+"");
		if (gioiTinh) {
			rdbtn_nam.setSelected(true);
		} else {
			rdbtn_nu.setSelected(false);
		}
		this.textField_diem1.setText(diemMon1+"");
		this.textField_diem2.setText(diemMon2+"");
		this.textField_diem3.setText(diemMon3+"");
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3063)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:141)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:120)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-03-14 23:38:20.917
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3063)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:141)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:120)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-03-14 23:38:20.918
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3063)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:141)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:120)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core 4 4 2023-03-14 23:38:22.083
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package View;

import java.awt.EventQueue;

import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.border.EmptyBorder;

import Model.QLSV_model;
import Model.SinhVien;
import Model.Tinh;

import javax.swing.JMenuBar;
import javax.swing.JMenu;
import javax.swing.JMenuItem;
import javax.swing.JSeparator;
import javax.swing.JLabel;
import java.awt.Font;
import javax.swing.JScrollPane;
import javax.swing.JComboBox;
import javax.swing.JTextField;
import javax.swing.ButtonGroup;
import javax.swing.JButton;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

import Controller.Listener;

import javax.swing.JRadioButton;
import java.awt.event.ActionListener;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.awt.event.ActionEvent;

public class view_QLSV extends JFrame {

	private JPanel contentPane;
	public QLSV_model model;
	private JTextField textField_maSV;
	private JTable table;
	public JTextField textField_maSVUnder;
	public JTextField textField_hoTen;
	public JTextField textField_ngaySinh;
	public JTextField textField_diem1;
	public JTextField textField_diem2;
	public JTextField textField_diem3;
	public JComboBox comboBox_queQuanUnder;
	private JComboBox comboBox_queQuan;
	public ButtonGroup btngr;
	public JRadioButton rdbtn_nam;
	public JRadioButton rdbtn_nu;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					view_QLSV frame = new view_QLSV();
					frame.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the frame.
	 */
	public view_QLSV() {
		model = new QLSV_model();
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setBounds(100, 100, 757, 759);
		setTitle("Chương trình quản lý sinh viên của Trần Phúc Khánh");
		
		JMenuBar menuBar = new JMenuBar();
		setJMenuBar(menuBar);
		
		JMenu menu_file = new JMenu("File");
		menuBar.add(menu_file);
		
		JMenuItem menuItem_open = new JMenuItem("Open");
		menu_file.add(menuItem_open);
		
		JMenuItem mntmClose = new JMenuItem("Close");
		menu_file.add(mntmClose);
		
		JSeparator separator = new JSeparator();
		menu_file.add(separator);
		
		JMenuItem menuItem_exit = new JMenuItem("Exit");
		menu_file.add(menuItem_exit);
		
		JMenu menu_about = new JMenu("About");
		menuBar.add(menu_about);
		
		JMenuItem menuItem_about_me = new JMenuItem("About me");
		menu_about.add(menuItem_about_me);
		contentPane = new JPanel();
		contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));

		setContentPane(contentPane);
		contentPane.setLayout(null);
		
		JLabel label_queQuan = new JLabel("Quê quán");
		label_queQuan.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_queQuan.setBounds(47, 40, 86, 42);
		contentPane.add(label_queQuan);
		
		comboBox_queQuan = new JComboBox();
		ArrayList<Tinh> listTinh = Tinh.getDS_Tinh();
		comboBox_queQuan.addItem("");
		for (Tinh tinh : listTinh) {
			comboBox_queQuan.addItem(tinh.getTenTinh());
		}
		comboBox_queQuan.setFont(new Font("Tahoma", Font.PLAIN, 15));
		comboBox_queQuan.setBounds(140, 40, 102, 43);
		contentPane.add(comboBox_queQuan);
		
		JLabel label_maSinhVien = new JLabel("Mã sinh viên");
		label_maSinhVien.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_maSinhVien.setBounds(306, 40, 110, 42);
		contentPane.add(label_maSinhVien);
		
		textField_maSV = new JTextField();
		textField_maSV.setBounds(426, 40, 102, 43);
		contentPane.add(textField_maSV);
		textField_maSV.setColumns(10);
		
		JButton button_timKiem = new JButton("Tìm kiếm");
		button_timKiem.setFont(new Font("Tahoma", Font.PLAIN, 20));
		button_timKiem.setBounds(591, 40, 127, 43);
		contentPane.add(button_timKiem);
		
		JSeparator separator_1 = new JSeparator();
		separator_1.setBounds(10, 102, 728, 2);
		contentPane.add(separator_1);
		
		JLabel label_danhSachSV = new JLabel("Danh sách SV");
		label_danhSachSV.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_danhSachSV.setBounds(26, 127, 122, 42);
		contentPane.add(label_danhSachSV);
		
		table = new JTable();
		table.setFont(new Font("Tahoma", Font.PLAIN, 10));
		table.setModel(new DefaultTableModel(
			new Object[][] {
			},
			new String[] {
				"Mã SV", "Họ tên", "Quê quán", "Ngày sinh", "Giới tính", "Điểm môn 1", "Điểm môn 2", "Điểm môn 3"
			}
		));
		
		JScrollPane scrollPane = new JScrollPane(table);
		scrollPane.setBounds(26, 179, 696, 92);
		contentPane.add(scrollPane);
		
		JLabel label_thongTinSV = new JLabel("Thông tin SV");
		label_thongTinSV.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_thongTinSV.setBounds(26, 303, 115, 42);
		contentPane.add(label_thongTinSV);
		
		JSeparator separator_2 = new JSeparator();
		separator_2.setBounds(10, 291, 728, 2);
		contentPane.add(separator_2);
		
		JLabel label_maSinhVienUnder = new JLabel("Mã sinh viên");
		label_maSinhVienUnder.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_maSinhVienUnder.setBounds(26, 355, 110, 42);
		contentPane.add(label_maSinhVienUnder);
		
		JLabel label_hoTenUnder = new JLabel("Họ tên");
		label_hoTenUnder.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_hoTenUnder.setBounds(26, 422, 110, 42);
		contentPane.add(label_hoTenUnder);
		
		JLabel label_queQuanUnder = new JLabel("Quê quán");
		label_queQuanUnder.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_queQuanUnder.setBounds(26, 489, 110, 42);
		contentPane.add(label_queQuanUnder);
		
		JLabel label_ngaySinhUnder = new JLabel("Ngày sinh");
		label_ngaySinhUnder.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_ngaySinhUnder.setBounds(26, 556, 110, 42);
		contentPane.add(label_ngaySinhUnder);
		
		textField_maSVUnder = new JTextField();
		textField_maSVUnder.setColumns(10);
		textField_maSVUnder.setBounds(161, 355, 170, 43);
		contentPane.add(textField_maSVUnder);
		
		textField_hoTen = new JTextField();
		textField_hoTen.setColumns(10);
		textField_hoTen.setBounds(161, 422, 170, 43);
		contentPane.add(textField_hoTen);
		
		textField_ngaySinh = new JTextField();
		textField_ngaySinh.setColumns(10);
		textField_ngaySinh.setBounds(161, 556, 170, 43);
		contentPane.add(textField_ngaySinh);
		
		JLabel label_gioiTinhUnder = new JLabel("Giới tính");
		label_gioiTinhUnder.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_gioiTinhUnder.setBounds(426, 355, 110, 42);
		contentPane.add(label_gioiTinhUnder);
		
		JLabel label_diem1Under = new JLabel("Điểm 1");
		label_diem1Under.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_diem1Under.setBounds(426, 422, 110, 42);
		contentPane.add(label_diem1Under);
		
		JLabel label_diem2Under = new JLabel("Điểm 2");
		label_diem2Under.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_diem2Under.setBounds(426, 489, 110, 42);
		contentPane.add(label_diem2Under);
		
		JLabel label_diem3Under = new JLabel("Điểm 3");
		label_diem3Under.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_diem3Under.setBounds(426, 556, 110, 42);
		contentPane.add(label_diem3Under);
		
		textField_diem1 = new JTextField();
		textField_diem1.setColumns(10);
		textField_diem1.setBounds(562, 422, 170, 43);
		contentPane.add(textField_diem1);
		
		textField_diem2 = new JTextField();
		textField_diem2.setColumns(10);
		textField_diem2.setBounds(562, 489, 170, 43);
		contentPane.add(textField_diem2);
		
		textField_diem3 = new JTextField();
		textField_diem3.setColumns(10);
		textField_diem3.setBounds(562, 556, 170, 43);
		contentPane.add(textField_diem3);
		
		rdbtn_nam = new JRadioButton("Nam");
		rdbtn_nam.setFont(new Font("Tahoma", Font.PLAIN, 20));
		rdbtn_nam.setBounds(562, 355, 71, 42);
		contentPane.add(rdbtn_nam);
		rdbtn_nam.setSelected(true);
		
		rdbtn_nu = new JRadioButton("Nữ");
		rdbtn_nu.setFont(new Font("Tahoma", Font.PLAIN, 20));
		rdbtn_nu.setBounds(647, 355, 71, 42);
		contentPane.add(rdbtn_nu);
		
		btngr = new ButtonGroup();
		btngr.add(rdbtn_nam);
		btngr.add(rdbtn_nu);
		
		ActionListener listener = new Listener(this);
		
		JButton btn_them = new JButton("Thêm");
		btn_them.addActionListener(listener);
		btn_them.setFont(new Font("Tahoma", Font.PLAIN, 20));
		btn_them.setBounds(21, 633, 127, 43);
		contentPane.add(btn_them);
		
		JButton btn_xoa = new JButton("Xóa");
		btn_xoa.addActionListener(listener);
		btn_xoa.setFont(new Font("Tahoma", Font.PLAIN, 20));
		btn_xoa.setBounds(595, 633, 127, 43);
		contentPane.add(btn_xoa);
		
		JButton btn_capNhat = new JButton("Cập nhật");
		btn_capNhat.addActionListener(listener);
		btn_capNhat.setFont(new Font("Tahoma", Font.PLAIN, 20));
		btn_capNhat.setBounds(215, 633, 127, 43);
		contentPane.add(btn_capNhat);
		
		JButton btn_luu = new JButton("Lưu");
		btn_luu.addActionListener(listener);
		btn_luu.setFont(new Font("Tahoma", Font.PLAIN, 20));
		btn_luu.setBounds(409, 633, 127, 43);
		contentPane.add(btn_luu);
		
		JSeparator separator_1_1 = new JSeparator();
		separator_1_1.setBounds(10, 615, 728, 2);
		contentPane.add(separator_1_1);
		
		comboBox_queQuanUnder = new JComboBox();
		comboBox_queQuanUnder.addItem("");
		for (Tinh tinh : listTinh) {
			comboBox_queQuanUnder.addItem(tinh.getTenTinh());
		}
		comboBox_queQuanUnder.setBounds(161, 488, 170, 43);
		contentPane.add(comboBox_queQuanUnder);
	}

	public void xoaForm() {
		textField_maSV.setText("");
		textField_maSVUnder.setText("");
		textField_hoTen.setText("");
		textField_ngaySinh.setText("");
		textField_diem1.setText("");
		textField_diem2.setText("");
		textField_diem3.setText("");
		comboBox_queQuanUnder.setSelectedIndex(-1);
		btngr.clearSelection();
	}

	public void themHoacCapNhatSV(SinhVien sv) {
		DefaultTableModel defaultTableModel = (DefaultTableModel) table.getModel();
		if (!this.model.kiemTraTonTai(sv)) {
			this.model.addSV(sv);
			defaultTableModel.addRow(new Object[]{
													sv.getMaSinhVien()+"", 
													sv.getTenSinhVien(),
													sv.getQueQuan().getTenTinh(),
													sv.getNgaySinh().getDate()+"/"+(sv.getNgaySinh().getMonth() + 1)+"/"+(sv.getNgaySinh().getYear()+1900),
													sv.isGioiTinh() ? "Nam" : "Nữ",
													sv.getDiemMon1()+"",
													sv.getDiemMon2()+"",
													sv.getDiemMon3()+""});
		}
		else {
			this.model.update(sv);
			int soDong = defaultTableModel.getRowCount();
			for (int i = 0; i < soDong; i++) {
				String id = defaultTableModel.getValueAt(soDong, 0)+"";
				if (id.equals(sv.getMaSinhVien()+"")) {
					defaultTableModel.getValueAt(sv.getMaSinhVien()+"", i, 0);
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
				}
			}
		}
	}

	public void hienThiThongTinSinhVienDangDuocChon() {
		DefaultTableModel defaultTableModel = (DefaultTableModel) table.getModel();
		int row = table.getSelectedRow();
		
		int maSV = Integer.valueOf(defaultTableModel.getValueAt(row, 0)+"");
		String tenSV = defaultTableModel.getValueAt(row, 1)+"";
		Tinh tinh = Tinh.getTinhByTen(defaultTableModel.getValueAt(row, 2)+"");
		String ngaySinh = defaultTableModel.getValueAt(row, 3)+"";
		String textGioiTinh = defaultTableModel.getValueAt(row, 4)+"";
		boolean gioiTinh = textGioiTinh.equals("Nam");
		float diemMon1 = Float.valueOf(defaultTableModel.getValueAt(row, 5)+"");
		float diemMon2 = Float.valueOf(defaultTableModel.getValueAt(row, 6)+"");
		float diemMon3 = Float.valueOf(defaultTableModel.getValueAt(row, 7)+"");
		
		this.textField_maSVUnder.setText(maSV+"");
		this.textField_hoTen.setText(tenSV+"");
		this.comboBox_queQuan.setSelectedItem(tinh.getTenTinh()+"");
		this.textField_ngaySinh.setText(ngaySinh+"");
		if (gioiTinh) {
			rdbtn_nam.setSelected(true);
		} else {
			rdbtn_nu.setSelected(false);
		}
		this.textField_diem1.setText(diemMon1+"");
		this.textField_diem2.setText(diemMon2+"");
		this.textField_diem3.setText(diemMon3+"");
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3063)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:141)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:120)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-03-14 23:38:22.084
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3063)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:141)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:120)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-03-14 23:38:22.085
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3063)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:141)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:120)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core 4 4 2023-03-14 23:38:22.104
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package View;

import java.awt.EventQueue;

import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.border.EmptyBorder;

import Model.QLSV_model;
import Model.SinhVien;
import Model.Tinh;

import javax.swing.JMenuBar;
import javax.swing.JMenu;
import javax.swing.JMenuItem;
import javax.swing.JSeparator;
import javax.swing.JLabel;
import java.awt.Font;
import javax.swing.JScrollPane;
import javax.swing.JComboBox;
import javax.swing.JTextField;
import javax.swing.ButtonGroup;
import javax.swing.JButton;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

import Controller.Listener;

import javax.swing.JRadioButton;
import java.awt.event.ActionListener;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.awt.event.ActionEvent;

public class view_QLSV extends JFrame {

	private JPanel contentPane;
	public QLSV_model model;
	private JTextField textField_maSV;
	private JTable table;
	public JTextField textField_maSVUnder;
	public JTextField textField_hoTen;
	public JTextField textField_ngaySinh;
	public JTextField textField_diem1;
	public JTextField textField_diem2;
	public JTextField textField_diem3;
	public JComboBox comboBox_queQuanUnder;
	private JComboBox comboBox_queQuan;
	public ButtonGroup btngr;
	public JRadioButton rdbtn_nam;
	public JRadioButton rdbtn_nu;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					view_QLSV frame = new view_QLSV();
					frame.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the frame.
	 */
	public view_QLSV() {
		model = new QLSV_model();
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setBounds(100, 100, 757, 759);
		setTitle("Chương trình quản lý sinh viên của Trần Phúc Khánh");
		
		JMenuBar menuBar = new JMenuBar();
		setJMenuBar(menuBar);
		
		JMenu menu_file = new JMenu("File");
		menuBar.add(menu_file);
		
		JMenuItem menuItem_open = new JMenuItem("Open");
		menu_file.add(menuItem_open);
		
		JMenuItem mntmClose = new JMenuItem("Close");
		menu_file.add(mntmClose);
		
		JSeparator separator = new JSeparator();
		menu_file.add(separator);
		
		JMenuItem menuItem_exit = new JMenuItem("Exit");
		menu_file.add(menuItem_exit);
		
		JMenu menu_about = new JMenu("About");
		menuBar.add(menu_about);
		
		JMenuItem menuItem_about_me = new JMenuItem("About me");
		menu_about.add(menuItem_about_me);
		contentPane = new JPanel();
		contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));

		setContentPane(contentPane);
		contentPane.setLayout(null);
		
		JLabel label_queQuan = new JLabel("Quê quán");
		label_queQuan.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_queQuan.setBounds(47, 40, 86, 42);
		contentPane.add(label_queQuan);
		
		comboBox_queQuan = new JComboBox();
		ArrayList<Tinh> listTinh = Tinh.getDS_Tinh();
		comboBox_queQuan.addItem("");
		for (Tinh tinh : listTinh) {
			comboBox_queQuan.addItem(tinh.getTenTinh());
		}
		comboBox_queQuan.setFont(new Font("Tahoma", Font.PLAIN, 15));
		comboBox_queQuan.setBounds(140, 40, 102, 43);
		contentPane.add(comboBox_queQuan);
		
		JLabel label_maSinhVien = new JLabel("Mã sinh viên");
		label_maSinhVien.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_maSinhVien.setBounds(306, 40, 110, 42);
		contentPane.add(label_maSinhVien);
		
		textField_maSV = new JTextField();
		textField_maSV.setBounds(426, 40, 102, 43);
		contentPane.add(textField_maSV);
		textField_maSV.setColumns(10);
		
		JButton button_timKiem = new JButton("Tìm kiếm");
		button_timKiem.setFont(new Font("Tahoma", Font.PLAIN, 20));
		button_timKiem.setBounds(591, 40, 127, 43);
		contentPane.add(button_timKiem);
		
		JSeparator separator_1 = new JSeparator();
		separator_1.setBounds(10, 102, 728, 2);
		contentPane.add(separator_1);
		
		JLabel label_danhSachSV = new JLabel("Danh sách SV");
		label_danhSachSV.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_danhSachSV.setBounds(26, 127, 122, 42);
		contentPane.add(label_danhSachSV);
		
		table = new JTable();
		table.setFont(new Font("Tahoma", Font.PLAIN, 10));
		table.setModel(new DefaultTableModel(
			new Object[][] {
			},
			new String[] {
				"Mã SV", "Họ tên", "Quê quán", "Ngày sinh", "Giới tính", "Điểm môn 1", "Điểm môn 2", "Điểm môn 3"
			}
		));
		
		JScrollPane scrollPane = new JScrollPane(table);
		scrollPane.setBounds(26, 179, 696, 92);
		contentPane.add(scrollPane);
		
		JLabel label_thongTinSV = new JLabel("Thông tin SV");
		label_thongTinSV.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_thongTinSV.setBounds(26, 303, 115, 42);
		contentPane.add(label_thongTinSV);
		
		JSeparator separator_2 = new JSeparator();
		separator_2.setBounds(10, 291, 728, 2);
		contentPane.add(separator_2);
		
		JLabel label_maSinhVienUnder = new JLabel("Mã sinh viên");
		label_maSinhVienUnder.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_maSinhVienUnder.setBounds(26, 355, 110, 42);
		contentPane.add(label_maSinhVienUnder);
		
		JLabel label_hoTenUnder = new JLabel("Họ tên");
		label_hoTenUnder.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_hoTenUnder.setBounds(26, 422, 110, 42);
		contentPane.add(label_hoTenUnder);
		
		JLabel label_queQuanUnder = new JLabel("Quê quán");
		label_queQuanUnder.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_queQuanUnder.setBounds(26, 489, 110, 42);
		contentPane.add(label_queQuanUnder);
		
		JLabel label_ngaySinhUnder = new JLabel("Ngày sinh");
		label_ngaySinhUnder.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_ngaySinhUnder.setBounds(26, 556, 110, 42);
		contentPane.add(label_ngaySinhUnder);
		
		textField_maSVUnder = new JTextField();
		textField_maSVUnder.setColumns(10);
		textField_maSVUnder.setBounds(161, 355, 170, 43);
		contentPane.add(textField_maSVUnder);
		
		textField_hoTen = new JTextField();
		textField_hoTen.setColumns(10);
		textField_hoTen.setBounds(161, 422, 170, 43);
		contentPane.add(textField_hoTen);
		
		textField_ngaySinh = new JTextField();
		textField_ngaySinh.setColumns(10);
		textField_ngaySinh.setBounds(161, 556, 170, 43);
		contentPane.add(textField_ngaySinh);
		
		JLabel label_gioiTinhUnder = new JLabel("Giới tính");
		label_gioiTinhUnder.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_gioiTinhUnder.setBounds(426, 355, 110, 42);
		contentPane.add(label_gioiTinhUnder);
		
		JLabel label_diem1Under = new JLabel("Điểm 1");
		label_diem1Under.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_diem1Under.setBounds(426, 422, 110, 42);
		contentPane.add(label_diem1Under);
		
		JLabel label_diem2Under = new JLabel("Điểm 2");
		label_diem2Under.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_diem2Under.setBounds(426, 489, 110, 42);
		contentPane.add(label_diem2Under);
		
		JLabel label_diem3Under = new JLabel("Điểm 3");
		label_diem3Under.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_diem3Under.setBounds(426, 556, 110, 42);
		contentPane.add(label_diem3Under);
		
		textField_diem1 = new JTextField();
		textField_diem1.setColumns(10);
		textField_diem1.setBounds(562, 422, 170, 43);
		contentPane.add(textField_diem1);
		
		textField_diem2 = new JTextField();
		textField_diem2.setColumns(10);
		textField_diem2.setBounds(562, 489, 170, 43);
		contentPane.add(textField_diem2);
		
		textField_diem3 = new JTextField();
		textField_diem3.setColumns(10);
		textField_diem3.setBounds(562, 556, 170, 43);
		contentPane.add(textField_diem3);
		
		rdbtn_nam = new JRadioButton("Nam");
		rdbtn_nam.setFont(new Font("Tahoma", Font.PLAIN, 20));
		rdbtn_nam.setBounds(562, 355, 71, 42);
		contentPane.add(rdbtn_nam);
		rdbtn_nam.setSelected(true);
		
		rdbtn_nu = new JRadioButton("Nữ");
		rdbtn_nu.setFont(new Font("Tahoma", Font.PLAIN, 20));
		rdbtn_nu.setBounds(647, 355, 71, 42);
		contentPane.add(rdbtn_nu);
		
		btngr = new ButtonGroup();
		btngr.add(rdbtn_nam);
		btngr.add(rdbtn_nu);
		
		ActionListener listener = new Listener(this);
		
		JButton btn_them = new JButton("Thêm");
		btn_them.addActionListener(listener);
		btn_them.setFont(new Font("Tahoma", Font.PLAIN, 20));
		btn_them.setBounds(21, 633, 127, 43);
		contentPane.add(btn_them);
		
		JButton btn_xoa = new JButton("Xóa");
		btn_xoa.addActionListener(listener);
		btn_xoa.setFont(new Font("Tahoma", Font.PLAIN, 20));
		btn_xoa.setBounds(595, 633, 127, 43);
		contentPane.add(btn_xoa);
		
		JButton btn_capNhat = new JButton("Cập nhật");
		btn_capNhat.addActionListener(listener);
		btn_capNhat.setFont(new Font("Tahoma", Font.PLAIN, 20));
		btn_capNhat.setBounds(215, 633, 127, 43);
		contentPane.add(btn_capNhat);
		
		JButton btn_luu = new JButton("Lưu");
		btn_luu.addActionListener(listener);
		btn_luu.setFont(new Font("Tahoma", Font.PLAIN, 20));
		btn_luu.setBounds(409, 633, 127, 43);
		contentPane.add(btn_luu);
		
		JSeparator separator_1_1 = new JSeparator();
		separator_1_1.setBounds(10, 615, 728, 2);
		contentPane.add(separator_1_1);
		
		comboBox_queQuanUnder = new JComboBox();
		comboBox_queQuanUnder.addItem("");
		for (Tinh tinh : listTinh) {
			comboBox_queQuanUnder.addItem(tinh.getTenTinh());
		}
		comboBox_queQuanUnder.setBounds(161, 488, 170, 43);
		contentPane.add(comboBox_queQuanUnder);
	}

	public void xoaForm() {
		textField_maSV.setText("");
		textField_maSVUnder.setText("");
		textField_hoTen.setText("");
		textField_ngaySinh.setText("");
		textField_diem1.setText("");
		textField_diem2.setText("");
		textField_diem3.setText("");
		comboBox_queQuanUnder.setSelectedIndex(-1);
		btngr.clearSelection();
	}

	public void themHoacCapNhatSV(SinhVien sv) {
		DefaultTableModel defaultTableModel = (DefaultTableModel) table.getModel();
		if (!this.model.kiemTraTonTai(sv)) {
			this.model.addSV(sv);
			defaultTableModel.addRow(new Object[]{
													sv.getMaSinhVien()+"", 
													sv.getTenSinhVien(),
													sv.getQueQuan().getTenTinh(),
													sv.getNgaySinh().getDate()+"/"+(sv.getNgaySinh().getMonth() + 1)+"/"+(sv.getNgaySinh().getYear()+1900),
													sv.isGioiTinh() ? "Nam" : "Nữ",
													sv.getDiemMon1()+"",
													sv.getDiemMon2()+"",
													sv.getDiemMon3()+""});
		}
		else {
			this.model.update(sv);
			int soDong = defaultTableModel.getRowCount();
			for (int i = 0; i < soDong; i++) {
				String id = defaultTableModel.getValueAt(soDong, 0)+"";
				if (id.equals(sv.getMaSinhVien()+"")) {
					defaultTableModel.getValueAt(sv.getMaSinhVien()+"", i, 0);
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
				}
			}
		}
	}

	public void hienThiThongTinSinhVienDangDuocChon() {
		DefaultTableModel defaultTableModel = (DefaultTableModel) table.getModel();
		int row = table.getSelectedRow();
		
		int maSV = Integer.valueOf(defaultTableModel.getValueAt(row, 0)+"");
		String tenSV = defaultTableModel.getValueAt(row, 1)+"";
		Tinh tinh = Tinh.getTinhByTen(defaultTableModel.getValueAt(row, 2)+"");
		String ngaySinh = defaultTableModel.getValueAt(row, 3)+"";
		String textGioiTinh = defaultTableModel.getValueAt(row, 4)+"";
		boolean gioiTinh = textGioiTinh.equals("Nam");
		float diemMon1 = Float.valueOf(defaultTableModel.getValueAt(row, 5)+"");
		float diemMon2 = Float.valueOf(defaultTableModel.getValueAt(row, 6)+"");
		float diemMon3 = Float.valueOf(defaultTableModel.getValueAt(row, 7)+"");
		
		this.textField_maSVUnder.setText(maSV+"");
		this.textField_hoTen.setText(tenSV+"");
		this.comboBox_queQuan.setSelectedItem(tinh.getTenTinh()+"");
		this.textField_ngaySinh.setText(ngaySinh+"");
		if (gioiTinh) {
			rdbtn_nam.setSelected(true);
		} else {
			rdbtn_nu.setSelected(false);
		}
		this.textField_diem1.setText(diemMon1+"");
		this.textField_diem2.setText(diemMon2+"");
		this.textField_diem3.setText(diemMon3+"");
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3063)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredASTNode(JavadocHover.java:1003)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getInfoText(JavadocHover.java:799)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:743)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:666)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:658)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-03-14 23:38:22.105
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3063)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredASTNode(JavadocHover.java:1003)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getInfoText(JavadocHover.java:799)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:743)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:666)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:658)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-03-14 23:38:22.106
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3063)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredASTNode(JavadocHover.java:1003)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getInfoText(JavadocHover.java:799)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:743)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:666)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:658)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core 4 4 2023-03-14 23:38:22.169
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package View;

import java.awt.EventQueue;

import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.border.EmptyBorder;

import Model.QLSV_model;
import Model.SinhVien;
import Model.Tinh;

import javax.swing.JMenuBar;
import javax.swing.JMenu;
import javax.swing.JMenuItem;
import javax.swing.JSeparator;
import javax.swing.JLabel;
import java.awt.Font;
import javax.swing.JScrollPane;
import javax.swing.JComboBox;
import javax.swing.JTextField;
import javax.swing.ButtonGroup;
import javax.swing.JButton;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

import Controller.Listener;

import javax.swing.JRadioButton;
import java.awt.event.ActionListener;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.awt.event.ActionEvent;

public class view_QLSV extends JFrame {

	private JPanel contentPane;
	public QLSV_model model;
	private JTextField textField_maSV;
	private JTable table;
	public JTextField textField_maSVUnder;
	public JTextField textField_hoTen;
	public JTextField textField_ngaySinh;
	public JTextField textField_diem1;
	public JTextField textField_diem2;
	public JTextField textField_diem3;
	public JComboBox comboBox_queQuanUnder;
	private JComboBox comboBox_queQuan;
	public ButtonGroup btngr;
	public JRadioButton rdbtn_nam;
	public JRadioButton rdbtn_nu;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					view_QLSV frame = new view_QLSV();
					frame.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the frame.
	 */
	public view_QLSV() {
		model = new QLSV_model();
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setBounds(100, 100, 757, 759);
		setTitle("Chương trình quản lý sinh viên của Trần Phúc Khánh");
		
		JMenuBar menuBar = new JMenuBar();
		setJMenuBar(menuBar);
		
		JMenu menu_file = new JMenu("File");
		menuBar.add(menu_file);
		
		JMenuItem menuItem_open = new JMenuItem("Open");
		menu_file.add(menuItem_open);
		
		JMenuItem mntmClose = new JMenuItem("Close");
		menu_file.add(mntmClose);
		
		JSeparator separator = new JSeparator();
		menu_file.add(separator);
		
		JMenuItem menuItem_exit = new JMenuItem("Exit");
		menu_file.add(menuItem_exit);
		
		JMenu menu_about = new JMenu("About");
		menuBar.add(menu_about);
		
		JMenuItem menuItem_about_me = new JMenuItem("About me");
		menu_about.add(menuItem_about_me);
		contentPane = new JPanel();
		contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));

		setContentPane(contentPane);
		contentPane.setLayout(null);
		
		JLabel label_queQuan = new JLabel("Quê quán");
		label_queQuan.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_queQuan.setBounds(47, 40, 86, 42);
		contentPane.add(label_queQuan);
		
		comboBox_queQuan = new JComboBox();
		ArrayList<Tinh> listTinh = Tinh.getDS_Tinh();
		comboBox_queQuan.addItem("");
		for (Tinh tinh : listTinh) {
			comboBox_queQuan.addItem(tinh.getTenTinh());
		}
		comboBox_queQuan.setFont(new Font("Tahoma", Font.PLAIN, 15));
		comboBox_queQuan.setBounds(140, 40, 102, 43);
		contentPane.add(comboBox_queQuan);
		
		JLabel label_maSinhVien = new JLabel("Mã sinh viên");
		label_maSinhVien.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_maSinhVien.setBounds(306, 40, 110, 42);
		contentPane.add(label_maSinhVien);
		
		textField_maSV = new JTextField();
		textField_maSV.setBounds(426, 40, 102, 43);
		contentPane.add(textField_maSV);
		textField_maSV.setColumns(10);
		
		JButton button_timKiem = new JButton("Tìm kiếm");
		button_timKiem.setFont(new Font("Tahoma", Font.PLAIN, 20));
		button_timKiem.setBounds(591, 40, 127, 43);
		contentPane.add(button_timKiem);
		
		JSeparator separator_1 = new JSeparator();
		separator_1.setBounds(10, 102, 728, 2);
		contentPane.add(separator_1);
		
		JLabel label_danhSachSV = new JLabel("Danh sách SV");
		label_danhSachSV.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_danhSachSV.setBounds(26, 127, 122, 42);
		contentPane.add(label_danhSachSV);
		
		table = new JTable();
		table.setFont(new Font("Tahoma", Font.PLAIN, 10));
		table.setModel(new DefaultTableModel(
			new Object[][] {
			},
			new String[] {
				"Mã SV", "Họ tên", "Quê quán", "Ngày sinh", "Giới tính", "Điểm môn 1", "Điểm môn 2", "Điểm môn 3"
			}
		));
		
		JScrollPane scrollPane = new JScrollPane(table);
		scrollPane.setBounds(26, 179, 696, 92);
		contentPane.add(scrollPane);
		
		JLabel label_thongTinSV = new JLabel("Thông tin SV");
		label_thongTinSV.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_thongTinSV.setBounds(26, 303, 115, 42);
		contentPane.add(label_thongTinSV);
		
		JSeparator separator_2 = new JSeparator();
		separator_2.setBounds(10, 291, 728, 2);
		contentPane.add(separator_2);
		
		JLabel label_maSinhVienUnder = new JLabel("Mã sinh viên");
		label_maSinhVienUnder.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_maSinhVienUnder.setBounds(26, 355, 110, 42);
		contentPane.add(label_maSinhVienUnder);
		
		JLabel label_hoTenUnder = new JLabel("Họ tên");
		label_hoTenUnder.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_hoTenUnder.setBounds(26, 422, 110, 42);
		contentPane.add(label_hoTenUnder);
		
		JLabel label_queQuanUnder = new JLabel("Quê quán");
		label_queQuanUnder.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_queQuanUnder.setBounds(26, 489, 110, 42);
		contentPane.add(label_queQuanUnder);
		
		JLabel label_ngaySinhUnder = new JLabel("Ngày sinh");
		label_ngaySinhUnder.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_ngaySinhUnder.setBounds(26, 556, 110, 42);
		contentPane.add(label_ngaySinhUnder);
		
		textField_maSVUnder = new JTextField();
		textField_maSVUnder.setColumns(10);
		textField_maSVUnder.setBounds(161, 355, 170, 43);
		contentPane.add(textField_maSVUnder);
		
		textField_hoTen = new JTextField();
		textField_hoTen.setColumns(10);
		textField_hoTen.setBounds(161, 422, 170, 43);
		contentPane.add(textField_hoTen);
		
		textField_ngaySinh = new JTextField();
		textField_ngaySinh.setColumns(10);
		textField_ngaySinh.setBounds(161, 556, 170, 43);
		contentPane.add(textField_ngaySinh);
		
		JLabel label_gioiTinhUnder = new JLabel("Giới tính");
		label_gioiTinhUnder.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_gioiTinhUnder.setBounds(426, 355, 110, 42);
		contentPane.add(label_gioiTinhUnder);
		
		JLabel label_diem1Under = new JLabel("Điểm 1");
		label_diem1Under.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_diem1Under.setBounds(426, 422, 110, 42);
		contentPane.add(label_diem1Under);
		
		JLabel label_diem2Under = new JLabel("Điểm 2");
		label_diem2Under.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_diem2Under.setBounds(426, 489, 110, 42);
		contentPane.add(label_diem2Under);
		
		JLabel label_diem3Under = new JLabel("Điểm 3");
		label_diem3Under.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_diem3Under.setBounds(426, 556, 110, 42);
		contentPane.add(label_diem3Under);
		
		textField_diem1 = new JTextField();
		textField_diem1.setColumns(10);
		textField_diem1.setBounds(562, 422, 170, 43);
		contentPane.add(textField_diem1);
		
		textField_diem2 = new JTextField();
		textField_diem2.setColumns(10);
		textField_diem2.setBounds(562, 489, 170, 43);
		contentPane.add(textField_diem2);
		
		textField_diem3 = new JTextField();
		textField_diem3.setColumns(10);
		textField_diem3.setBounds(562, 556, 170, 43);
		contentPane.add(textField_diem3);
		
		rdbtn_nam = new JRadioButton("Nam");
		rdbtn_nam.setFont(new Font("Tahoma", Font.PLAIN, 20));
		rdbtn_nam.setBounds(562, 355, 71, 42);
		contentPane.add(rdbtn_nam);
		rdbtn_nam.setSelected(true);
		
		rdbtn_nu = new JRadioButton("Nữ");
		rdbtn_nu.setFont(new Font("Tahoma", Font.PLAIN, 20));
		rdbtn_nu.setBounds(647, 355, 71, 42);
		contentPane.add(rdbtn_nu);
		
		btngr = new ButtonGroup();
		btngr.add(rdbtn_nam);
		btngr.add(rdbtn_nu);
		
		ActionListener listener = new Listener(this);
		
		JButton btn_them = new JButton("Thêm");
		btn_them.addActionListener(listener);
		btn_them.setFont(new Font("Tahoma", Font.PLAIN, 20));
		btn_them.setBounds(21, 633, 127, 43);
		contentPane.add(btn_them);
		
		JButton btn_xoa = new JButton("Xóa");
		btn_xoa.addActionListener(listener);
		btn_xoa.setFont(new Font("Tahoma", Font.PLAIN, 20));
		btn_xoa.setBounds(595, 633, 127, 43);
		contentPane.add(btn_xoa);
		
		JButton btn_capNhat = new JButton("Cập nhật");
		btn_capNhat.addActionListener(listener);
		btn_capNhat.setFont(new Font("Tahoma", Font.PLAIN, 20));
		btn_capNhat.setBounds(215, 633, 127, 43);
		contentPane.add(btn_capNhat);
		
		JButton btn_luu = new JButton("Lưu");
		btn_luu.addActionListener(listener);
		btn_luu.setFont(new Font("Tahoma", Font.PLAIN, 20));
		btn_luu.setBounds(409, 633, 127, 43);
		contentPane.add(btn_luu);
		
		JSeparator separator_1_1 = new JSeparator();
		separator_1_1.setBounds(10, 615, 728, 2);
		contentPane.add(separator_1_1);
		
		comboBox_queQuanUnder = new JComboBox();
		comboBox_queQuanUnder.addItem("");
		for (Tinh tinh : listTinh) {
			comboBox_queQuanUnder.addItem(tinh.getTenTinh());
		}
		comboBox_queQuanUnder.setBounds(161, 488, 170, 43);
		contentPane.add(comboBox_queQuanUnder);
	}

	public void xoaForm() {
		textField_maSV.setText("");
		textField_maSVUnder.setText("");
		textField_hoTen.setText("");
		textField_ngaySinh.setText("");
		textField_diem1.setText("");
		textField_diem2.setText("");
		textField_diem3.setText("");
		comboBox_queQuanUnder.setSelectedIndex(-1);
		btngr.clearSelection();
	}

	public void themHoacCapNhatSV(SinhVien sv) {
		DefaultTableModel defaultTableModel = (DefaultTableModel) table.getModel();
		if (!this.model.kiemTraTonTai(sv)) {
			this.model.addSV(sv);
			defaultTableModel.addRow(new Object[]{
													sv.getMaSinhVien()+"", 
													sv.getTenSinhVien(),
													sv.getQueQuan().getTenTinh(),
													sv.getNgaySinh().getDate()+"/"+(sv.getNgaySinh().getMonth() + 1)+"/"+(sv.getNgaySinh().getYear()+1900),
													sv.isGioiTinh() ? "Nam" : "Nữ",
													sv.getDiemMon1()+"",
													sv.getDiemMon2()+"",
													sv.getDiemMon3()+""});
		}
		else {
			this.model.update(sv);
			int soDong = defaultTableModel.getRowCount();
			for (int i = 0; i < soDong; i++) {
				String id = defaultTableModel.getValueAt(soDong, 0)+"";
				if (id.equals(sv.getMaSinhVien()+"")) {
					defaultTableModel.getValueAt(sv.getMaSinhVien()+"", i, 0);
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
				}
			}
		}
	}

	public void hienThiThongTinSinhVienDangDuocChon() {
		DefaultTableModel defaultTableModel = (DefaultTableModel) table.getModel();
		int row = table.getSelectedRow();
		
		int maSV = Integer.valueOf(defaultTableModel.getValueAt(row, 0)+"");
		String tenSV = defaultTableModel.getValueAt(row, 1)+"";
		Tinh tinh = Tinh.getTinhByTen(defaultTableModel.getValueAt(row, 2)+"");
		String ngaySinh = defaultTableModel.getValueAt(row, 3)+"";
		String textGioiTinh = defaultTableModel.getValueAt(row, 4)+"";
		boolean gioiTinh = textGioiTinh.equals("Nam");
		float diemMon1 = Float.valueOf(defaultTableModel.getValueAt(row, 5)+"");
		float diemMon2 = Float.valueOf(defaultTableModel.getValueAt(row, 6)+"");
		float diemMon3 = Float.valueOf(defaultTableModel.getValueAt(row, 7)+"");
		
		this.textField_maSVUnder.setText(maSV+"");
		this.textField_hoTen.setText(tenSV+"");
		this.comboBox_queQuan.setSelectedItem(tinh.getTenTinh()+"");
		this.textField_ngaySinh.setText(ngaySinh+"");
		if (gioiTinh) {
			rdbtn_nam.setSelected(true);
		} else {
			rdbtn_nu.setSelected(false);
		}
		this.textField_diem1.setText(diemMon1+"");
		this.textField_diem2.setText(diemMon2+"");
		this.textField_diem3.setText(diemMon3+"");
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3063)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-03-14 23:38:22.171
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3063)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-03-14 23:38:22.172
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3063)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2023-03-14 23:38:30.203
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package View;

import java.awt.EventQueue;

import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.border.EmptyBorder;

import Model.QLSV_model;
import Model.SinhVien;
import Model.Tinh;

import javax.swing.JMenuBar;
import javax.swing.JMenu;
import javax.swing.JMenuItem;
import javax.swing.JSeparator;
import javax.swing.JLabel;
import java.awt.Font;
import javax.swing.JScrollPane;
import javax.swing.JComboBox;
import javax.swing.JTextField;
import javax.swing.ButtonGroup;
import javax.swing.JButton;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

import Controller.Listener;

import javax.swing.JRadioButton;
import java.awt.event.ActionListener;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.awt.event.ActionEvent;

public class view_QLSV extends JFrame {

	private JPanel contentPane;
	public QLSV_model model;
	private JTextField textField_maSV;
	private JTable table;
	public JTextField textField_maSVUnder;
	public JTextField textField_hoTen;
	public JTextField textField_ngaySinh;
	public JTextField textField_diem1;
	public JTextField textField_diem2;
	public JTextField textField_diem3;
	public JComboBox comboBox_queQuanUnder;
	private JComboBox comboBox_queQuan;
	public ButtonGroup btngr;
	public JRadioButton rdbtn_nam;
	public JRadioButton rdbtn_nu;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					view_QLSV frame = new view_QLSV();
					frame.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the frame.
	 */
	public view_QLSV() {
		model = new QLSV_model();
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setBounds(100, 100, 757, 759);
		setTitle("Chương trình quản lý sinh viên của Trần Phúc Khánh");
		
		JMenuBar menuBar = new JMenuBar();
		setJMenuBar(menuBar);
		
		JMenu menu_file = new JMenu("File");
		menuBar.add(menu_file);
		
		JMenuItem menuItem_open = new JMenuItem("Open");
		menu_file.add(menuItem_open);
		
		JMenuItem mntmClose = new JMenuItem("Close");
		menu_file.add(mntmClose);
		
		JSeparator separator = new JSeparator();
		menu_file.add(separator);
		
		JMenuItem menuItem_exit = new JMenuItem("Exit");
		menu_file.add(menuItem_exit);
		
		JMenu menu_about = new JMenu("About");
		menuBar.add(menu_about);
		
		JMenuItem menuItem_about_me = new JMenuItem("About me");
		menu_about.add(menuItem_about_me);
		contentPane = new JPanel();
		contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));

		setContentPane(contentPane);
		contentPane.setLayout(null);
		
		JLabel label_queQuan = new JLabel("Quê quán");
		label_queQuan.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_queQuan.setBounds(47, 40, 86, 42);
		contentPane.add(label_queQuan);
		
		comboBox_queQuan = new JComboBox();
		ArrayList<Tinh> listTinh = Tinh.getDS_Tinh();
		comboBox_queQuan.addItem("");
		for (Tinh tinh : listTinh) {
			comboBox_queQuan.addItem(tinh.getTenTinh());
		}
		comboBox_queQuan.setFont(new Font("Tahoma", Font.PLAIN, 15));
		comboBox_queQuan.setBounds(140, 40, 102, 43);
		contentPane.add(comboBox_queQuan);
		
		JLabel label_maSinhVien = new JLabel("Mã sinh viên");
		label_maSinhVien.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_maSinhVien.setBounds(306, 40, 110, 42);
		contentPane.add(label_maSinhVien);
		
		textField_maSV = new JTextField();
		textField_maSV.setBounds(426, 40, 102, 43);
		contentPane.add(textField_maSV);
		textField_maSV.setColumns(10);
		
		JButton button_timKiem = new JButton("Tìm kiếm");
		button_timKiem.setFont(new Font("Tahoma", Font.PLAIN, 20));
		button_timKiem.setBounds(591, 40, 127, 43);
		contentPane.add(button_timKiem);
		
		JSeparator separator_1 = new JSeparator();
		separator_1.setBounds(10, 102, 728, 2);
		contentPane.add(separator_1);
		
		JLabel label_danhSachSV = new JLabel("Danh sách SV");
		label_danhSachSV.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_danhSachSV.setBounds(26, 127, 122, 42);
		contentPane.add(label_danhSachSV);
		
		table = new JTable();
		table.setFont(new Font("Tahoma", Font.PLAIN, 10));
		table.setModel(new DefaultTableModel(
			new Object[][] {
			},
			new String[] {
				"Mã SV", "Họ tên", "Quê quán", "Ngày sinh", "Giới tính", "Điểm môn 1", "Điểm môn 2", "Điểm môn 3"
			}
		));
		
		JScrollPane scrollPane = new JScrollPane(table);
		scrollPane.setBounds(26, 179, 696, 92);
		contentPane.add(scrollPane);
		
		JLabel label_thongTinSV = new JLabel("Thông tin SV");
		label_thongTinSV.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_thongTinSV.setBounds(26, 303, 115, 42);
		contentPane.add(label_thongTinSV);
		
		JSeparator separator_2 = new JSeparator();
		separator_2.setBounds(10, 291, 728, 2);
		contentPane.add(separator_2);
		
		JLabel label_maSinhVienUnder = new JLabel("Mã sinh viên");
		label_maSinhVienUnder.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_maSinhVienUnder.setBounds(26, 355, 110, 42);
		contentPane.add(label_maSinhVienUnder);
		
		JLabel label_hoTenUnder = new JLabel("Họ tên");
		label_hoTenUnder.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_hoTenUnder.setBounds(26, 422, 110, 42);
		contentPane.add(label_hoTenUnder);
		
		JLabel label_queQuanUnder = new JLabel("Quê quán");
		label_queQuanUnder.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_queQuanUnder.setBounds(26, 489, 110, 42);
		contentPane.add(label_queQuanUnder);
		
		JLabel label_ngaySinhUnder = new JLabel("Ngày sinh");
		label_ngaySinhUnder.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_ngaySinhUnder.setBounds(26, 556, 110, 42);
		contentPane.add(label_ngaySinhUnder);
		
		textField_maSVUnder = new JTextField();
		textField_maSVUnder.setColumns(10);
		textField_maSVUnder.setBounds(161, 355, 170, 43);
		contentPane.add(textField_maSVUnder);
		
		textField_hoTen = new JTextField();
		textField_hoTen.setColumns(10);
		textField_hoTen.setBounds(161, 422, 170, 43);
		contentPane.add(textField_hoTen);
		
		textField_ngaySinh = new JTextField();
		textField_ngaySinh.setColumns(10);
		textField_ngaySinh.setBounds(161, 556, 170, 43);
		contentPane.add(textField_ngaySinh);
		
		JLabel label_gioiTinhUnder = new JLabel("Giới tính");
		label_gioiTinhUnder.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_gioiTinhUnder.setBounds(426, 355, 110, 42);
		contentPane.add(label_gioiTinhUnder);
		
		JLabel label_diem1Under = new JLabel("Điểm 1");
		label_diem1Under.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_diem1Under.setBounds(426, 422, 110, 42);
		contentPane.add(label_diem1Under);
		
		JLabel label_diem2Under = new JLabel("Điểm 2");
		label_diem2Under.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_diem2Under.setBounds(426, 489, 110, 42);
		contentPane.add(label_diem2Under);
		
		JLabel label_diem3Under = new JLabel("Điểm 3");
		label_diem3Under.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_diem3Under.setBounds(426, 556, 110, 42);
		contentPane.add(label_diem3Under);
		
		textField_diem1 = new JTextField();
		textField_diem1.setColumns(10);
		textField_diem1.setBounds(562, 422, 170, 43);
		contentPane.add(textField_diem1);
		
		textField_diem2 = new JTextField();
		textField_diem2.setColumns(10);
		textField_diem2.setBounds(562, 489, 170, 43);
		contentPane.add(textField_diem2);
		
		textField_diem3 = new JTextField();
		textField_diem3.setColumns(10);
		textField_diem3.setBounds(562, 556, 170, 43);
		contentPane.add(textField_diem3);
		
		rdbtn_nam = new JRadioButton("Nam");
		rdbtn_nam.setFont(new Font("Tahoma", Font.PLAIN, 20));
		rdbtn_nam.setBounds(562, 355, 71, 42);
		contentPane.add(rdbtn_nam);
		rdbtn_nam.setSelected(true);
		
		rdbtn_nu = new JRadioButton("Nữ");
		rdbtn_nu.setFont(new Font("Tahoma", Font.PLAIN, 20));
		rdbtn_nu.setBounds(647, 355, 71, 42);
		contentPane.add(rdbtn_nu);
		
		btngr = new ButtonGroup();
		btngr.add(rdbtn_nam);
		btngr.add(rdbtn_nu);
		
		ActionListener listener = new Listener(this);
		
		JButton btn_them = new JButton("Thêm");
		btn_them.addActionListener(listener);
		btn_them.setFont(new Font("Tahoma", Font.PLAIN, 20));
		btn_them.setBounds(21, 633, 127, 43);
		contentPane.add(btn_them);
		
		JButton btn_xoa = new JButton("Xóa");
		btn_xoa.addActionListener(listener);
		btn_xoa.setFont(new Font("Tahoma", Font.PLAIN, 20));
		btn_xoa.setBounds(595, 633, 127, 43);
		contentPane.add(btn_xoa);
		
		JButton btn_capNhat = new JButton("Cập nhật");
		btn_capNhat.addActionListener(listener);
		btn_capNhat.setFont(new Font("Tahoma", Font.PLAIN, 20));
		btn_capNhat.setBounds(215, 633, 127, 43);
		contentPane.add(btn_capNhat);
		
		JButton btn_luu = new JButton("Lưu");
		btn_luu.addActionListener(listener);
		btn_luu.setFont(new Font("Tahoma", Font.PLAIN, 20));
		btn_luu.setBounds(409, 633, 127, 43);
		contentPane.add(btn_luu);
		
		JSeparator separator_1_1 = new JSeparator();
		separator_1_1.setBounds(10, 615, 728, 2);
		contentPane.add(separator_1_1);
		
		comboBox_queQuanUnder = new JComboBox();
		comboBox_queQuanUnder.addItem("");
		for (Tinh tinh : listTinh) {
			comboBox_queQuanUnder.addItem(tinh.getTenTinh());
		}
		comboBox_queQuanUnder.setBounds(161, 488, 170, 43);
		contentPane.add(comboBox_queQuanUnder);
	}

	public void xoaForm() {
		textField_maSV.setText("");
		textField_maSVUnder.setText("");
		textField_hoTen.setText("");
		textField_ngaySinh.setText("");
		textField_diem1.setText("");
		textField_diem2.setText("");
		textField_diem3.setText("");
		comboBox_queQuanUnder.setSelectedIndex(-1);
		btngr.clearSelection();
	}

	public void themHoacCapNhatSV(SinhVien sv) {
		DefaultTableModel defaultTableModel = (DefaultTableModel) table.getModel();
		if (!this.model.kiemTraTonTai(sv)) {
			this.model.addSV(sv);
			defaultTableModel.addRow(new Object[]{
													sv.getMaSinhVien()+"", 
													sv.getTenSinhVien(),
													sv.getQueQuan().getTenTinh(),
													sv.getNgaySinh().getDate()+"/"+(sv.getNgaySinh().getMonth() + 1)+"/"+(sv.getNgaySinh().getYear()+1900),
													sv.isGioiTinh() ? "Nam" : "Nữ",
													sv.getDiemMon1()+"",
													sv.getDiemMon2()+"",
													sv.getDiemMon3()+""});
		}
		else {
			this.model.update(sv);
			int soDong = defaultTableModel.getRowCount();
			for (int i = 0; i < soDong; i++) {
				String id = defaultTableModel.getValueAt(soDong, 0)+"";
				if (id.equals(sv.getMaSinhVien()+"")) {
					defaultTableModel.getValueAt(sv.getMaSinhVien()+"", i, 0);
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
				}
			}
		}
	}

	public void hienThiThongTinSinhVienDangDuocChon() {
		DefaultTableModel defaultTableModel = (DefaultTableModel) table.getModel();
		int row = table.getSelectedRow();
		
		int maSV = Integer.valueOf(defaultTableModel.getValueAt(row, 0)+"");
		String tenSV = defaultTableModel.getValueAt(row, 1)+"";
		Tinh tinh = Tinh.getTinhByTen(defaultTableModel.getValueAt(row, 2)+"");
		String ngaySinh = defaultTableModel.getValueAt(row, 3)+"";
		String textGioiTinh = defaultTableModel.getValueAt(row, 4)+"";
		boolean gioiTinh = textGioiTinh.equals("Nam");
		float diemMon1 = Float.valueOf(defaultTableModel.getValueAt(row, 5)+"");
		float diemMon2 = Float.valueOf(defaultTableModel.getValueAt(row, 6)+"");
		float diemMon3 = Float.valueOf(defaultTableModel.getValueAt(row, 7)+"");
		
		this.textField_maSVUnder.setText(maSV+"");
		this.textField_hoTen.setText(tenSV+"");
		this.comboBox_queQuan.setSelectedItem(tinh.getTenTinh()+"");
		this.textField_ngaySinh.setText(ngaySinh+"");
		if (gioiTinh) {
			rdbtn_nam.setSelected(true);
		} else {
			rdbtn_nu.setSelected(false);
		}
		this.textField_diem1.setText(diemMon1+"");
		this.textField_diem2.setText(diemMon2+"");
		this.textField_diem3.setText(diemMon3+"");
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3063)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-03-14 23:38:30.205
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3063)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-03-14 23:38:30.205
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3063)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2023-03-14 23:38:31.177
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package View;

import java.awt.EventQueue;

import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.border.EmptyBorder;

import Model.QLSV_model;
import Model.SinhVien;
import Model.Tinh;

import javax.swing.JMenuBar;
import javax.swing.JMenu;
import javax.swing.JMenuItem;
import javax.swing.JSeparator;
import javax.swing.JLabel;
import java.awt.Font;
import javax.swing.JScrollPane;
import javax.swing.JComboBox;
import javax.swing.JTextField;
import javax.swing.ButtonGroup;
import javax.swing.JButton;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

import Controller.Listener;

import javax.swing.JRadioButton;
import java.awt.event.ActionListener;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.awt.event.ActionEvent;

public class view_QLSV extends JFrame {

	private JPanel contentPane;
	public QLSV_model model;
	private JTextField textField_maSV;
	private JTable table;
	public JTextField textField_maSVUnder;
	public JTextField textField_hoTen;
	public JTextField textField_ngaySinh;
	public JTextField textField_diem1;
	public JTextField textField_diem2;
	public JTextField textField_diem3;
	public JComboBox comboBox_queQuanUnder;
	private JComboBox comboBox_queQuan;
	public ButtonGroup btngr;
	public JRadioButton rdbtn_nam;
	public JRadioButton rdbtn_nu;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					view_QLSV frame = new view_QLSV();
					frame.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the frame.
	 */
	public view_QLSV() {
		model = new QLSV_model();
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setBounds(100, 100, 757, 759);
		setTitle("Chương trình quản lý sinh viên của Trần Phúc Khánh");
		
		JMenuBar menuBar = new JMenuBar();
		setJMenuBar(menuBar);
		
		JMenu menu_file = new JMenu("File");
		menuBar.add(menu_file);
		
		JMenuItem menuItem_open = new JMenuItem("Open");
		menu_file.add(menuItem_open);
		
		JMenuItem mntmClose = new JMenuItem("Close");
		menu_file.add(mntmClose);
		
		JSeparator separator = new JSeparator();
		menu_file.add(separator);
		
		JMenuItem menuItem_exit = new JMenuItem("Exit");
		menu_file.add(menuItem_exit);
		
		JMenu menu_about = new JMenu("About");
		menuBar.add(menu_about);
		
		JMenuItem menuItem_about_me = new JMenuItem("About me");
		menu_about.add(menuItem_about_me);
		contentPane = new JPanel();
		contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));

		setContentPane(contentPane);
		contentPane.setLayout(null);
		
		JLabel label_queQuan = new JLabel("Quê quán");
		label_queQuan.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_queQuan.setBounds(47, 40, 86, 42);
		contentPane.add(label_queQuan);
		
		comboBox_queQuan = new JComboBox();
		ArrayList<Tinh> listTinh = Tinh.getDS_Tinh();
		comboBox_queQuan.addItem("");
		for (Tinh tinh : listTinh) {
			comboBox_queQuan.addItem(tinh.getTenTinh());
		}
		comboBox_queQuan.setFont(new Font("Tahoma", Font.PLAIN, 15));
		comboBox_queQuan.setBounds(140, 40, 102, 43);
		contentPane.add(comboBox_queQuan);
		
		JLabel label_maSinhVien = new JLabel("Mã sinh viên");
		label_maSinhVien.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_maSinhVien.setBounds(306, 40, 110, 42);
		contentPane.add(label_maSinhVien);
		
		textField_maSV = new JTextField();
		textField_maSV.setBounds(426, 40, 102, 43);
		contentPane.add(textField_maSV);
		textField_maSV.setColumns(10);
		
		JButton button_timKiem = new JButton("Tìm kiếm");
		button_timKiem.setFont(new Font("Tahoma", Font.PLAIN, 20));
		button_timKiem.setBounds(591, 40, 127, 43);
		contentPane.add(button_timKiem);
		
		JSeparator separator_1 = new JSeparator();
		separator_1.setBounds(10, 102, 728, 2);
		contentPane.add(separator_1);
		
		JLabel label_danhSachSV = new JLabel("Danh sách SV");
		label_danhSachSV.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_danhSachSV.setBounds(26, 127, 122, 42);
		contentPane.add(label_danhSachSV);
		
		table = new JTable();
		table.setFont(new Font("Tahoma", Font.PLAIN, 10));
		table.setModel(new DefaultTableModel(
			new Object[][] {
			},
			new String[] {
				"Mã SV", "Họ tên", "Quê quán", "Ngày sinh", "Giới tính", "Điểm môn 1", "Điểm môn 2", "Điểm môn 3"
			}
		));
		
		JScrollPane scrollPane = new JScrollPane(table);
		scrollPane.setBounds(26, 179, 696, 92);
		contentPane.add(scrollPane);
		
		JLabel label_thongTinSV = new JLabel("Thông tin SV");
		label_thongTinSV.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_thongTinSV.setBounds(26, 303, 115, 42);
		contentPane.add(label_thongTinSV);
		
		JSeparator separator_2 = new JSeparator();
		separator_2.setBounds(10, 291, 728, 2);
		contentPane.add(separator_2);
		
		JLabel label_maSinhVienUnder = new JLabel("Mã sinh viên");
		label_maSinhVienUnder.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_maSinhVienUnder.setBounds(26, 355, 110, 42);
		contentPane.add(label_maSinhVienUnder);
		
		JLabel label_hoTenUnder = new JLabel("Họ tên");
		label_hoTenUnder.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_hoTenUnder.setBounds(26, 422, 110, 42);
		contentPane.add(label_hoTenUnder);
		
		JLabel label_queQuanUnder = new JLabel("Quê quán");
		label_queQuanUnder.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_queQuanUnder.setBounds(26, 489, 110, 42);
		contentPane.add(label_queQuanUnder);
		
		JLabel label_ngaySinhUnder = new JLabel("Ngày sinh");
		label_ngaySinhUnder.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_ngaySinhUnder.setBounds(26, 556, 110, 42);
		contentPane.add(label_ngaySinhUnder);
		
		textField_maSVUnder = new JTextField();
		textField_maSVUnder.setColumns(10);
		textField_maSVUnder.setBounds(161, 355, 170, 43);
		contentPane.add(textField_maSVUnder);
		
		textField_hoTen = new JTextField();
		textField_hoTen.setColumns(10);
		textField_hoTen.setBounds(161, 422, 170, 43);
		contentPane.add(textField_hoTen);
		
		textField_ngaySinh = new JTextField();
		textField_ngaySinh.setColumns(10);
		textField_ngaySinh.setBounds(161, 556, 170, 43);
		contentPane.add(textField_ngaySinh);
		
		JLabel label_gioiTinhUnder = new JLabel("Giới tính");
		label_gioiTinhUnder.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_gioiTinhUnder.setBounds(426, 355, 110, 42);
		contentPane.add(label_gioiTinhUnder);
		
		JLabel label_diem1Under = new JLabel("Điểm 1");
		label_diem1Under.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_diem1Under.setBounds(426, 422, 110, 42);
		contentPane.add(label_diem1Under);
		
		JLabel label_diem2Under = new JLabel("Điểm 2");
		label_diem2Under.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_diem2Under.setBounds(426, 489, 110, 42);
		contentPane.add(label_diem2Under);
		
		JLabel label_diem3Under = new JLabel("Điểm 3");
		label_diem3Under.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_diem3Under.setBounds(426, 556, 110, 42);
		contentPane.add(label_diem3Under);
		
		textField_diem1 = new JTextField();
		textField_diem1.setColumns(10);
		textField_diem1.setBounds(562, 422, 170, 43);
		contentPane.add(textField_diem1);
		
		textField_diem2 = new JTextField();
		textField_diem2.setColumns(10);
		textField_diem2.setBounds(562, 489, 170, 43);
		contentPane.add(textField_diem2);
		
		textField_diem3 = new JTextField();
		textField_diem3.setColumns(10);
		textField_diem3.setBounds(562, 556, 170, 43);
		contentPane.add(textField_diem3);
		
		rdbtn_nam = new JRadioButton("Nam");
		rdbtn_nam.setFont(new Font("Tahoma", Font.PLAIN, 20));
		rdbtn_nam.setBounds(562, 355, 71, 42);
		contentPane.add(rdbtn_nam);
		rdbtn_nam.setSelected(true);
		
		rdbtn_nu = new JRadioButton("Nữ");
		rdbtn_nu.setFont(new Font("Tahoma", Font.PLAIN, 20));
		rdbtn_nu.setBounds(647, 355, 71, 42);
		contentPane.add(rdbtn_nu);
		
		btngr = new ButtonGroup();
		btngr.add(rdbtn_nam);
		btngr.add(rdbtn_nu);
		
		ActionListener listener = new Listener(this);
		
		JButton btn_them = new JButton("Thêm");
		btn_them.addActionListener(listener);
		btn_them.setFont(new Font("Tahoma", Font.PLAIN, 20));
		btn_them.setBounds(21, 633, 127, 43);
		contentPane.add(btn_them);
		
		JButton btn_xoa = new JButton("Xóa");
		btn_xoa.addActionListener(listener);
		btn_xoa.setFont(new Font("Tahoma", Font.PLAIN, 20));
		btn_xoa.setBounds(595, 633, 127, 43);
		contentPane.add(btn_xoa);
		
		JButton btn_capNhat = new JButton("Cập nhật");
		btn_capNhat.addActionListener(listener);
		btn_capNhat.setFont(new Font("Tahoma", Font.PLAIN, 20));
		btn_capNhat.setBounds(215, 633, 127, 43);
		contentPane.add(btn_capNhat);
		
		JButton btn_luu = new JButton("Lưu");
		btn_luu.addActionListener(listener);
		btn_luu.setFont(new Font("Tahoma", Font.PLAIN, 20));
		btn_luu.setBounds(409, 633, 127, 43);
		contentPane.add(btn_luu);
		
		JSeparator separator_1_1 = new JSeparator();
		separator_1_1.setBounds(10, 615, 728, 2);
		contentPane.add(separator_1_1);
		
		comboBox_queQuanUnder = new JComboBox();
		comboBox_queQuanUnder.addItem("");
		for (Tinh tinh : listTinh) {
			comboBox_queQuanUnder.addItem(tinh.getTenTinh());
		}
		comboBox_queQuanUnder.setBounds(161, 488, 170, 43);
		contentPane.add(comboBox_queQuanUnder);
	}

	public void xoaForm() {
		textField_maSV.setText("");
		textField_maSVUnder.setText("");
		textField_hoTen.setText("");
		textField_ngaySinh.setText("");
		textField_diem1.setText("");
		textField_diem2.setText("");
		textField_diem3.setText("");
		comboBox_queQuanUnder.setSelectedIndex(-1);
		btngr.clearSelection();
	}

	public void themHoacCapNhatSV(SinhVien sv) {
		DefaultTableModel defaultTableModel = (DefaultTableModel) table.getModel();
		if (!this.model.kiemTraTonTai(sv)) {
			this.model.addSV(sv);
			defaultTableModel.addRow(new Object[]{
													sv.getMaSinhVien()+"", 
													sv.getTenSinhVien(),
													sv.getQueQuan().getTenTinh(),
													sv.getNgaySinh().getDate()+"/"+(sv.getNgaySinh().getMonth() + 1)+"/"+(sv.getNgaySinh().getYear()+1900),
													sv.isGioiTinh() ? "Nam" : "Nữ",
													sv.getDiemMon1()+"",
													sv.getDiemMon2()+"",
													sv.getDiemMon3()+""});
		}
		else {
			this.model.update(sv);
			int soDong = defaultTableModel.getRowCount();
			for (int i = 0; i < soDong; i++) {
				String id = defaultTableModel.getValueAt(soDong, 0)+"";
				if (id.equals(sv.getMaSinhVien()+"")) {
					defaultTableModel.getValueAt(sv.getMaSinhVien()+"", i, 0);
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
				}
			}
		}
	}

	public void hienThiThongTinSinhVienDangDuocChon() {
		DefaultTableModel defaultTableModel = (DefaultTableModel) table.getModel();
		int row = table.getSelectedRow();
		
		int maSV = Integer.valueOf(defaultTableModel.getValueAt(row, 0)+"");
		String tenSV = defaultTableModel.getValueAt(row, 1)+"";
		Tinh tinh = Tinh.getTinhByTen(defaultTableModel.getValueAt(row, 2)+"");
		String ngaySinh = defaultTableModel.getValueAt(row, 3)+"";
		String textGioiTinh = defaultTableModel.getValueAt(row, 4)+"";
		boolean gioiTinh = textGioiTinh.equals("Nam");
		float diemMon1 = Float.valueOf(defaultTableModel.getValueAt(row, 5)+"");
		float diemMon2 = Float.valueOf(defaultTableModel.getValueAt(row, 6)+"");
		float diemMon3 = Float.valueOf(defaultTableModel.getValueAt(row, 7)+"");
		
		this.textField_maSVUnder.setText(maSV+"");
		this.textField_hoTen.setText(tenSV+"");
		this.comboBox_queQuan.setSelectedItem(tinh.getTenTinh()+"");
		this.textField_ngaySinh.setText(ngaySinh+"");
		if (gioiTinh) {
			rdbtn_nam.setSelected(true);
		} else {
			rdbtn_nu.setSelected(false);
		}
		this.textField_diem1.setText(diemMon1+"");
		this.textField_diem2.setText(diemMon2+"");
		this.textField_diem3.setText(diemMon3+"");
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3063)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-03-14 23:38:31.178
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3063)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-03-14 23:38:31.179
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3063)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2023-03-14 23:38:32.248
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package View;

import java.awt.EventQueue;

import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.border.EmptyBorder;

import Model.QLSV_model;
import Model.SinhVien;
import Model.Tinh;

import javax.swing.JMenuBar;
import javax.swing.JMenu;
import javax.swing.JMenuItem;
import javax.swing.JSeparator;
import javax.swing.JLabel;
import java.awt.Font;
import javax.swing.JScrollPane;
import javax.swing.JComboBox;
import javax.swing.JTextField;
import javax.swing.ButtonGroup;
import javax.swing.JButton;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

import Controller.Listener;

import javax.swing.JRadioButton;
import java.awt.event.ActionListener;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.awt.event.ActionEvent;

public class view_QLSV extends JFrame {

	private JPanel contentPane;
	public QLSV_model model;
	private JTextField textField_maSV;
	private JTable table;
	public JTextField textField_maSVUnder;
	public JTextField textField_hoTen;
	public JTextField textField_ngaySinh;
	public JTextField textField_diem1;
	public JTextField textField_diem2;
	public JTextField textField_diem3;
	public JComboBox comboBox_queQuanUnder;
	private JComboBox comboBox_queQuan;
	public ButtonGroup btngr;
	public JRadioButton rdbtn_nam;
	public JRadioButton rdbtn_nu;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					view_QLSV frame = new view_QLSV();
					frame.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the frame.
	 */
	public view_QLSV() {
		model = new QLSV_model();
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setBounds(100, 100, 757, 759);
		setTitle("Chương trình quản lý sinh viên của Trần Phúc Khánh");
		
		JMenuBar menuBar = new JMenuBar();
		setJMenuBar(menuBar);
		
		JMenu menu_file = new JMenu("File");
		menuBar.add(menu_file);
		
		JMenuItem menuItem_open = new JMenuItem("Open");
		menu_file.add(menuItem_open);
		
		JMenuItem mntmClose = new JMenuItem("Close");
		menu_file.add(mntmClose);
		
		JSeparator separator = new JSeparator();
		menu_file.add(separator);
		
		JMenuItem menuItem_exit = new JMenuItem("Exit");
		menu_file.add(menuItem_exit);
		
		JMenu menu_about = new JMenu("About");
		menuBar.add(menu_about);
		
		JMenuItem menuItem_about_me = new JMenuItem("About me");
		menu_about.add(menuItem_about_me);
		contentPane = new JPanel();
		contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));

		setContentPane(contentPane);
		contentPane.setLayout(null);
		
		JLabel label_queQuan = new JLabel("Quê quán");
		label_queQuan.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_queQuan.setBounds(47, 40, 86, 42);
		contentPane.add(label_queQuan);
		
		comboBox_queQuan = new JComboBox();
		ArrayList<Tinh> listTinh = Tinh.getDS_Tinh();
		comboBox_queQuan.addItem("");
		for (Tinh tinh : listTinh) {
			comboBox_queQuan.addItem(tinh.getTenTinh());
		}
		comboBox_queQuan.setFont(new Font("Tahoma", Font.PLAIN, 15));
		comboBox_queQuan.setBounds(140, 40, 102, 43);
		contentPane.add(comboBox_queQuan);
		
		JLabel label_maSinhVien = new JLabel("Mã sinh viên");
		label_maSinhVien.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_maSinhVien.setBounds(306, 40, 110, 42);
		contentPane.add(label_maSinhVien);
		
		textField_maSV = new JTextField();
		textField_maSV.setBounds(426, 40, 102, 43);
		contentPane.add(textField_maSV);
		textField_maSV.setColumns(10);
		
		JButton button_timKiem = new JButton("Tìm kiếm");
		button_timKiem.setFont(new Font("Tahoma", Font.PLAIN, 20));
		button_timKiem.setBounds(591, 40, 127, 43);
		contentPane.add(button_timKiem);
		
		JSeparator separator_1 = new JSeparator();
		separator_1.setBounds(10, 102, 728, 2);
		contentPane.add(separator_1);
		
		JLabel label_danhSachSV = new JLabel("Danh sách SV");
		label_danhSachSV.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_danhSachSV.setBounds(26, 127, 122, 42);
		contentPane.add(label_danhSachSV);
		
		table = new JTable();
		table.setFont(new Font("Tahoma", Font.PLAIN, 10));
		table.setModel(new DefaultTableModel(
			new Object[][] {
			},
			new String[] {
				"Mã SV", "Họ tên", "Quê quán", "Ngày sinh", "Giới tính", "Điểm môn 1", "Điểm môn 2", "Điểm môn 3"
			}
		));
		
		JScrollPane scrollPane = new JScrollPane(table);
		scrollPane.setBounds(26, 179, 696, 92);
		contentPane.add(scrollPane);
		
		JLabel label_thongTinSV = new JLabel("Thông tin SV");
		label_thongTinSV.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_thongTinSV.setBounds(26, 303, 115, 42);
		contentPane.add(label_thongTinSV);
		
		JSeparator separator_2 = new JSeparator();
		separator_2.setBounds(10, 291, 728, 2);
		contentPane.add(separator_2);
		
		JLabel label_maSinhVienUnder = new JLabel("Mã sinh viên");
		label_maSinhVienUnder.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_maSinhVienUnder.setBounds(26, 355, 110, 42);
		contentPane.add(label_maSinhVienUnder);
		
		JLabel label_hoTenUnder = new JLabel("Họ tên");
		label_hoTenUnder.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_hoTenUnder.setBounds(26, 422, 110, 42);
		contentPane.add(label_hoTenUnder);
		
		JLabel label_queQuanUnder = new JLabel("Quê quán");
		label_queQuanUnder.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_queQuanUnder.setBounds(26, 489, 110, 42);
		contentPane.add(label_queQuanUnder);
		
		JLabel label_ngaySinhUnder = new JLabel("Ngày sinh");
		label_ngaySinhUnder.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_ngaySinhUnder.setBounds(26, 556, 110, 42);
		contentPane.add(label_ngaySinhUnder);
		
		textField_maSVUnder = new JTextField();
		textField_maSVUnder.setColumns(10);
		textField_maSVUnder.setBounds(161, 355, 170, 43);
		contentPane.add(textField_maSVUnder);
		
		textField_hoTen = new JTextField();
		textField_hoTen.setColumns(10);
		textField_hoTen.setBounds(161, 422, 170, 43);
		contentPane.add(textField_hoTen);
		
		textField_ngaySinh = new JTextField();
		textField_ngaySinh.setColumns(10);
		textField_ngaySinh.setBounds(161, 556, 170, 43);
		contentPane.add(textField_ngaySinh);
		
		JLabel label_gioiTinhUnder = new JLabel("Giới tính");
		label_gioiTinhUnder.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_gioiTinhUnder.setBounds(426, 355, 110, 42);
		contentPane.add(label_gioiTinhUnder);
		
		JLabel label_diem1Under = new JLabel("Điểm 1");
		label_diem1Under.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_diem1Under.setBounds(426, 422, 110, 42);
		contentPane.add(label_diem1Under);
		
		JLabel label_diem2Under = new JLabel("Điểm 2");
		label_diem2Under.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_diem2Under.setBounds(426, 489, 110, 42);
		contentPane.add(label_diem2Under);
		
		JLabel label_diem3Under = new JLabel("Điểm 3");
		label_diem3Under.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_diem3Under.setBounds(426, 556, 110, 42);
		contentPane.add(label_diem3Under);
		
		textField_diem1 = new JTextField();
		textField_diem1.setColumns(10);
		textField_diem1.setBounds(562, 422, 170, 43);
		contentPane.add(textField_diem1);
		
		textField_diem2 = new JTextField();
		textField_diem2.setColumns(10);
		textField_diem2.setBounds(562, 489, 170, 43);
		contentPane.add(textField_diem2);
		
		textField_diem3 = new JTextField();
		textField_diem3.setColumns(10);
		textField_diem3.setBounds(562, 556, 170, 43);
		contentPane.add(textField_diem3);
		
		rdbtn_nam = new JRadioButton("Nam");
		rdbtn_nam.setFont(new Font("Tahoma", Font.PLAIN, 20));
		rdbtn_nam.setBounds(562, 355, 71, 42);
		contentPane.add(rdbtn_nam);
		rdbtn_nam.setSelected(true);
		
		rdbtn_nu = new JRadioButton("Nữ");
		rdbtn_nu.setFont(new Font("Tahoma", Font.PLAIN, 20));
		rdbtn_nu.setBounds(647, 355, 71, 42);
		contentPane.add(rdbtn_nu);
		
		btngr = new ButtonGroup();
		btngr.add(rdbtn_nam);
		btngr.add(rdbtn_nu);
		
		ActionListener listener = new Listener(this);
		
		JButton btn_them = new JButton("Thêm");
		btn_them.addActionListener(listener);
		btn_them.setFont(new Font("Tahoma", Font.PLAIN, 20));
		btn_them.setBounds(21, 633, 127, 43);
		contentPane.add(btn_them);
		
		JButton btn_xoa = new JButton("Xóa");
		btn_xoa.addActionListener(listener);
		btn_xoa.setFont(new Font("Tahoma", Font.PLAIN, 20));
		btn_xoa.setBounds(595, 633, 127, 43);
		contentPane.add(btn_xoa);
		
		JButton btn_capNhat = new JButton("Cập nhật");
		btn_capNhat.addActionListener(listener);
		btn_capNhat.setFont(new Font("Tahoma", Font.PLAIN, 20));
		btn_capNhat.setBounds(215, 633, 127, 43);
		contentPane.add(btn_capNhat);
		
		JButton btn_luu = new JButton("Lưu");
		btn_luu.addActionListener(listener);
		btn_luu.setFont(new Font("Tahoma", Font.PLAIN, 20));
		btn_luu.setBounds(409, 633, 127, 43);
		contentPane.add(btn_luu);
		
		JSeparator separator_1_1 = new JSeparator();
		separator_1_1.setBounds(10, 615, 728, 2);
		contentPane.add(separator_1_1);
		
		comboBox_queQuanUnder = new JComboBox();
		comboBox_queQuanUnder.addItem("");
		for (Tinh tinh : listTinh) {
			comboBox_queQuanUnder.addItem(tinh.getTenTinh());
		}
		comboBox_queQuanUnder.setBounds(161, 488, 170, 43);
		contentPane.add(comboBox_queQuanUnder);
	}

	public void xoaForm() {
		textField_maSV.setText("");
		textField_maSVUnder.setText("");
		textField_hoTen.setText("");
		textField_ngaySinh.setText("");
		textField_diem1.setText("");
		textField_diem2.setText("");
		textField_diem3.setText("");
		comboBox_queQuanUnder.setSelectedIndex(-1);
		btngr.clearSelection();
	}

	public void themHoacCapNhatSV(SinhVien sv) {
		DefaultTableModel defaultTableModel = (DefaultTableModel) table.getModel();
		if (!this.model.kiemTraTonTai(sv)) {
			this.model.addSV(sv);
			defaultTableModel.addRow(new Object[]{
													sv.getMaSinhVien()+"", 
													sv.getTenSinhVien(),
													sv.getQueQuan().getTenTinh(),
													sv.getNgaySinh().getDate()+"/"+(sv.getNgaySinh().getMonth() + 1)+"/"+(sv.getNgaySinh().getYear()+1900),
													sv.isGioiTinh() ? "Nam" : "Nữ",
													sv.getDiemMon1()+"",
													sv.getDiemMon2()+"",
													sv.getDiemMon3()+""});
		}
		else {
			this.model.update(sv);
			int soDong = defaultTableModel.getRowCount();
			for (int i = 0; i < soDong; i++) {
				String id = defaultTableModel.getValueAt(soDong, 0)+"";
				if (id.equals(sv.getMaSinhVien()+"")) {
					defaultTableModel.getValueAt(sv.getMaSinhVien()+"", i, 0);
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
				}
			}
		}
	}

	public void hienThiThongTinSinhVienDangDuocChon() {
		DefaultTableModel defaultTableModel = (DefaultTableModel) table.getModel();
		int row = table.getSelectedRow();
		
		int maSV = Integer.valueOf(defaultTableModel.getValueAt(row, 0)+"");
		String tenSV = defaultTableModel.getValueAt(row, 1)+"";
		Tinh tinh = Tinh.getTinhByTen(defaultTableModel.getValueAt(row, 2)+"");
		String ngaySinh = defaultTableModel.getValueAt(row, 3)+"";
		String textGioiTinh = defaultTableModel.getValueAt(row, 4)+"";
		boolean gioiTinh = textGioiTinh.equals("Nam");
		float diemMon1 = Float.valueOf(defaultTableModel.getValueAt(row, 5)+"");
		float diemMon2 = Float.valueOf(defaultTableModel.getValueAt(row, 6)+"");
		float diemMon3 = Float.valueOf(defaultTableModel.getValueAt(row, 7)+"");
		
		this.textField_maSVUnder.setText(maSV+"");
		this.textField_hoTen.setText(tenSV+"");
		this.comboBox_queQuan.setSelectedItem(tinh.getTenTinh()+"");
		this.textField_ngaySinh.setText(ngaySinh+"");
		if (gioiTinh) {
			rdbtn_nam.setSelected(true);
		} else {
			rdbtn_nu.setSelected(false);
		}
		this.textField_diem1.setText(diemMon1+"");
		this.textField_diem2.setText(diemMon2+"");
		this.textField_diem3.setText(diemMon3+"");
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3063)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:141)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:120)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-03-14 23:38:32.251
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3063)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:141)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:120)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-03-14 23:38:32.251
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3063)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:141)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:120)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core 4 4 2023-03-14 23:38:32.269
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package View;

import java.awt.EventQueue;

import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.border.EmptyBorder;

import Model.QLSV_model;
import Model.SinhVien;
import Model.Tinh;

import javax.swing.JMenuBar;
import javax.swing.JMenu;
import javax.swing.JMenuItem;
import javax.swing.JSeparator;
import javax.swing.JLabel;
import java.awt.Font;
import javax.swing.JScrollPane;
import javax.swing.JComboBox;
import javax.swing.JTextField;
import javax.swing.ButtonGroup;
import javax.swing.JButton;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

import Controller.Listener;

import javax.swing.JRadioButton;
import java.awt.event.ActionListener;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.awt.event.ActionEvent;

public class view_QLSV extends JFrame {

	private JPanel contentPane;
	public QLSV_model model;
	private JTextField textField_maSV;
	private JTable table;
	public JTextField textField_maSVUnder;
	public JTextField textField_hoTen;
	public JTextField textField_ngaySinh;
	public JTextField textField_diem1;
	public JTextField textField_diem2;
	public JTextField textField_diem3;
	public JComboBox comboBox_queQuanUnder;
	private JComboBox comboBox_queQuan;
	public ButtonGroup btngr;
	public JRadioButton rdbtn_nam;
	public JRadioButton rdbtn_nu;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					view_QLSV frame = new view_QLSV();
					frame.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the frame.
	 */
	public view_QLSV() {
		model = new QLSV_model();
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setBounds(100, 100, 757, 759);
		setTitle("Chương trình quản lý sinh viên của Trần Phúc Khánh");
		
		JMenuBar menuBar = new JMenuBar();
		setJMenuBar(menuBar);
		
		JMenu menu_file = new JMenu("File");
		menuBar.add(menu_file);
		
		JMenuItem menuItem_open = new JMenuItem("Open");
		menu_file.add(menuItem_open);
		
		JMenuItem mntmClose = new JMenuItem("Close");
		menu_file.add(mntmClose);
		
		JSeparator separator = new JSeparator();
		menu_file.add(separator);
		
		JMenuItem menuItem_exit = new JMenuItem("Exit");
		menu_file.add(menuItem_exit);
		
		JMenu menu_about = new JMenu("About");
		menuBar.add(menu_about);
		
		JMenuItem menuItem_about_me = new JMenuItem("About me");
		menu_about.add(menuItem_about_me);
		contentPane = new JPanel();
		contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));

		setContentPane(contentPane);
		contentPane.setLayout(null);
		
		JLabel label_queQuan = new JLabel("Quê quán");
		label_queQuan.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_queQuan.setBounds(47, 40, 86, 42);
		contentPane.add(label_queQuan);
		
		comboBox_queQuan = new JComboBox();
		ArrayList<Tinh> listTinh = Tinh.getDS_Tinh();
		comboBox_queQuan.addItem("");
		for (Tinh tinh : listTinh) {
			comboBox_queQuan.addItem(tinh.getTenTinh());
		}
		comboBox_queQuan.setFont(new Font("Tahoma", Font.PLAIN, 15));
		comboBox_queQuan.setBounds(140, 40, 102, 43);
		contentPane.add(comboBox_queQuan);
		
		JLabel label_maSinhVien = new JLabel("Mã sinh viên");
		label_maSinhVien.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_maSinhVien.setBounds(306, 40, 110, 42);
		contentPane.add(label_maSinhVien);
		
		textField_maSV = new JTextField();
		textField_maSV.setBounds(426, 40, 102, 43);
		contentPane.add(textField_maSV);
		textField_maSV.setColumns(10);
		
		JButton button_timKiem = new JButton("Tìm kiếm");
		button_timKiem.setFont(new Font("Tahoma", Font.PLAIN, 20));
		button_timKiem.setBounds(591, 40, 127, 43);
		contentPane.add(button_timKiem);
		
		JSeparator separator_1 = new JSeparator();
		separator_1.setBounds(10, 102, 728, 2);
		contentPane.add(separator_1);
		
		JLabel label_danhSachSV = new JLabel("Danh sách SV");
		label_danhSachSV.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_danhSachSV.setBounds(26, 127, 122, 42);
		contentPane.add(label_danhSachSV);
		
		table = new JTable();
		table.setFont(new Font("Tahoma", Font.PLAIN, 10));
		table.setModel(new DefaultTableModel(
			new Object[][] {
			},
			new String[] {
				"Mã SV", "Họ tên", "Quê quán", "Ngày sinh", "Giới tính", "Điểm môn 1", "Điểm môn 2", "Điểm môn 3"
			}
		));
		
		JScrollPane scrollPane = new JScrollPane(table);
		scrollPane.setBounds(26, 179, 696, 92);
		contentPane.add(scrollPane);
		
		JLabel label_thongTinSV = new JLabel("Thông tin SV");
		label_thongTinSV.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_thongTinSV.setBounds(26, 303, 115, 42);
		contentPane.add(label_thongTinSV);
		
		JSeparator separator_2 = new JSeparator();
		separator_2.setBounds(10, 291, 728, 2);
		contentPane.add(separator_2);
		
		JLabel label_maSinhVienUnder = new JLabel("Mã sinh viên");
		label_maSinhVienUnder.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_maSinhVienUnder.setBounds(26, 355, 110, 42);
		contentPane.add(label_maSinhVienUnder);
		
		JLabel label_hoTenUnder = new JLabel("Họ tên");
		label_hoTenUnder.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_hoTenUnder.setBounds(26, 422, 110, 42);
		contentPane.add(label_hoTenUnder);
		
		JLabel label_queQuanUnder = new JLabel("Quê quán");
		label_queQuanUnder.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_queQuanUnder.setBounds(26, 489, 110, 42);
		contentPane.add(label_queQuanUnder);
		
		JLabel label_ngaySinhUnder = new JLabel("Ngày sinh");
		label_ngaySinhUnder.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_ngaySinhUnder.setBounds(26, 556, 110, 42);
		contentPane.add(label_ngaySinhUnder);
		
		textField_maSVUnder = new JTextField();
		textField_maSVUnder.setColumns(10);
		textField_maSVUnder.setBounds(161, 355, 170, 43);
		contentPane.add(textField_maSVUnder);
		
		textField_hoTen = new JTextField();
		textField_hoTen.setColumns(10);
		textField_hoTen.setBounds(161, 422, 170, 43);
		contentPane.add(textField_hoTen);
		
		textField_ngaySinh = new JTextField();
		textField_ngaySinh.setColumns(10);
		textField_ngaySinh.setBounds(161, 556, 170, 43);
		contentPane.add(textField_ngaySinh);
		
		JLabel label_gioiTinhUnder = new JLabel("Giới tính");
		label_gioiTinhUnder.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_gioiTinhUnder.setBounds(426, 355, 110, 42);
		contentPane.add(label_gioiTinhUnder);
		
		JLabel label_diem1Under = new JLabel("Điểm 1");
		label_diem1Under.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_diem1Under.setBounds(426, 422, 110, 42);
		contentPane.add(label_diem1Under);
		
		JLabel label_diem2Under = new JLabel("Điểm 2");
		label_diem2Under.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_diem2Under.setBounds(426, 489, 110, 42);
		contentPane.add(label_diem2Under);
		
		JLabel label_diem3Under = new JLabel("Điểm 3");
		label_diem3Under.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_diem3Under.setBounds(426, 556, 110, 42);
		contentPane.add(label_diem3Under);
		
		textField_diem1 = new JTextField();
		textField_diem1.setColumns(10);
		textField_diem1.setBounds(562, 422, 170, 43);
		contentPane.add(textField_diem1);
		
		textField_diem2 = new JTextField();
		textField_diem2.setColumns(10);
		textField_diem2.setBounds(562, 489, 170, 43);
		contentPane.add(textField_diem2);
		
		textField_diem3 = new JTextField();
		textField_diem3.setColumns(10);
		textField_diem3.setBounds(562, 556, 170, 43);
		contentPane.add(textField_diem3);
		
		rdbtn_nam = new JRadioButton("Nam");
		rdbtn_nam.setFont(new Font("Tahoma", Font.PLAIN, 20));
		rdbtn_nam.setBounds(562, 355, 71, 42);
		contentPane.add(rdbtn_nam);
		rdbtn_nam.setSelected(true);
		
		rdbtn_nu = new JRadioButton("Nữ");
		rdbtn_nu.setFont(new Font("Tahoma", Font.PLAIN, 20));
		rdbtn_nu.setBounds(647, 355, 71, 42);
		contentPane.add(rdbtn_nu);
		
		btngr = new ButtonGroup();
		btngr.add(rdbtn_nam);
		btngr.add(rdbtn_nu);
		
		ActionListener listener = new Listener(this);
		
		JButton btn_them = new JButton("Thêm");
		btn_them.addActionListener(listener);
		btn_them.setFont(new Font("Tahoma", Font.PLAIN, 20));
		btn_them.setBounds(21, 633, 127, 43);
		contentPane.add(btn_them);
		
		JButton btn_xoa = new JButton("Xóa");
		btn_xoa.addActionListener(listener);
		btn_xoa.setFont(new Font("Tahoma", Font.PLAIN, 20));
		btn_xoa.setBounds(595, 633, 127, 43);
		contentPane.add(btn_xoa);
		
		JButton btn_capNhat = new JButton("Cập nhật");
		btn_capNhat.addActionListener(listener);
		btn_capNhat.setFont(new Font("Tahoma", Font.PLAIN, 20));
		btn_capNhat.setBounds(215, 633, 127, 43);
		contentPane.add(btn_capNhat);
		
		JButton btn_luu = new JButton("Lưu");
		btn_luu.addActionListener(listener);
		btn_luu.setFont(new Font("Tahoma", Font.PLAIN, 20));
		btn_luu.setBounds(409, 633, 127, 43);
		contentPane.add(btn_luu);
		
		JSeparator separator_1_1 = new JSeparator();
		separator_1_1.setBounds(10, 615, 728, 2);
		contentPane.add(separator_1_1);
		
		comboBox_queQuanUnder = new JComboBox();
		comboBox_queQuanUnder.addItem("");
		for (Tinh tinh : listTinh) {
			comboBox_queQuanUnder.addItem(tinh.getTenTinh());
		}
		comboBox_queQuanUnder.setBounds(161, 488, 170, 43);
		contentPane.add(comboBox_queQuanUnder);
	}

	public void xoaForm() {
		textField_maSV.setText("");
		textField_maSVUnder.setText("");
		textField_hoTen.setText("");
		textField_ngaySinh.setText("");
		textField_diem1.setText("");
		textField_diem2.setText("");
		textField_diem3.setText("");
		comboBox_queQuanUnder.setSelectedIndex(-1);
		btngr.clearSelection();
	}

	public void themHoacCapNhatSV(SinhVien sv) {
		DefaultTableModel defaultTableModel = (DefaultTableModel) table.getModel();
		if (!this.model.kiemTraTonTai(sv)) {
			this.model.addSV(sv);
			defaultTableModel.addRow(new Object[]{
													sv.getMaSinhVien()+"", 
													sv.getTenSinhVien(),
													sv.getQueQuan().getTenTinh(),
													sv.getNgaySinh().getDate()+"/"+(sv.getNgaySinh().getMonth() + 1)+"/"+(sv.getNgaySinh().getYear()+1900),
													sv.isGioiTinh() ? "Nam" : "Nữ",
													sv.getDiemMon1()+"",
													sv.getDiemMon2()+"",
													sv.getDiemMon3()+""});
		}
		else {
			this.model.update(sv);
			int soDong = defaultTableModel.getRowCount();
			for (int i = 0; i < soDong; i++) {
				String id = defaultTableModel.getValueAt(soDong, 0)+"";
				if (id.equals(sv.getMaSinhVien()+"")) {
					defaultTableModel.getValueAt(sv.getMaSinhVien()+"", i, 0);
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
				}
			}
		}
	}

	public void hienThiThongTinSinhVienDangDuocChon() {
		DefaultTableModel defaultTableModel = (DefaultTableModel) table.getModel();
		int row = table.getSelectedRow();
		
		int maSV = Integer.valueOf(defaultTableModel.getValueAt(row, 0)+"");
		String tenSV = defaultTableModel.getValueAt(row, 1)+"";
		Tinh tinh = Tinh.getTinhByTen(defaultTableModel.getValueAt(row, 2)+"");
		String ngaySinh = defaultTableModel.getValueAt(row, 3)+"";
		String textGioiTinh = defaultTableModel.getValueAt(row, 4)+"";
		boolean gioiTinh = textGioiTinh.equals("Nam");
		float diemMon1 = Float.valueOf(defaultTableModel.getValueAt(row, 5)+"");
		float diemMon2 = Float.valueOf(defaultTableModel.getValueAt(row, 6)+"");
		float diemMon3 = Float.valueOf(defaultTableModel.getValueAt(row, 7)+"");
		
		this.textField_maSVUnder.setText(maSV+"");
		this.textField_hoTen.setText(tenSV+"");
		this.comboBox_queQuan.setSelectedItem(tinh.getTenTinh()+"");
		this.textField_ngaySinh.setText(ngaySinh+"");
		if (gioiTinh) {
			rdbtn_nam.setSelected(true);
		} else {
			rdbtn_nu.setSelected(false);
		}
		this.textField_diem1.setText(diemMon1+"");
		this.textField_diem2.setText(diemMon2+"");
		this.textField_diem3.setText(diemMon3+"");
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3063)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredASTNode(JavadocHover.java:1003)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getInfoText(JavadocHover.java:799)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:743)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:666)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:658)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-03-14 23:38:32.270
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3063)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredASTNode(JavadocHover.java:1003)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getInfoText(JavadocHover.java:799)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:743)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:666)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:658)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-03-14 23:38:32.271
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3063)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredASTNode(JavadocHover.java:1003)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getInfoText(JavadocHover.java:799)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:743)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:666)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:658)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core 4 4 2023-03-14 23:38:33.008
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package View;

import java.awt.EventQueue;

import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.border.EmptyBorder;

import Model.QLSV_model;
import Model.SinhVien;
import Model.Tinh;

import javax.swing.JMenuBar;
import javax.swing.JMenu;
import javax.swing.JMenuItem;
import javax.swing.JSeparator;
import javax.swing.JLabel;
import java.awt.Font;
import javax.swing.JScrollPane;
import javax.swing.JComboBox;
import javax.swing.JTextField;
import javax.swing.ButtonGroup;
import javax.swing.JButton;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

import Controller.Listener;

import javax.swing.JRadioButton;
import java.awt.event.ActionListener;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.awt.event.ActionEvent;

public class view_QLSV extends JFrame {

	private JPanel contentPane;
	public QLSV_model model;
	private JTextField textField_maSV;
	private JTable table;
	public JTextField textField_maSVUnder;
	public JTextField textField_hoTen;
	public JTextField textField_ngaySinh;
	public JTextField textField_diem1;
	public JTextField textField_diem2;
	public JTextField textField_diem3;
	public JComboBox comboBox_queQuanUnder;
	private JComboBox comboBox_queQuan;
	public ButtonGroup btngr;
	public JRadioButton rdbtn_nam;
	public JRadioButton rdbtn_nu;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					view_QLSV frame = new view_QLSV();
					frame.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the frame.
	 */
	public view_QLSV() {
		model = new QLSV_model();
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setBounds(100, 100, 757, 759);
		setTitle("Chương trình quản lý sinh viên của Trần Phúc Khánh");
		
		JMenuBar menuBar = new JMenuBar();
		setJMenuBar(menuBar);
		
		JMenu menu_file = new JMenu("File");
		menuBar.add(menu_file);
		
		JMenuItem menuItem_open = new JMenuItem("Open");
		menu_file.add(menuItem_open);
		
		JMenuItem mntmClose = new JMenuItem("Close");
		menu_file.add(mntmClose);
		
		JSeparator separator = new JSeparator();
		menu_file.add(separator);
		
		JMenuItem menuItem_exit = new JMenuItem("Exit");
		menu_file.add(menuItem_exit);
		
		JMenu menu_about = new JMenu("About");
		menuBar.add(menu_about);
		
		JMenuItem menuItem_about_me = new JMenuItem("About me");
		menu_about.add(menuItem_about_me);
		contentPane = new JPanel();
		contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));

		setContentPane(contentPane);
		contentPane.setLayout(null);
		
		JLabel label_queQuan = new JLabel("Quê quán");
		label_queQuan.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_queQuan.setBounds(47, 40, 86, 42);
		contentPane.add(label_queQuan);
		
		comboBox_queQuan = new JComboBox();
		ArrayList<Tinh> listTinh = Tinh.getDS_Tinh();
		comboBox_queQuan.addItem("");
		for (Tinh tinh : listTinh) {
			comboBox_queQuan.addItem(tinh.getTenTinh());
		}
		comboBox_queQuan.setFont(new Font("Tahoma", Font.PLAIN, 15));
		comboBox_queQuan.setBounds(140, 40, 102, 43);
		contentPane.add(comboBox_queQuan);
		
		JLabel label_maSinhVien = new JLabel("Mã sinh viên");
		label_maSinhVien.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_maSinhVien.setBounds(306, 40, 110, 42);
		contentPane.add(label_maSinhVien);
		
		textField_maSV = new JTextField();
		textField_maSV.setBounds(426, 40, 102, 43);
		contentPane.add(textField_maSV);
		textField_maSV.setColumns(10);
		
		JButton button_timKiem = new JButton("Tìm kiếm");
		button_timKiem.setFont(new Font("Tahoma", Font.PLAIN, 20));
		button_timKiem.setBounds(591, 40, 127, 43);
		contentPane.add(button_timKiem);
		
		JSeparator separator_1 = new JSeparator();
		separator_1.setBounds(10, 102, 728, 2);
		contentPane.add(separator_1);
		
		JLabel label_danhSachSV = new JLabel("Danh sách SV");
		label_danhSachSV.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_danhSachSV.setBounds(26, 127, 122, 42);
		contentPane.add(label_danhSachSV);
		
		table = new JTable();
		table.setFont(new Font("Tahoma", Font.PLAIN, 10));
		table.setModel(new DefaultTableModel(
			new Object[][] {
			},
			new String[] {
				"Mã SV", "Họ tên", "Quê quán", "Ngày sinh", "Giới tính", "Điểm môn 1", "Điểm môn 2", "Điểm môn 3"
			}
		));
		
		JScrollPane scrollPane = new JScrollPane(table);
		scrollPane.setBounds(26, 179, 696, 92);
		contentPane.add(scrollPane);
		
		JLabel label_thongTinSV = new JLabel("Thông tin SV");
		label_thongTinSV.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_thongTinSV.setBounds(26, 303, 115, 42);
		contentPane.add(label_thongTinSV);
		
		JSeparator separator_2 = new JSeparator();
		separator_2.setBounds(10, 291, 728, 2);
		contentPane.add(separator_2);
		
		JLabel label_maSinhVienUnder = new JLabel("Mã sinh viên");
		label_maSinhVienUnder.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_maSinhVienUnder.setBounds(26, 355, 110, 42);
		contentPane.add(label_maSinhVienUnder);
		
		JLabel label_hoTenUnder = new JLabel("Họ tên");
		label_hoTenUnder.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_hoTenUnder.setBounds(26, 422, 110, 42);
		contentPane.add(label_hoTenUnder);
		
		JLabel label_queQuanUnder = new JLabel("Quê quán");
		label_queQuanUnder.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_queQuanUnder.setBounds(26, 489, 110, 42);
		contentPane.add(label_queQuanUnder);
		
		JLabel label_ngaySinhUnder = new JLabel("Ngày sinh");
		label_ngaySinhUnder.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_ngaySinhUnder.setBounds(26, 556, 110, 42);
		contentPane.add(label_ngaySinhUnder);
		
		textField_maSVUnder = new JTextField();
		textField_maSVUnder.setColumns(10);
		textField_maSVUnder.setBounds(161, 355, 170, 43);
		contentPane.add(textField_maSVUnder);
		
		textField_hoTen = new JTextField();
		textField_hoTen.setColumns(10);
		textField_hoTen.setBounds(161, 422, 170, 43);
		contentPane.add(textField_hoTen);
		
		textField_ngaySinh = new JTextField();
		textField_ngaySinh.setColumns(10);
		textField_ngaySinh.setBounds(161, 556, 170, 43);
		contentPane.add(textField_ngaySinh);
		
		JLabel label_gioiTinhUnder = new JLabel("Giới tính");
		label_gioiTinhUnder.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_gioiTinhUnder.setBounds(426, 355, 110, 42);
		contentPane.add(label_gioiTinhUnder);
		
		JLabel label_diem1Under = new JLabel("Điểm 1");
		label_diem1Under.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_diem1Under.setBounds(426, 422, 110, 42);
		contentPane.add(label_diem1Under);
		
		JLabel label_diem2Under = new JLabel("Điểm 2");
		label_diem2Under.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_diem2Under.setBounds(426, 489, 110, 42);
		contentPane.add(label_diem2Under);
		
		JLabel label_diem3Under = new JLabel("Điểm 3");
		label_diem3Under.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_diem3Under.setBounds(426, 556, 110, 42);
		contentPane.add(label_diem3Under);
		
		textField_diem1 = new JTextField();
		textField_diem1.setColumns(10);
		textField_diem1.setBounds(562, 422, 170, 43);
		contentPane.add(textField_diem1);
		
		textField_diem2 = new JTextField();
		textField_diem2.setColumns(10);
		textField_diem2.setBounds(562, 489, 170, 43);
		contentPane.add(textField_diem2);
		
		textField_diem3 = new JTextField();
		textField_diem3.setColumns(10);
		textField_diem3.setBounds(562, 556, 170, 43);
		contentPane.add(textField_diem3);
		
		rdbtn_nam = new JRadioButton("Nam");
		rdbtn_nam.setFont(new Font("Tahoma", Font.PLAIN, 20));
		rdbtn_nam.setBounds(562, 355, 71, 42);
		contentPane.add(rdbtn_nam);
		rdbtn_nam.setSelected(true);
		
		rdbtn_nu = new JRadioButton("Nữ");
		rdbtn_nu.setFont(new Font("Tahoma", Font.PLAIN, 20));
		rdbtn_nu.setBounds(647, 355, 71, 42);
		contentPane.add(rdbtn_nu);
		
		btngr = new ButtonGroup();
		btngr.add(rdbtn_nam);
		btngr.add(rdbtn_nu);
		
		ActionListener listener = new Listener(this);
		
		JButton btn_them = new JButton("Thêm");
		btn_them.addActionListener(listener);
		btn_them.setFont(new Font("Tahoma", Font.PLAIN, 20));
		btn_them.setBounds(21, 633, 127, 43);
		contentPane.add(btn_them);
		
		JButton btn_xoa = new JButton("Xóa");
		btn_xoa.addActionListener(listener);
		btn_xoa.setFont(new Font("Tahoma", Font.PLAIN, 20));
		btn_xoa.setBounds(595, 633, 127, 43);
		contentPane.add(btn_xoa);
		
		JButton btn_capNhat = new JButton("Cập nhật");
		btn_capNhat.addActionListener(listener);
		btn_capNhat.setFont(new Font("Tahoma", Font.PLAIN, 20));
		btn_capNhat.setBounds(215, 633, 127, 43);
		contentPane.add(btn_capNhat);
		
		JButton btn_luu = new JButton("Lưu");
		btn_luu.addActionListener(listener);
		btn_luu.setFont(new Font("Tahoma", Font.PLAIN, 20));
		btn_luu.setBounds(409, 633, 127, 43);
		contentPane.add(btn_luu);
		
		JSeparator separator_1_1 = new JSeparator();
		separator_1_1.setBounds(10, 615, 728, 2);
		contentPane.add(separator_1_1);
		
		comboBox_queQuanUnder = new JComboBox();
		comboBox_queQuanUnder.addItem("");
		for (Tinh tinh : listTinh) {
			comboBox_queQuanUnder.addItem(tinh.getTenTinh());
		}
		comboBox_queQuanUnder.setBounds(161, 488, 170, 43);
		contentPane.add(comboBox_queQuanUnder);
	}

	public void xoaForm() {
		textField_maSV.setText("");
		textField_maSVUnder.setText("");
		textField_hoTen.setText("");
		textField_ngaySinh.setText("");
		textField_diem1.setText("");
		textField_diem2.setText("");
		textField_diem3.setText("");
		comboBox_queQuanUnder.setSelectedIndex(-1);
		btngr.clearSelection();
	}

	public void themHoacCapNhatSV(SinhVien sv) {
		DefaultTableModel defaultTableModel = (DefaultTableModel) table.getModel();
		if (!this.model.kiemTraTonTai(sv)) {
			this.model.addSV(sv);
			defaultTableModel.addRow(new Object[]{
													sv.getMaSinhVien()+"", 
													sv.getTenSinhVien(),
													sv.getQueQuan().getTenTinh(),
													sv.getNgaySinh().getDate()+"/"+(sv.getNgaySinh().getMonth() + 1)+"/"+(sv.getNgaySinh().getYear()+1900),
													sv.isGioiTinh() ? "Nam" : "Nữ",
													sv.getDiemMon1()+"",
													sv.getDiemMon2()+"",
													sv.getDiemMon3()+""});
		}
		else {
			this.model.update(sv);
			int soDong = defaultTableModel.getRowCount();
			for (int i = 0; i < soDong; i++) {
				String id = defaultTableModel.getValueAt(soDong, 0)+"";
				if (id.equals(sv.getMaSinhVien()+"")) {
					defaultTableModel.getValueAt(sv.getMaSinhVien()+"", i, 0);
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
				}
			}
		}
	}

	public void hienThiThongTinSinhVienDangDuocChon() {
		DefaultTableModel defaultTableModel = (DefaultTableModel) table.getModel();
		int row = table.getSelectedRow();
		
		int maSV = Integer.valueOf(defaultTableModel.getValueAt(row, 0)+"");
		String tenSV = defaultTableModel.getValueAt(row, 1)+"";
		Tinh tinh = Tinh.getTinhByTen(defaultTableModel.getValueAt(row, 2)+"");
		String ngaySinh = defaultTableModel.getValueAt(row, 3)+"";
		String textGioiTinh = defaultTableModel.getValueAt(row, 4)+"";
		boolean gioiTinh = textGioiTinh.equals("Nam");
		float diemMon1 = Float.valueOf(defaultTableModel.getValueAt(row, 5)+"");
		float diemMon2 = Float.valueOf(defaultTableModel.getValueAt(row, 6)+"");
		float diemMon3 = Float.valueOf(defaultTableModel.getValueAt(row, 7)+"");
		
		this.textField_maSVUnder.setText(maSV+"");
		this.textField_hoTen.setText(tenSV+"");
		this.comboBox_queQuan.setSelectedItem(tinh.getTenTinh()+"");
		this.textField_ngaySinh.setText(ngaySinh+"");
		if (gioiTinh) {
			rdbtn_nam.setSelected(true);
		} else {
			rdbtn_nu.setSelected(false);
		}
		this.textField_diem1.setText(diemMon1+"");
		this.textField_diem2.setText(diemMon2+"");
		this.textField_diem3.setText(diemMon3+"");
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3063)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-03-14 23:38:33.009
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3063)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-03-14 23:38:33.010
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3063)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2023-03-14 23:38:33.467
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package View;

import java.awt.EventQueue;

import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.border.EmptyBorder;

import Model.QLSV_model;
import Model.SinhVien;
import Model.Tinh;

import javax.swing.JMenuBar;
import javax.swing.JMenu;
import javax.swing.JMenuItem;
import javax.swing.JSeparator;
import javax.swing.JLabel;
import java.awt.Font;
import javax.swing.JScrollPane;
import javax.swing.JComboBox;
import javax.swing.JTextField;
import javax.swing.ButtonGroup;
import javax.swing.JButton;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

import Controller.Listener;

import javax.swing.JRadioButton;
import java.awt.event.ActionListener;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.awt.event.ActionEvent;

public class view_QLSV extends JFrame {

	private JPanel contentPane;
	public QLSV_model model;
	private JTextField textField_maSV;
	private JTable table;
	public JTextField textField_maSVUnder;
	public JTextField textField_hoTen;
	public JTextField textField_ngaySinh;
	public JTextField textField_diem1;
	public JTextField textField_diem2;
	public JTextField textField_diem3;
	public JComboBox comboBox_queQuanUnder;
	private JComboBox comboBox_queQuan;
	public ButtonGroup btngr;
	public JRadioButton rdbtn_nam;
	public JRadioButton rdbtn_nu;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					view_QLSV frame = new view_QLSV();
					frame.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the frame.
	 */
	public view_QLSV() {
		model = new QLSV_model();
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setBounds(100, 100, 757, 759);
		setTitle("Chương trình quản lý sinh viên của Trần Phúc Khánh");
		
		JMenuBar menuBar = new JMenuBar();
		setJMenuBar(menuBar);
		
		JMenu menu_file = new JMenu("File");
		menuBar.add(menu_file);
		
		JMenuItem menuItem_open = new JMenuItem("Open");
		menu_file.add(menuItem_open);
		
		JMenuItem mntmClose = new JMenuItem("Close");
		menu_file.add(mntmClose);
		
		JSeparator separator = new JSeparator();
		menu_file.add(separator);
		
		JMenuItem menuItem_exit = new JMenuItem("Exit");
		menu_file.add(menuItem_exit);
		
		JMenu menu_about = new JMenu("About");
		menuBar.add(menu_about);
		
		JMenuItem menuItem_about_me = new JMenuItem("About me");
		menu_about.add(menuItem_about_me);
		contentPane = new JPanel();
		contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));

		setContentPane(contentPane);
		contentPane.setLayout(null);
		
		JLabel label_queQuan = new JLabel("Quê quán");
		label_queQuan.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_queQuan.setBounds(47, 40, 86, 42);
		contentPane.add(label_queQuan);
		
		comboBox_queQuan = new JComboBox();
		ArrayList<Tinh> listTinh = Tinh.getDS_Tinh();
		comboBox_queQuan.addItem("");
		for (Tinh tinh : listTinh) {
			comboBox_queQuan.addItem(tinh.getTenTinh());
		}
		comboBox_queQuan.setFont(new Font("Tahoma", Font.PLAIN, 15));
		comboBox_queQuan.setBounds(140, 40, 102, 43);
		contentPane.add(comboBox_queQuan);
		
		JLabel label_maSinhVien = new JLabel("Mã sinh viên");
		label_maSinhVien.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_maSinhVien.setBounds(306, 40, 110, 42);
		contentPane.add(label_maSinhVien);
		
		textField_maSV = new JTextField();
		textField_maSV.setBounds(426, 40, 102, 43);
		contentPane.add(textField_maSV);
		textField_maSV.setColumns(10);
		
		JButton button_timKiem = new JButton("Tìm kiếm");
		button_timKiem.setFont(new Font("Tahoma", Font.PLAIN, 20));
		button_timKiem.setBounds(591, 40, 127, 43);
		contentPane.add(button_timKiem);
		
		JSeparator separator_1 = new JSeparator();
		separator_1.setBounds(10, 102, 728, 2);
		contentPane.add(separator_1);
		
		JLabel label_danhSachSV = new JLabel("Danh sách SV");
		label_danhSachSV.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_danhSachSV.setBounds(26, 127, 122, 42);
		contentPane.add(label_danhSachSV);
		
		table = new JTable();
		table.setFont(new Font("Tahoma", Font.PLAIN, 10));
		table.setModel(new DefaultTableModel(
			new Object[][] {
			},
			new String[] {
				"Mã SV", "Họ tên", "Quê quán", "Ngày sinh", "Giới tính", "Điểm môn 1", "Điểm môn 2", "Điểm môn 3"
			}
		));
		
		JScrollPane scrollPane = new JScrollPane(table);
		scrollPane.setBounds(26, 179, 696, 92);
		contentPane.add(scrollPane);
		
		JLabel label_thongTinSV = new JLabel("Thông tin SV");
		label_thongTinSV.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_thongTinSV.setBounds(26, 303, 115, 42);
		contentPane.add(label_thongTinSV);
		
		JSeparator separator_2 = new JSeparator();
		separator_2.setBounds(10, 291, 728, 2);
		contentPane.add(separator_2);
		
		JLabel label_maSinhVienUnder = new JLabel("Mã sinh viên");
		label_maSinhVienUnder.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_maSinhVienUnder.setBounds(26, 355, 110, 42);
		contentPane.add(label_maSinhVienUnder);
		
		JLabel label_hoTenUnder = new JLabel("Họ tên");
		label_hoTenUnder.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_hoTenUnder.setBounds(26, 422, 110, 42);
		contentPane.add(label_hoTenUnder);
		
		JLabel label_queQuanUnder = new JLabel("Quê quán");
		label_queQuanUnder.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_queQuanUnder.setBounds(26, 489, 110, 42);
		contentPane.add(label_queQuanUnder);
		
		JLabel label_ngaySinhUnder = new JLabel("Ngày sinh");
		label_ngaySinhUnder.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_ngaySinhUnder.setBounds(26, 556, 110, 42);
		contentPane.add(label_ngaySinhUnder);
		
		textField_maSVUnder = new JTextField();
		textField_maSVUnder.setColumns(10);
		textField_maSVUnder.setBounds(161, 355, 170, 43);
		contentPane.add(textField_maSVUnder);
		
		textField_hoTen = new JTextField();
		textField_hoTen.setColumns(10);
		textField_hoTen.setBounds(161, 422, 170, 43);
		contentPane.add(textField_hoTen);
		
		textField_ngaySinh = new JTextField();
		textField_ngaySinh.setColumns(10);
		textField_ngaySinh.setBounds(161, 556, 170, 43);
		contentPane.add(textField_ngaySinh);
		
		JLabel label_gioiTinhUnder = new JLabel("Giới tính");
		label_gioiTinhUnder.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_gioiTinhUnder.setBounds(426, 355, 110, 42);
		contentPane.add(label_gioiTinhUnder);
		
		JLabel label_diem1Under = new JLabel("Điểm 1");
		label_diem1Under.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_diem1Under.setBounds(426, 422, 110, 42);
		contentPane.add(label_diem1Under);
		
		JLabel label_diem2Under = new JLabel("Điểm 2");
		label_diem2Under.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_diem2Under.setBounds(426, 489, 110, 42);
		contentPane.add(label_diem2Under);
		
		JLabel label_diem3Under = new JLabel("Điểm 3");
		label_diem3Under.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_diem3Under.setBounds(426, 556, 110, 42);
		contentPane.add(label_diem3Under);
		
		textField_diem1 = new JTextField();
		textField_diem1.setColumns(10);
		textField_diem1.setBounds(562, 422, 170, 43);
		contentPane.add(textField_diem1);
		
		textField_diem2 = new JTextField();
		textField_diem2.setColumns(10);
		textField_diem2.setBounds(562, 489, 170, 43);
		contentPane.add(textField_diem2);
		
		textField_diem3 = new JTextField();
		textField_diem3.setColumns(10);
		textField_diem3.setBounds(562, 556, 170, 43);
		contentPane.add(textField_diem3);
		
		rdbtn_nam = new JRadioButton("Nam");
		rdbtn_nam.setFont(new Font("Tahoma", Font.PLAIN, 20));
		rdbtn_nam.setBounds(562, 355, 71, 42);
		contentPane.add(rdbtn_nam);
		rdbtn_nam.setSelected(true);
		
		rdbtn_nu = new JRadioButton("Nữ");
		rdbtn_nu.setFont(new Font("Tahoma", Font.PLAIN, 20));
		rdbtn_nu.setBounds(647, 355, 71, 42);
		contentPane.add(rdbtn_nu);
		
		btngr = new ButtonGroup();
		btngr.add(rdbtn_nam);
		btngr.add(rdbtn_nu);
		
		ActionListener listener = new Listener(this);
		
		JButton btn_them = new JButton("Thêm");
		btn_them.addActionListener(listener);
		btn_them.setFont(new Font("Tahoma", Font.PLAIN, 20));
		btn_them.setBounds(21, 633, 127, 43);
		contentPane.add(btn_them);
		
		JButton btn_xoa = new JButton("Xóa");
		btn_xoa.addActionListener(listener);
		btn_xoa.setFont(new Font("Tahoma", Font.PLAIN, 20));
		btn_xoa.setBounds(595, 633, 127, 43);
		contentPane.add(btn_xoa);
		
		JButton btn_capNhat = new JButton("Cập nhật");
		btn_capNhat.addActionListener(listener);
		btn_capNhat.setFont(new Font("Tahoma", Font.PLAIN, 20));
		btn_capNhat.setBounds(215, 633, 127, 43);
		contentPane.add(btn_capNhat);
		
		JButton btn_luu = new JButton("Lưu");
		btn_luu.addActionListener(listener);
		btn_luu.setFont(new Font("Tahoma", Font.PLAIN, 20));
		btn_luu.setBounds(409, 633, 127, 43);
		contentPane.add(btn_luu);
		
		JSeparator separator_1_1 = new JSeparator();
		separator_1_1.setBounds(10, 615, 728, 2);
		contentPane.add(separator_1_1);
		
		comboBox_queQuanUnder = new JComboBox();
		comboBox_queQuanUnder.addItem("");
		for (Tinh tinh : listTinh) {
			comboBox_queQuanUnder.addItem(tinh.getTenTinh());
		}
		comboBox_queQuanUnder.setBounds(161, 488, 170, 43);
		contentPane.add(comboBox_queQuanUnder);
	}

	public void xoaForm() {
		textField_maSV.setText("");
		textField_maSVUnder.setText("");
		textField_hoTen.setText("");
		textField_ngaySinh.setText("");
		textField_diem1.setText("");
		textField_diem2.setText("");
		textField_diem3.setText("");
		comboBox_queQuanUnder.setSelectedIndex(-1);
		btngr.clearSelection();
	}

	public void themHoacCapNhatSV(SinhVien sv) {
		DefaultTableModel defaultTableModel = (DefaultTableModel) table.getModel();
		if (!this.model.kiemTraTonTai(sv)) {
			this.model.addSV(sv);
			defaultTableModel.addRow(new Object[]{
													sv.getMaSinhVien()+"", 
													sv.getTenSinhVien(),
													sv.getQueQuan().getTenTinh(),
													sv.getNgaySinh().getDate()+"/"+(sv.getNgaySinh().getMonth() + 1)+"/"+(sv.getNgaySinh().getYear()+1900),
													sv.isGioiTinh() ? "Nam" : "Nữ",
													sv.getDiemMon1()+"",
													sv.getDiemMon2()+"",
													sv.getDiemMon3()+""});
		}
		else {
			this.model.update(sv);
			int soDong = defaultTableModel.getRowCount();
			for (int i = 0; i < soDong; i++) {
				String id = defaultTableModel.getValueAt(soDong, 0)+"";
				if (id.equals(sv.getMaSinhVien()+"")) {
					defaultTableModel.getValueAt(sv.getMaSinhVien()+"", i, 0);
					defaultTableModel.getValueAt(s, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
				}
			}
		}
	}

	public void hienThiThongTinSinhVienDangDuocChon() {
		DefaultTableModel defaultTableModel = (DefaultTableModel) table.getModel();
		int row = table.getSelectedRow();
		
		int maSV = Integer.valueOf(defaultTableModel.getValueAt(row, 0)+"");
		String tenSV = defaultTableModel.getValueAt(row, 1)+"";
		Tinh tinh = Tinh.getTinhByTen(defaultTableModel.getValueAt(row, 2)+"");
		String ngaySinh = defaultTableModel.getValueAt(row, 3)+"";
		String textGioiTinh = defaultTableModel.getValueAt(row, 4)+"";
		boolean gioiTinh = textGioiTinh.equals("Nam");
		float diemMon1 = Float.valueOf(defaultTableModel.getValueAt(row, 5)+"");
		float diemMon2 = Float.valueOf(defaultTableModel.getValueAt(row, 6)+"");
		float diemMon3 = Float.valueOf(defaultTableModel.getValueAt(row, 7)+"");
		
		this.textField_maSVUnder.setText(maSV+"");
		this.textField_hoTen.setText(tenSV+"");
		this.comboBox_queQuan.setSelectedItem(tinh.getTenTinh()+"");
		this.textField_ngaySinh.setText(ngaySinh+"");
		if (gioiTinh) {
			rdbtn_nam.setSelected(true);
		} else {
			rdbtn_nu.setSelected(false);
		}
		this.textField_diem1.setText(diemMon1+"");
		this.textField_diem2.setText(diemMon2+"");
		this.textField_diem3.setText(diemMon3+"");
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3063)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:561)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2023-03-14 23:38:33.468
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3063)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:561)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2023-03-14 23:38:33.468
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3063)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:561)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2023-03-14 23:38:33.486
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package View;

import java.awt.EventQueue;

import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.border.EmptyBorder;

import Model.QLSV_model;
import Model.SinhVien;
import Model.Tinh;

import javax.swing.JMenuBar;
import javax.swing.JMenu;
import javax.swing.JMenuItem;
import javax.swing.JSeparator;
import javax.swing.JLabel;
import java.awt.Font;
import javax.swing.JScrollPane;
import javax.swing.JComboBox;
import javax.swing.JTextField;
import javax.swing.ButtonGroup;
import javax.swing.JButton;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

import Controller.Listener;

import javax.swing.JRadioButton;
import java.awt.event.ActionListener;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.awt.event.ActionEvent;

public class view_QLSV extends JFrame {

	private JPanel contentPane;
	public QLSV_model model;
	private JTextField textField_maSV;
	private JTable table;
	public JTextField textField_maSVUnder;
	public JTextField textField_hoTen;
	public JTextField textField_ngaySinh;
	public JTextField textField_diem1;
	public JTextField textField_diem2;
	public JTextField textField_diem3;
	public JComboBox comboBox_queQuanUnder;
	private JComboBox comboBox_queQuan;
	public ButtonGroup btngr;
	public JRadioButton rdbtn_nam;
	public JRadioButton rdbtn_nu;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					view_QLSV frame = new view_QLSV();
					frame.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the frame.
	 */
	public view_QLSV() {
		model = new QLSV_model();
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setBounds(100, 100, 757, 759);
		setTitle("Chương trình quản lý sinh viên của Trần Phúc Khánh");
		
		JMenuBar menuBar = new JMenuBar();
		setJMenuBar(menuBar);
		
		JMenu menu_file = new JMenu("File");
		menuBar.add(menu_file);
		
		JMenuItem menuItem_open = new JMenuItem("Open");
		menu_file.add(menuItem_open);
		
		JMenuItem mntmClose = new JMenuItem("Close");
		menu_file.add(mntmClose);
		
		JSeparator separator = new JSeparator();
		menu_file.add(separator);
		
		JMenuItem menuItem_exit = new JMenuItem("Exit");
		menu_file.add(menuItem_exit);
		
		JMenu menu_about = new JMenu("About");
		menuBar.add(menu_about);
		
		JMenuItem menuItem_about_me = new JMenuItem("About me");
		menu_about.add(menuItem_about_me);
		contentPane = new JPanel();
		contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));

		setContentPane(contentPane);
		contentPane.setLayout(null);
		
		JLabel label_queQuan = new JLabel("Quê quán");
		label_queQuan.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_queQuan.setBounds(47, 40, 86, 42);
		contentPane.add(label_queQuan);
		
		comboBox_queQuan = new JComboBox();
		ArrayList<Tinh> listTinh = Tinh.getDS_Tinh();
		comboBox_queQuan.addItem("");
		for (Tinh tinh : listTinh) {
			comboBox_queQuan.addItem(tinh.getTenTinh());
		}
		comboBox_queQuan.setFont(new Font("Tahoma", Font.PLAIN, 15));
		comboBox_queQuan.setBounds(140, 40, 102, 43);
		contentPane.add(comboBox_queQuan);
		
		JLabel label_maSinhVien = new JLabel("Mã sinh viên");
		label_maSinhVien.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_maSinhVien.setBounds(306, 40, 110, 42);
		contentPane.add(label_maSinhVien);
		
		textField_maSV = new JTextField();
		textField_maSV.setBounds(426, 40, 102, 43);
		contentPane.add(textField_maSV);
		textField_maSV.setColumns(10);
		
		JButton button_timKiem = new JButton("Tìm kiếm");
		button_timKiem.setFont(new Font("Tahoma", Font.PLAIN, 20));
		button_timKiem.setBounds(591, 40, 127, 43);
		contentPane.add(button_timKiem);
		
		JSeparator separator_1 = new JSeparator();
		separator_1.setBounds(10, 102, 728, 2);
		contentPane.add(separator_1);
		
		JLabel label_danhSachSV = new JLabel("Danh sách SV");
		label_danhSachSV.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_danhSachSV.setBounds(26, 127, 122, 42);
		contentPane.add(label_danhSachSV);
		
		table = new JTable();
		table.setFont(new Font("Tahoma", Font.PLAIN, 10));
		table.setModel(new DefaultTableModel(
			new Object[][] {
			},
			new String[] {
				"Mã SV", "Họ tên", "Quê quán", "Ngày sinh", "Giới tính", "Điểm môn 1", "Điểm môn 2", "Điểm môn 3"
			}
		));
		
		JScrollPane scrollPane = new JScrollPane(table);
		scrollPane.setBounds(26, 179, 696, 92);
		contentPane.add(scrollPane);
		
		JLabel label_thongTinSV = new JLabel("Thông tin SV");
		label_thongTinSV.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_thongTinSV.setBounds(26, 303, 115, 42);
		contentPane.add(label_thongTinSV);
		
		JSeparator separator_2 = new JSeparator();
		separator_2.setBounds(10, 291, 728, 2);
		contentPane.add(separator_2);
		
		JLabel label_maSinhVienUnder = new JLabel("Mã sinh viên");
		label_maSinhVienUnder.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_maSinhVienUnder.setBounds(26, 355, 110, 42);
		contentPane.add(label_maSinhVienUnder);
		
		JLabel label_hoTenUnder = new JLabel("Họ tên");
		label_hoTenUnder.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_hoTenUnder.setBounds(26, 422, 110, 42);
		contentPane.add(label_hoTenUnder);
		
		JLabel label_queQuanUnder = new JLabel("Quê quán");
		label_queQuanUnder.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_queQuanUnder.setBounds(26, 489, 110, 42);
		contentPane.add(label_queQuanUnder);
		
		JLabel label_ngaySinhUnder = new JLabel("Ngày sinh");
		label_ngaySinhUnder.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_ngaySinhUnder.setBounds(26, 556, 110, 42);
		contentPane.add(label_ngaySinhUnder);
		
		textField_maSVUnder = new JTextField();
		textField_maSVUnder.setColumns(10);
		textField_maSVUnder.setBounds(161, 355, 170, 43);
		contentPane.add(textField_maSVUnder);
		
		textField_hoTen = new JTextField();
		textField_hoTen.setColumns(10);
		textField_hoTen.setBounds(161, 422, 170, 43);
		contentPane.add(textField_hoTen);
		
		textField_ngaySinh = new JTextField();
		textField_ngaySinh.setColumns(10);
		textField_ngaySinh.setBounds(161, 556, 170, 43);
		contentPane.add(textField_ngaySinh);
		
		JLabel label_gioiTinhUnder = new JLabel("Giới tính");
		label_gioiTinhUnder.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_gioiTinhUnder.setBounds(426, 355, 110, 42);
		contentPane.add(label_gioiTinhUnder);
		
		JLabel label_diem1Under = new JLabel("Điểm 1");
		label_diem1Under.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_diem1Under.setBounds(426, 422, 110, 42);
		contentPane.add(label_diem1Under);
		
		JLabel label_diem2Under = new JLabel("Điểm 2");
		label_diem2Under.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_diem2Under.setBounds(426, 489, 110, 42);
		contentPane.add(label_diem2Under);
		
		JLabel label_diem3Under = new JLabel("Điểm 3");
		label_diem3Under.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_diem3Under.setBounds(426, 556, 110, 42);
		contentPane.add(label_diem3Under);
		
		textField_diem1 = new JTextField();
		textField_diem1.setColumns(10);
		textField_diem1.setBounds(562, 422, 170, 43);
		contentPane.add(textField_diem1);
		
		textField_diem2 = new JTextField();
		textField_diem2.setColumns(10);
		textField_diem2.setBounds(562, 489, 170, 43);
		contentPane.add(textField_diem2);
		
		textField_diem3 = new JTextField();
		textField_diem3.setColumns(10);
		textField_diem3.setBounds(562, 556, 170, 43);
		contentPane.add(textField_diem3);
		
		rdbtn_nam = new JRadioButton("Nam");
		rdbtn_nam.setFont(new Font("Tahoma", Font.PLAIN, 20));
		rdbtn_nam.setBounds(562, 355, 71, 42);
		contentPane.add(rdbtn_nam);
		rdbtn_nam.setSelected(true);
		
		rdbtn_nu = new JRadioButton("Nữ");
		rdbtn_nu.setFont(new Font("Tahoma", Font.PLAIN, 20));
		rdbtn_nu.setBounds(647, 355, 71, 42);
		contentPane.add(rdbtn_nu);
		
		btngr = new ButtonGroup();
		btngr.add(rdbtn_nam);
		btngr.add(rdbtn_nu);
		
		ActionListener listener = new Listener(this);
		
		JButton btn_them = new JButton("Thêm");
		btn_them.addActionListener(listener);
		btn_them.setFont(new Font("Tahoma", Font.PLAIN, 20));
		btn_them.setBounds(21, 633, 127, 43);
		contentPane.add(btn_them);
		
		JButton btn_xoa = new JButton("Xóa");
		btn_xoa.addActionListener(listener);
		btn_xoa.setFont(new Font("Tahoma", Font.PLAIN, 20));
		btn_xoa.setBounds(595, 633, 127, 43);
		contentPane.add(btn_xoa);
		
		JButton btn_capNhat = new JButton("Cập nhật");
		btn_capNhat.addActionListener(listener);
		btn_capNhat.setFont(new Font("Tahoma", Font.PLAIN, 20));
		btn_capNhat.setBounds(215, 633, 127, 43);
		contentPane.add(btn_capNhat);
		
		JButton btn_luu = new JButton("Lưu");
		btn_luu.addActionListener(listener);
		btn_luu.setFont(new Font("Tahoma", Font.PLAIN, 20));
		btn_luu.setBounds(409, 633, 127, 43);
		contentPane.add(btn_luu);
		
		JSeparator separator_1_1 = new JSeparator();
		separator_1_1.setBounds(10, 615, 728, 2);
		contentPane.add(separator_1_1);
		
		comboBox_queQuanUnder = new JComboBox();
		comboBox_queQuanUnder.addItem("");
		for (Tinh tinh : listTinh) {
			comboBox_queQuanUnder.addItem(tinh.getTenTinh());
		}
		comboBox_queQuanUnder.setBounds(161, 488, 170, 43);
		contentPane.add(comboBox_queQuanUnder);
	}

	public void xoaForm() {
		textField_maSV.setText("");
		textField_maSVUnder.setText("");
		textField_hoTen.setText("");
		textField_ngaySinh.setText("");
		textField_diem1.setText("");
		textField_diem2.setText("");
		textField_diem3.setText("");
		comboBox_queQuanUnder.setSelectedIndex(-1);
		btngr.clearSelection();
	}

	public void themHoacCapNhatSV(SinhVien sv) {
		DefaultTableModel defaultTableModel = (DefaultTableModel) table.getModel();
		if (!this.model.kiemTraTonTai(sv)) {
			this.model.addSV(sv);
			defaultTableModel.addRow(new Object[]{
													sv.getMaSinhVien()+"", 
													sv.getTenSinhVien(),
													sv.getQueQuan().getTenTinh(),
													sv.getNgaySinh().getDate()+"/"+(sv.getNgaySinh().getMonth() + 1)+"/"+(sv.getNgaySinh().getYear()+1900),
													sv.isGioiTinh() ? "Nam" : "Nữ",
													sv.getDiemMon1()+"",
													sv.getDiemMon2()+"",
													sv.getDiemMon3()+""});
		}
		else {
			this.model.update(sv);
			int soDong = defaultTableModel.getRowCount();
			for (int i = 0; i < soDong; i++) {
				String id = defaultTableModel.getValueAt(soDong, 0)+"";
				if (id.equals(sv.getMaSinhVien()+"")) {
					defaultTableModel.getValueAt(sv.getMaSinhVien()+"", i, 0);
					defaultTableModel.getValueAt(s, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
				}
			}
		}
	}

	public void hienThiThongTinSinhVienDangDuocChon() {
		DefaultTableModel defaultTableModel = (DefaultTableModel) table.getModel();
		int row = table.getSelectedRow();
		
		int maSV = Integer.valueOf(defaultTableModel.getValueAt(row, 0)+"");
		String tenSV = defaultTableModel.getValueAt(row, 1)+"";
		Tinh tinh = Tinh.getTinhByTen(defaultTableModel.getValueAt(row, 2)+"");
		String ngaySinh = defaultTableModel.getValueAt(row, 3)+"";
		String textGioiTinh = defaultTableModel.getValueAt(row, 4)+"";
		boolean gioiTinh = textGioiTinh.equals("Nam");
		float diemMon1 = Float.valueOf(defaultTableModel.getValueAt(row, 5)+"");
		float diemMon2 = Float.valueOf(defaultTableModel.getValueAt(row, 6)+"");
		float diemMon3 = Float.valueOf(defaultTableModel.getValueAt(row, 7)+"");
		
		this.textField_maSVUnder.setText(maSV+"");
		this.textField_hoTen.setText(tenSV+"");
		this.comboBox_queQuan.setSelectedItem(tinh.getTenTinh()+"");
		this.textField_ngaySinh.setText(ngaySinh+"");
		if (gioiTinh) {
			rdbtn_nam.setSelected(true);
		} else {
			rdbtn_nu.setSelected(false);
		}
		this.textField_diem1.setText(diemMon1+"");
		this.textField_diem2.setText(diemMon2+"");
		this.textField_diem3.setText(diemMon3+"");
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3063)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:189)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:141)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:120)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-03-14 23:38:33.487
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3063)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:189)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:141)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:120)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-03-14 23:38:33.488
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3063)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:189)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:141)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:120)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core 4 4 2023-03-14 23:38:34.144
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package View;

import java.awt.EventQueue;

import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.border.EmptyBorder;

import Model.QLSV_model;
import Model.SinhVien;
import Model.Tinh;

import javax.swing.JMenuBar;
import javax.swing.JMenu;
import javax.swing.JMenuItem;
import javax.swing.JSeparator;
import javax.swing.JLabel;
import java.awt.Font;
import javax.swing.JScrollPane;
import javax.swing.JComboBox;
import javax.swing.JTextField;
import javax.swing.ButtonGroup;
import javax.swing.JButton;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

import Controller.Listener;

import javax.swing.JRadioButton;
import java.awt.event.ActionListener;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.awt.event.ActionEvent;

public class view_QLSV extends JFrame {

	private JPanel contentPane;
	public QLSV_model model;
	private JTextField textField_maSV;
	private JTable table;
	public JTextField textField_maSVUnder;
	public JTextField textField_hoTen;
	public JTextField textField_ngaySinh;
	public JTextField textField_diem1;
	public JTextField textField_diem2;
	public JTextField textField_diem3;
	public JComboBox comboBox_queQuanUnder;
	private JComboBox comboBox_queQuan;
	public ButtonGroup btngr;
	public JRadioButton rdbtn_nam;
	public JRadioButton rdbtn_nu;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					view_QLSV frame = new view_QLSV();
					frame.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the frame.
	 */
	public view_QLSV() {
		model = new QLSV_model();
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setBounds(100, 100, 757, 759);
		setTitle("Chương trình quản lý sinh viên của Trần Phúc Khánh");
		
		JMenuBar menuBar = new JMenuBar();
		setJMenuBar(menuBar);
		
		JMenu menu_file = new JMenu("File");
		menuBar.add(menu_file);
		
		JMenuItem menuItem_open = new JMenuItem("Open");
		menu_file.add(menuItem_open);
		
		JMenuItem mntmClose = new JMenuItem("Close");
		menu_file.add(mntmClose);
		
		JSeparator separator = new JSeparator();
		menu_file.add(separator);
		
		JMenuItem menuItem_exit = new JMenuItem("Exit");
		menu_file.add(menuItem_exit);
		
		JMenu menu_about = new JMenu("About");
		menuBar.add(menu_about);
		
		JMenuItem menuItem_about_me = new JMenuItem("About me");
		menu_about.add(menuItem_about_me);
		contentPane = new JPanel();
		contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));

		setContentPane(contentPane);
		contentPane.setLayout(null);
		
		JLabel label_queQuan = new JLabel("Quê quán");
		label_queQuan.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_queQuan.setBounds(47, 40, 86, 42);
		contentPane.add(label_queQuan);
		
		comboBox_queQuan = new JComboBox();
		ArrayList<Tinh> listTinh = Tinh.getDS_Tinh();
		comboBox_queQuan.addItem("");
		for (Tinh tinh : listTinh) {
			comboBox_queQuan.addItem(tinh.getTenTinh());
		}
		comboBox_queQuan.setFont(new Font("Tahoma", Font.PLAIN, 15));
		comboBox_queQuan.setBounds(140, 40, 102, 43);
		contentPane.add(comboBox_queQuan);
		
		JLabel label_maSinhVien = new JLabel("Mã sinh viên");
		label_maSinhVien.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_maSinhVien.setBounds(306, 40, 110, 42);
		contentPane.add(label_maSinhVien);
		
		textField_maSV = new JTextField();
		textField_maSV.setBounds(426, 40, 102, 43);
		contentPane.add(textField_maSV);
		textField_maSV.setColumns(10);
		
		JButton button_timKiem = new JButton("Tìm kiếm");
		button_timKiem.setFont(new Font("Tahoma", Font.PLAIN, 20));
		button_timKiem.setBounds(591, 40, 127, 43);
		contentPane.add(button_timKiem);
		
		JSeparator separator_1 = new JSeparator();
		separator_1.setBounds(10, 102, 728, 2);
		contentPane.add(separator_1);
		
		JLabel label_danhSachSV = new JLabel("Danh sách SV");
		label_danhSachSV.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_danhSachSV.setBounds(26, 127, 122, 42);
		contentPane.add(label_danhSachSV);
		
		table = new JTable();
		table.setFont(new Font("Tahoma", Font.PLAIN, 10));
		table.setModel(new DefaultTableModel(
			new Object[][] {
			},
			new String[] {
				"Mã SV", "Họ tên", "Quê quán", "Ngày sinh", "Giới tính", "Điểm môn 1", "Điểm môn 2", "Điểm môn 3"
			}
		));
		
		JScrollPane scrollPane = new JScrollPane(table);
		scrollPane.setBounds(26, 179, 696, 92);
		contentPane.add(scrollPane);
		
		JLabel label_thongTinSV = new JLabel("Thông tin SV");
		label_thongTinSV.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_thongTinSV.setBounds(26, 303, 115, 42);
		contentPane.add(label_thongTinSV);
		
		JSeparator separator_2 = new JSeparator();
		separator_2.setBounds(10, 291, 728, 2);
		contentPane.add(separator_2);
		
		JLabel label_maSinhVienUnder = new JLabel("Mã sinh viên");
		label_maSinhVienUnder.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_maSinhVienUnder.setBounds(26, 355, 110, 42);
		contentPane.add(label_maSinhVienUnder);
		
		JLabel label_hoTenUnder = new JLabel("Họ tên");
		label_hoTenUnder.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_hoTenUnder.setBounds(26, 422, 110, 42);
		contentPane.add(label_hoTenUnder);
		
		JLabel label_queQuanUnder = new JLabel("Quê quán");
		label_queQuanUnder.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_queQuanUnder.setBounds(26, 489, 110, 42);
		contentPane.add(label_queQuanUnder);
		
		JLabel label_ngaySinhUnder = new JLabel("Ngày sinh");
		label_ngaySinhUnder.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_ngaySinhUnder.setBounds(26, 556, 110, 42);
		contentPane.add(label_ngaySinhUnder);
		
		textField_maSVUnder = new JTextField();
		textField_maSVUnder.setColumns(10);
		textField_maSVUnder.setBounds(161, 355, 170, 43);
		contentPane.add(textField_maSVUnder);
		
		textField_hoTen = new JTextField();
		textField_hoTen.setColumns(10);
		textField_hoTen.setBounds(161, 422, 170, 43);
		contentPane.add(textField_hoTen);
		
		textField_ngaySinh = new JTextField();
		textField_ngaySinh.setColumns(10);
		textField_ngaySinh.setBounds(161, 556, 170, 43);
		contentPane.add(textField_ngaySinh);
		
		JLabel label_gioiTinhUnder = new JLabel("Giới tính");
		label_gioiTinhUnder.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_gioiTinhUnder.setBounds(426, 355, 110, 42);
		contentPane.add(label_gioiTinhUnder);
		
		JLabel label_diem1Under = new JLabel("Điểm 1");
		label_diem1Under.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_diem1Under.setBounds(426, 422, 110, 42);
		contentPane.add(label_diem1Under);
		
		JLabel label_diem2Under = new JLabel("Điểm 2");
		label_diem2Under.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_diem2Under.setBounds(426, 489, 110, 42);
		contentPane.add(label_diem2Under);
		
		JLabel label_diem3Under = new JLabel("Điểm 3");
		label_diem3Under.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_diem3Under.setBounds(426, 556, 110, 42);
		contentPane.add(label_diem3Under);
		
		textField_diem1 = new JTextField();
		textField_diem1.setColumns(10);
		textField_diem1.setBounds(562, 422, 170, 43);
		contentPane.add(textField_diem1);
		
		textField_diem2 = new JTextField();
		textField_diem2.setColumns(10);
		textField_diem2.setBounds(562, 489, 170, 43);
		contentPane.add(textField_diem2);
		
		textField_diem3 = new JTextField();
		textField_diem3.setColumns(10);
		textField_diem3.setBounds(562, 556, 170, 43);
		contentPane.add(textField_diem3);
		
		rdbtn_nam = new JRadioButton("Nam");
		rdbtn_nam.setFont(new Font("Tahoma", Font.PLAIN, 20));
		rdbtn_nam.setBounds(562, 355, 71, 42);
		contentPane.add(rdbtn_nam);
		rdbtn_nam.setSelected(true);
		
		rdbtn_nu = new JRadioButton("Nữ");
		rdbtn_nu.setFont(new Font("Tahoma", Font.PLAIN, 20));
		rdbtn_nu.setBounds(647, 355, 71, 42);
		contentPane.add(rdbtn_nu);
		
		btngr = new ButtonGroup();
		btngr.add(rdbtn_nam);
		btngr.add(rdbtn_nu);
		
		ActionListener listener = new Listener(this);
		
		JButton btn_them = new JButton("Thêm");
		btn_them.addActionListener(listener);
		btn_them.setFont(new Font("Tahoma", Font.PLAIN, 20));
		btn_them.setBounds(21, 633, 127, 43);
		contentPane.add(btn_them);
		
		JButton btn_xoa = new JButton("Xóa");
		btn_xoa.addActionListener(listener);
		btn_xoa.setFont(new Font("Tahoma", Font.PLAIN, 20));
		btn_xoa.setBounds(595, 633, 127, 43);
		contentPane.add(btn_xoa);
		
		JButton btn_capNhat = new JButton("Cập nhật");
		btn_capNhat.addActionListener(listener);
		btn_capNhat.setFont(new Font("Tahoma", Font.PLAIN, 20));
		btn_capNhat.setBounds(215, 633, 127, 43);
		contentPane.add(btn_capNhat);
		
		JButton btn_luu = new JButton("Lưu");
		btn_luu.addActionListener(listener);
		btn_luu.setFont(new Font("Tahoma", Font.PLAIN, 20));
		btn_luu.setBounds(409, 633, 127, 43);
		contentPane.add(btn_luu);
		
		JSeparator separator_1_1 = new JSeparator();
		separator_1_1.setBounds(10, 615, 728, 2);
		contentPane.add(separator_1_1);
		
		comboBox_queQuanUnder = new JComboBox();
		comboBox_queQuanUnder.addItem("");
		for (Tinh tinh : listTinh) {
			comboBox_queQuanUnder.addItem(tinh.getTenTinh());
		}
		comboBox_queQuanUnder.setBounds(161, 488, 170, 43);
		contentPane.add(comboBox_queQuanUnder);
	}

	public void xoaForm() {
		textField_maSV.setText("");
		textField_maSVUnder.setText("");
		textField_hoTen.setText("");
		textField_ngaySinh.setText("");
		textField_diem1.setText("");
		textField_diem2.setText("");
		textField_diem3.setText("");
		comboBox_queQuanUnder.setSelectedIndex(-1);
		btngr.clearSelection();
	}

	public void themHoacCapNhatSV(SinhVien sv) {
		DefaultTableModel defaultTableModel = (DefaultTableModel) table.getModel();
		if (!this.model.kiemTraTonTai(sv)) {
			this.model.addSV(sv);
			defaultTableModel.addRow(new Object[]{
													sv.getMaSinhVien()+"", 
													sv.getTenSinhVien(),
													sv.getQueQuan().getTenTinh(),
													sv.getNgaySinh().getDate()+"/"+(sv.getNgaySinh().getMonth() + 1)+"/"+(sv.getNgaySinh().getYear()+1900),
													sv.isGioiTinh() ? "Nam" : "Nữ",
													sv.getDiemMon1()+"",
													sv.getDiemMon2()+"",
													sv.getDiemMon3()+""});
		}
		else {
			this.model.update(sv);
			int soDong = defaultTableModel.getRowCount();
			for (int i = 0; i < soDong; i++) {
				String id = defaultTableModel.getValueAt(soDong, 0)+"";
				if (id.equals(sv.getMaSinhVien()+"")) {
					defaultTableModel.getValueAt(sv.getMaSinhVien()+"", i, 0);
					defaultTableModel.getValueAt(sv., 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
				}
			}
		}
	}

	public void hienThiThongTinSinhVienDangDuocChon() {
		DefaultTableModel defaultTableModel = (DefaultTableModel) table.getModel();
		int row = table.getSelectedRow();
		
		int maSV = Integer.valueOf(defaultTableModel.getValueAt(row, 0)+"");
		String tenSV = defaultTableModel.getValueAt(row, 1)+"";
		Tinh tinh = Tinh.getTinhByTen(defaultTableModel.getValueAt(row, 2)+"");
		String ngaySinh = defaultTableModel.getValueAt(row, 3)+"";
		String textGioiTinh = defaultTableModel.getValueAt(row, 4)+"";
		boolean gioiTinh = textGioiTinh.equals("Nam");
		float diemMon1 = Float.valueOf(defaultTableModel.getValueAt(row, 5)+"");
		float diemMon2 = Float.valueOf(defaultTableModel.getValueAt(row, 6)+"");
		float diemMon3 = Float.valueOf(defaultTableModel.getValueAt(row, 7)+"");
		
		this.textField_maSVUnder.setText(maSV+"");
		this.textField_hoTen.setText(tenSV+"");
		this.comboBox_queQuan.setSelectedItem(tinh.getTenTinh()+"");
		this.textField_ngaySinh.setText(ngaySinh+"");
		if (gioiTinh) {
			rdbtn_nam.setSelected(true);
		} else {
			rdbtn_nu.setSelected(false);
		}
		this.textField_diem1.setText(diemMon1+"");
		this.textField_diem2.setText(diemMon2+"");
		this.textField_diem3.setText(diemMon3+"");
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3063)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:561)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2023-03-14 23:38:34.146
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3063)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:561)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2023-03-14 23:38:34.146
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3063)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:561)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2023-03-14 23:38:34.238
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package View;

import java.awt.EventQueue;

import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.border.EmptyBorder;

import Model.QLSV_model;
import Model.SinhVien;
import Model.Tinh;

import javax.swing.JMenuBar;
import javax.swing.JMenu;
import javax.swing.JMenuItem;
import javax.swing.JSeparator;
import javax.swing.JLabel;
import java.awt.Font;
import javax.swing.JScrollPane;
import javax.swing.JComboBox;
import javax.swing.JTextField;
import javax.swing.ButtonGroup;
import javax.swing.JButton;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

import Controller.Listener;

import javax.swing.JRadioButton;
import java.awt.event.ActionListener;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.awt.event.ActionEvent;

public class view_QLSV extends JFrame {

	private JPanel contentPane;
	public QLSV_model model;
	private JTextField textField_maSV;
	private JTable table;
	public JTextField textField_maSVUnder;
	public JTextField textField_hoTen;
	public JTextField textField_ngaySinh;
	public JTextField textField_diem1;
	public JTextField textField_diem2;
	public JTextField textField_diem3;
	public JComboBox comboBox_queQuanUnder;
	private JComboBox comboBox_queQuan;
	public ButtonGroup btngr;
	public JRadioButton rdbtn_nam;
	public JRadioButton rdbtn_nu;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					view_QLSV frame = new view_QLSV();
					frame.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the frame.
	 */
	public view_QLSV() {
		model = new QLSV_model();
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setBounds(100, 100, 757, 759);
		setTitle("Chương trình quản lý sinh viên của Trần Phúc Khánh");
		
		JMenuBar menuBar = new JMenuBar();
		setJMenuBar(menuBar);
		
		JMenu menu_file = new JMenu("File");
		menuBar.add(menu_file);
		
		JMenuItem menuItem_open = new JMenuItem("Open");
		menu_file.add(menuItem_open);
		
		JMenuItem mntmClose = new JMenuItem("Close");
		menu_file.add(mntmClose);
		
		JSeparator separator = new JSeparator();
		menu_file.add(separator);
		
		JMenuItem menuItem_exit = new JMenuItem("Exit");
		menu_file.add(menuItem_exit);
		
		JMenu menu_about = new JMenu("About");
		menuBar.add(menu_about);
		
		JMenuItem menuItem_about_me = new JMenuItem("About me");
		menu_about.add(menuItem_about_me);
		contentPane = new JPanel();
		contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));

		setContentPane(contentPane);
		contentPane.setLayout(null);
		
		JLabel label_queQuan = new JLabel("Quê quán");
		label_queQuan.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_queQuan.setBounds(47, 40, 86, 42);
		contentPane.add(label_queQuan);
		
		comboBox_queQuan = new JComboBox();
		ArrayList<Tinh> listTinh = Tinh.getDS_Tinh();
		comboBox_queQuan.addItem("");
		for (Tinh tinh : listTinh) {
			comboBox_queQuan.addItem(tinh.getTenTinh());
		}
		comboBox_queQuan.setFont(new Font("Tahoma", Font.PLAIN, 15));
		comboBox_queQuan.setBounds(140, 40, 102, 43);
		contentPane.add(comboBox_queQuan);
		
		JLabel label_maSinhVien = new JLabel("Mã sinh viên");
		label_maSinhVien.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_maSinhVien.setBounds(306, 40, 110, 42);
		contentPane.add(label_maSinhVien);
		
		textField_maSV = new JTextField();
		textField_maSV.setBounds(426, 40, 102, 43);
		contentPane.add(textField_maSV);
		textField_maSV.setColumns(10);
		
		JButton button_timKiem = new JButton("Tìm kiếm");
		button_timKiem.setFont(new Font("Tahoma", Font.PLAIN, 20));
		button_timKiem.setBounds(591, 40, 127, 43);
		contentPane.add(button_timKiem);
		
		JSeparator separator_1 = new JSeparator();
		separator_1.setBounds(10, 102, 728, 2);
		contentPane.add(separator_1);
		
		JLabel label_danhSachSV = new JLabel("Danh sách SV");
		label_danhSachSV.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_danhSachSV.setBounds(26, 127, 122, 42);
		contentPane.add(label_danhSachSV);
		
		table = new JTable();
		table.setFont(new Font("Tahoma", Font.PLAIN, 10));
		table.setModel(new DefaultTableModel(
			new Object[][] {
			},
			new String[] {
				"Mã SV", "Họ tên", "Quê quán", "Ngày sinh", "Giới tính", "Điểm môn 1", "Điểm môn 2", "Điểm môn 3"
			}
		));
		
		JScrollPane scrollPane = new JScrollPane(table);
		scrollPane.setBounds(26, 179, 696, 92);
		contentPane.add(scrollPane);
		
		JLabel label_thongTinSV = new JLabel("Thông tin SV");
		label_thongTinSV.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_thongTinSV.setBounds(26, 303, 115, 42);
		contentPane.add(label_thongTinSV);
		
		JSeparator separator_2 = new JSeparator();
		separator_2.setBounds(10, 291, 728, 2);
		contentPane.add(separator_2);
		
		JLabel label_maSinhVienUnder = new JLabel("Mã sinh viên");
		label_maSinhVienUnder.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_maSinhVienUnder.setBounds(26, 355, 110, 42);
		contentPane.add(label_maSinhVienUnder);
		
		JLabel label_hoTenUnder = new JLabel("Họ tên");
		label_hoTenUnder.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_hoTenUnder.setBounds(26, 422, 110, 42);
		contentPane.add(label_hoTenUnder);
		
		JLabel label_queQuanUnder = new JLabel("Quê quán");
		label_queQuanUnder.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_queQuanUnder.setBounds(26, 489, 110, 42);
		contentPane.add(label_queQuanUnder);
		
		JLabel label_ngaySinhUnder = new JLabel("Ngày sinh");
		label_ngaySinhUnder.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_ngaySinhUnder.setBounds(26, 556, 110, 42);
		contentPane.add(label_ngaySinhUnder);
		
		textField_maSVUnder = new JTextField();
		textField_maSVUnder.setColumns(10);
		textField_maSVUnder.setBounds(161, 355, 170, 43);
		contentPane.add(textField_maSVUnder);
		
		textField_hoTen = new JTextField();
		textField_hoTen.setColumns(10);
		textField_hoTen.setBounds(161, 422, 170, 43);
		contentPane.add(textField_hoTen);
		
		textField_ngaySinh = new JTextField();
		textField_ngaySinh.setColumns(10);
		textField_ngaySinh.setBounds(161, 556, 170, 43);
		contentPane.add(textField_ngaySinh);
		
		JLabel label_gioiTinhUnder = new JLabel("Giới tính");
		label_gioiTinhUnder.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_gioiTinhUnder.setBounds(426, 355, 110, 42);
		contentPane.add(label_gioiTinhUnder);
		
		JLabel label_diem1Under = new JLabel("Điểm 1");
		label_diem1Under.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_diem1Under.setBounds(426, 422, 110, 42);
		contentPane.add(label_diem1Under);
		
		JLabel label_diem2Under = new JLabel("Điểm 2");
		label_diem2Under.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_diem2Under.setBounds(426, 489, 110, 42);
		contentPane.add(label_diem2Under);
		
		JLabel label_diem3Under = new JLabel("Điểm 3");
		label_diem3Under.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_diem3Under.setBounds(426, 556, 110, 42);
		contentPane.add(label_diem3Under);
		
		textField_diem1 = new JTextField();
		textField_diem1.setColumns(10);
		textField_diem1.setBounds(562, 422, 170, 43);
		contentPane.add(textField_diem1);
		
		textField_diem2 = new JTextField();
		textField_diem2.setColumns(10);
		textField_diem2.setBounds(562, 489, 170, 43);
		contentPane.add(textField_diem2);
		
		textField_diem3 = new JTextField();
		textField_diem3.setColumns(10);
		textField_diem3.setBounds(562, 556, 170, 43);
		contentPane.add(textField_diem3);
		
		rdbtn_nam = new JRadioButton("Nam");
		rdbtn_nam.setFont(new Font("Tahoma", Font.PLAIN, 20));
		rdbtn_nam.setBounds(562, 355, 71, 42);
		contentPane.add(rdbtn_nam);
		rdbtn_nam.setSelected(true);
		
		rdbtn_nu = new JRadioButton("Nữ");
		rdbtn_nu.setFont(new Font("Tahoma", Font.PLAIN, 20));
		rdbtn_nu.setBounds(647, 355, 71, 42);
		contentPane.add(rdbtn_nu);
		
		btngr = new ButtonGroup();
		btngr.add(rdbtn_nam);
		btngr.add(rdbtn_nu);
		
		ActionListener listener = new Listener(this);
		
		JButton btn_them = new JButton("Thêm");
		btn_them.addActionListener(listener);
		btn_them.setFont(new Font("Tahoma", Font.PLAIN, 20));
		btn_them.setBounds(21, 633, 127, 43);
		contentPane.add(btn_them);
		
		JButton btn_xoa = new JButton("Xóa");
		btn_xoa.addActionListener(listener);
		btn_xoa.setFont(new Font("Tahoma", Font.PLAIN, 20));
		btn_xoa.setBounds(595, 633, 127, 43);
		contentPane.add(btn_xoa);
		
		JButton btn_capNhat = new JButton("Cập nhật");
		btn_capNhat.addActionListener(listener);
		btn_capNhat.setFont(new Font("Tahoma", Font.PLAIN, 20));
		btn_capNhat.setBounds(215, 633, 127, 43);
		contentPane.add(btn_capNhat);
		
		JButton btn_luu = new JButton("Lưu");
		btn_luu.addActionListener(listener);
		btn_luu.setFont(new Font("Tahoma", Font.PLAIN, 20));
		btn_luu.setBounds(409, 633, 127, 43);
		contentPane.add(btn_luu);
		
		JSeparator separator_1_1 = new JSeparator();
		separator_1_1.setBounds(10, 615, 728, 2);
		contentPane.add(separator_1_1);
		
		comboBox_queQuanUnder = new JComboBox();
		comboBox_queQuanUnder.addItem("");
		for (Tinh tinh : listTinh) {
			comboBox_queQuanUnder.addItem(tinh.getTenTinh());
		}
		comboBox_queQuanUnder.setBounds(161, 488, 170, 43);
		contentPane.add(comboBox_queQuanUnder);
	}

	public void xoaForm() {
		textField_maSV.setText("");
		textField_maSVUnder.setText("");
		textField_hoTen.setText("");
		textField_ngaySinh.setText("");
		textField_diem1.setText("");
		textField_diem2.setText("");
		textField_diem3.setText("");
		comboBox_queQuanUnder.setSelectedIndex(-1);
		btngr.clearSelection();
	}

	public void themHoacCapNhatSV(SinhVien sv) {
		DefaultTableModel defaultTableModel = (DefaultTableModel) table.getModel();
		if (!this.model.kiemTraTonTai(sv)) {
			this.model.addSV(sv);
			defaultTableModel.addRow(new Object[]{
													sv.getMaSinhVien()+"", 
													sv.getTenSinhVien(),
													sv.getQueQuan().getTenTinh(),
													sv.getNgaySinh().getDate()+"/"+(sv.getNgaySinh().getMonth() + 1)+"/"+(sv.getNgaySinh().getYear()+1900),
													sv.isGioiTinh() ? "Nam" : "Nữ",
													sv.getDiemMon1()+"",
													sv.getDiemMon2()+"",
													sv.getDiemMon3()+""});
		}
		else {
			this.model.update(sv);
			int soDong = defaultTableModel.getRowCount();
			for (int i = 0; i < soDong; i++) {
				String id = defaultTableModel.getValueAt(soDong, 0)+"";
				if (id.equals(sv.getMaSinhVien()+"")) {
					defaultTableModel.getValueAt(sv.getMaSinhVien()+"", i, 0);
					defaultTableModel.getValueAt(sv., 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
				}
			}
		}
	}

	public void hienThiThongTinSinhVienDangDuocChon() {
		DefaultTableModel defaultTableModel = (DefaultTableModel) table.getModel();
		int row = table.getSelectedRow();
		
		int maSV = Integer.valueOf(defaultTableModel.getValueAt(row, 0)+"");
		String tenSV = defaultTableModel.getValueAt(row, 1)+"";
		Tinh tinh = Tinh.getTinhByTen(defaultTableModel.getValueAt(row, 2)+"");
		String ngaySinh = defaultTableModel.getValueAt(row, 3)+"";
		String textGioiTinh = defaultTableModel.getValueAt(row, 4)+"";
		boolean gioiTinh = textGioiTinh.equals("Nam");
		float diemMon1 = Float.valueOf(defaultTableModel.getValueAt(row, 5)+"");
		float diemMon2 = Float.valueOf(defaultTableModel.getValueAt(row, 6)+"");
		float diemMon3 = Float.valueOf(defaultTableModel.getValueAt(row, 7)+"");
		
		this.textField_maSVUnder.setText(maSV+"");
		this.textField_hoTen.setText(tenSV+"");
		this.comboBox_queQuan.setSelectedItem(tinh.getTenTinh()+"");
		this.textField_ngaySinh.setText(ngaySinh+"");
		if (gioiTinh) {
			rdbtn_nam.setSelected(true);
		} else {
			rdbtn_nu.setSelected(false);
		}
		this.textField_diem1.setText(diemMon1+"");
		this.textField_diem2.setText(diemMon2+"");
		this.textField_diem3.setText(diemMon3+"");
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3063)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-03-14 23:38:34.239
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3063)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-03-14 23:38:34.239
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3063)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2023-03-14 23:38:36.545
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package View;

import java.awt.EventQueue;

import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.border.EmptyBorder;

import Model.QLSV_model;
import Model.SinhVien;
import Model.Tinh;

import javax.swing.JMenuBar;
import javax.swing.JMenu;
import javax.swing.JMenuItem;
import javax.swing.JSeparator;
import javax.swing.JLabel;
import java.awt.Font;
import javax.swing.JScrollPane;
import javax.swing.JComboBox;
import javax.swing.JTextField;
import javax.swing.ButtonGroup;
import javax.swing.JButton;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

import Controller.Listener;

import javax.swing.JRadioButton;
import java.awt.event.ActionListener;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.awt.event.ActionEvent;

public class view_QLSV extends JFrame {

	private JPanel contentPane;
	public QLSV_model model;
	private JTextField textField_maSV;
	private JTable table;
	public JTextField textField_maSVUnder;
	public JTextField textField_hoTen;
	public JTextField textField_ngaySinh;
	public JTextField textField_diem1;
	public JTextField textField_diem2;
	public JTextField textField_diem3;
	public JComboBox comboBox_queQuanUnder;
	private JComboBox comboBox_queQuan;
	public ButtonGroup btngr;
	public JRadioButton rdbtn_nam;
	public JRadioButton rdbtn_nu;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					view_QLSV frame = new view_QLSV();
					frame.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the frame.
	 */
	public view_QLSV() {
		model = new QLSV_model();
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setBounds(100, 100, 757, 759);
		setTitle("Chương trình quản lý sinh viên của Trần Phúc Khánh");
		
		JMenuBar menuBar = new JMenuBar();
		setJMenuBar(menuBar);
		
		JMenu menu_file = new JMenu("File");
		menuBar.add(menu_file);
		
		JMenuItem menuItem_open = new JMenuItem("Open");
		menu_file.add(menuItem_open);
		
		JMenuItem mntmClose = new JMenuItem("Close");
		menu_file.add(mntmClose);
		
		JSeparator separator = new JSeparator();
		menu_file.add(separator);
		
		JMenuItem menuItem_exit = new JMenuItem("Exit");
		menu_file.add(menuItem_exit);
		
		JMenu menu_about = new JMenu("About");
		menuBar.add(menu_about);
		
		JMenuItem menuItem_about_me = new JMenuItem("About me");
		menu_about.add(menuItem_about_me);
		contentPane = new JPanel();
		contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));

		setContentPane(contentPane);
		contentPane.setLayout(null);
		
		JLabel label_queQuan = new JLabel("Quê quán");
		label_queQuan.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_queQuan.setBounds(47, 40, 86, 42);
		contentPane.add(label_queQuan);
		
		comboBox_queQuan = new JComboBox();
		ArrayList<Tinh> listTinh = Tinh.getDS_Tinh();
		comboBox_queQuan.addItem("");
		for (Tinh tinh : listTinh) {
			comboBox_queQuan.addItem(tinh.getTenTinh());
		}
		comboBox_queQuan.setFont(new Font("Tahoma", Font.PLAIN, 15));
		comboBox_queQuan.setBounds(140, 40, 102, 43);
		contentPane.add(comboBox_queQuan);
		
		JLabel label_maSinhVien = new JLabel("Mã sinh viên");
		label_maSinhVien.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_maSinhVien.setBounds(306, 40, 110, 42);
		contentPane.add(label_maSinhVien);
		
		textField_maSV = new JTextField();
		textField_maSV.setBounds(426, 40, 102, 43);
		contentPane.add(textField_maSV);
		textField_maSV.setColumns(10);
		
		JButton button_timKiem = new JButton("Tìm kiếm");
		button_timKiem.setFont(new Font("Tahoma", Font.PLAIN, 20));
		button_timKiem.setBounds(591, 40, 127, 43);
		contentPane.add(button_timKiem);
		
		JSeparator separator_1 = new JSeparator();
		separator_1.setBounds(10, 102, 728, 2);
		contentPane.add(separator_1);
		
		JLabel label_danhSachSV = new JLabel("Danh sách SV");
		label_danhSachSV.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_danhSachSV.setBounds(26, 127, 122, 42);
		contentPane.add(label_danhSachSV);
		
		table = new JTable();
		table.setFont(new Font("Tahoma", Font.PLAIN, 10));
		table.setModel(new DefaultTableModel(
			new Object[][] {
			},
			new String[] {
				"Mã SV", "Họ tên", "Quê quán", "Ngày sinh", "Giới tính", "Điểm môn 1", "Điểm môn 2", "Điểm môn 3"
			}
		));
		
		JScrollPane scrollPane = new JScrollPane(table);
		scrollPane.setBounds(26, 179, 696, 92);
		contentPane.add(scrollPane);
		
		JLabel label_thongTinSV = new JLabel("Thông tin SV");
		label_thongTinSV.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_thongTinSV.setBounds(26, 303, 115, 42);
		contentPane.add(label_thongTinSV);
		
		JSeparator separator_2 = new JSeparator();
		separator_2.setBounds(10, 291, 728, 2);
		contentPane.add(separator_2);
		
		JLabel label_maSinhVienUnder = new JLabel("Mã sinh viên");
		label_maSinhVienUnder.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_maSinhVienUnder.setBounds(26, 355, 110, 42);
		contentPane.add(label_maSinhVienUnder);
		
		JLabel label_hoTenUnder = new JLabel("Họ tên");
		label_hoTenUnder.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_hoTenUnder.setBounds(26, 422, 110, 42);
		contentPane.add(label_hoTenUnder);
		
		JLabel label_queQuanUnder = new JLabel("Quê quán");
		label_queQuanUnder.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_queQuanUnder.setBounds(26, 489, 110, 42);
		contentPane.add(label_queQuanUnder);
		
		JLabel label_ngaySinhUnder = new JLabel("Ngày sinh");
		label_ngaySinhUnder.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_ngaySinhUnder.setBounds(26, 556, 110, 42);
		contentPane.add(label_ngaySinhUnder);
		
		textField_maSVUnder = new JTextField();
		textField_maSVUnder.setColumns(10);
		textField_maSVUnder.setBounds(161, 355, 170, 43);
		contentPane.add(textField_maSVUnder);
		
		textField_hoTen = new JTextField();
		textField_hoTen.setColumns(10);
		textField_hoTen.setBounds(161, 422, 170, 43);
		contentPane.add(textField_hoTen);
		
		textField_ngaySinh = new JTextField();
		textField_ngaySinh.setColumns(10);
		textField_ngaySinh.setBounds(161, 556, 170, 43);
		contentPane.add(textField_ngaySinh);
		
		JLabel label_gioiTinhUnder = new JLabel("Giới tính");
		label_gioiTinhUnder.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_gioiTinhUnder.setBounds(426, 355, 110, 42);
		contentPane.add(label_gioiTinhUnder);
		
		JLabel label_diem1Under = new JLabel("Điểm 1");
		label_diem1Under.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_diem1Under.setBounds(426, 422, 110, 42);
		contentPane.add(label_diem1Under);
		
		JLabel label_diem2Under = new JLabel("Điểm 2");
		label_diem2Under.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_diem2Under.setBounds(426, 489, 110, 42);
		contentPane.add(label_diem2Under);
		
		JLabel label_diem3Under = new JLabel("Điểm 3");
		label_diem3Under.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_diem3Under.setBounds(426, 556, 110, 42);
		contentPane.add(label_diem3Under);
		
		textField_diem1 = new JTextField();
		textField_diem1.setColumns(10);
		textField_diem1.setBounds(562, 422, 170, 43);
		contentPane.add(textField_diem1);
		
		textField_diem2 = new JTextField();
		textField_diem2.setColumns(10);
		textField_diem2.setBounds(562, 489, 170, 43);
		contentPane.add(textField_diem2);
		
		textField_diem3 = new JTextField();
		textField_diem3.setColumns(10);
		textField_diem3.setBounds(562, 556, 170, 43);
		contentPane.add(textField_diem3);
		
		rdbtn_nam = new JRadioButton("Nam");
		rdbtn_nam.setFont(new Font("Tahoma", Font.PLAIN, 20));
		rdbtn_nam.setBounds(562, 355, 71, 42);
		contentPane.add(rdbtn_nam);
		rdbtn_nam.setSelected(true);
		
		rdbtn_nu = new JRadioButton("Nữ");
		rdbtn_nu.setFont(new Font("Tahoma", Font.PLAIN, 20));
		rdbtn_nu.setBounds(647, 355, 71, 42);
		contentPane.add(rdbtn_nu);
		
		btngr = new ButtonGroup();
		btngr.add(rdbtn_nam);
		btngr.add(rdbtn_nu);
		
		ActionListener listener = new Listener(this);
		
		JButton btn_them = new JButton("Thêm");
		btn_them.addActionListener(listener);
		btn_them.setFont(new Font("Tahoma", Font.PLAIN, 20));
		btn_them.setBounds(21, 633, 127, 43);
		contentPane.add(btn_them);
		
		JButton btn_xoa = new JButton("Xóa");
		btn_xoa.addActionListener(listener);
		btn_xoa.setFont(new Font("Tahoma", Font.PLAIN, 20));
		btn_xoa.setBounds(595, 633, 127, 43);
		contentPane.add(btn_xoa);
		
		JButton btn_capNhat = new JButton("Cập nhật");
		btn_capNhat.addActionListener(listener);
		btn_capNhat.setFont(new Font("Tahoma", Font.PLAIN, 20));
		btn_capNhat.setBounds(215, 633, 127, 43);
		contentPane.add(btn_capNhat);
		
		JButton btn_luu = new JButton("Lưu");
		btn_luu.addActionListener(listener);
		btn_luu.setFont(new Font("Tahoma", Font.PLAIN, 20));
		btn_luu.setBounds(409, 633, 127, 43);
		contentPane.add(btn_luu);
		
		JSeparator separator_1_1 = new JSeparator();
		separator_1_1.setBounds(10, 615, 728, 2);
		contentPane.add(separator_1_1);
		
		comboBox_queQuanUnder = new JComboBox();
		comboBox_queQuanUnder.addItem("");
		for (Tinh tinh : listTinh) {
			comboBox_queQuanUnder.addItem(tinh.getTenTinh());
		}
		comboBox_queQuanUnder.setBounds(161, 488, 170, 43);
		contentPane.add(comboBox_queQuanUnder);
	}

	public void xoaForm() {
		textField_maSV.setText("");
		textField_maSVUnder.setText("");
		textField_hoTen.setText("");
		textField_ngaySinh.setText("");
		textField_diem1.setText("");
		textField_diem2.setText("");
		textField_diem3.setText("");
		comboBox_queQuanUnder.setSelectedIndex(-1);
		btngr.clearSelection();
	}

	public void themHoacCapNhatSV(SinhVien sv) {
		DefaultTableModel defaultTableModel = (DefaultTableModel) table.getModel();
		if (!this.model.kiemTraTonTai(sv)) {
			this.model.addSV(sv);
			defaultTableModel.addRow(new Object[]{
													sv.getMaSinhVien()+"", 
													sv.getTenSinhVien(),
													sv.getQueQuan().getTenTinh(),
													sv.getNgaySinh().getDate()+"/"+(sv.getNgaySinh().getMonth() + 1)+"/"+(sv.getNgaySinh().getYear()+1900),
													sv.isGioiTinh() ? "Nam" : "Nữ",
													sv.getDiemMon1()+"",
													sv.getDiemMon2()+"",
													sv.getDiemMon3()+""});
		}
		else {
			this.model.update(sv);
			int soDong = defaultTableModel.getRowCount();
			for (int i = 0; i < soDong; i++) {
				String id = defaultTableModel.getValueAt(soDong, 0)+"";
				if (id.equals(sv.getMaSinhVien()+"")) {
					defaultTableModel.getValueAt(sv.getMaSinhVien()+"", i, 0);
					defaultTableModel.getValueAt(sv.get, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
				}
			}
		}
	}

	public void hienThiThongTinSinhVienDangDuocChon() {
		DefaultTableModel defaultTableModel = (DefaultTableModel) table.getModel();
		int row = table.getSelectedRow();
		
		int maSV = Integer.valueOf(defaultTableModel.getValueAt(row, 0)+"");
		String tenSV = defaultTableModel.getValueAt(row, 1)+"";
		Tinh tinh = Tinh.getTinhByTen(defaultTableModel.getValueAt(row, 2)+"");
		String ngaySinh = defaultTableModel.getValueAt(row, 3)+"";
		String textGioiTinh = defaultTableModel.getValueAt(row, 4)+"";
		boolean gioiTinh = textGioiTinh.equals("Nam");
		float diemMon1 = Float.valueOf(defaultTableModel.getValueAt(row, 5)+"");
		float diemMon2 = Float.valueOf(defaultTableModel.getValueAt(row, 6)+"");
		float diemMon3 = Float.valueOf(defaultTableModel.getValueAt(row, 7)+"");
		
		this.textField_maSVUnder.setText(maSV+"");
		this.textField_hoTen.setText(tenSV+"");
		this.comboBox_queQuan.setSelectedItem(tinh.getTenTinh()+"");
		this.textField_ngaySinh.setText(ngaySinh+"");
		if (gioiTinh) {
			rdbtn_nam.setSelected(true);
		} else {
			rdbtn_nu.setSelected(false);
		}
		this.textField_diem1.setText(diemMon1+"");
		this.textField_diem2.setText(diemMon2+"");
		this.textField_diem3.setText(diemMon3+"");
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3063)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:561)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2023-03-14 23:38:36.546
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3063)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:561)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2023-03-14 23:38:36.547
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3063)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:561)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2023-03-14 23:38:36.595
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package View;

import java.awt.EventQueue;

import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.border.EmptyBorder;

import Model.QLSV_model;
import Model.SinhVien;
import Model.Tinh;

import javax.swing.JMenuBar;
import javax.swing.JMenu;
import javax.swing.JMenuItem;
import javax.swing.JSeparator;
import javax.swing.JLabel;
import java.awt.Font;
import javax.swing.JScrollPane;
import javax.swing.JComboBox;
import javax.swing.JTextField;
import javax.swing.ButtonGroup;
import javax.swing.JButton;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

import Controller.Listener;

import javax.swing.JRadioButton;
import java.awt.event.ActionListener;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.awt.event.ActionEvent;

public class view_QLSV extends JFrame {

	private JPanel contentPane;
	public QLSV_model model;
	private JTextField textField_maSV;
	private JTable table;
	public JTextField textField_maSVUnder;
	public JTextField textField_hoTen;
	public JTextField textField_ngaySinh;
	public JTextField textField_diem1;
	public JTextField textField_diem2;
	public JTextField textField_diem3;
	public JComboBox comboBox_queQuanUnder;
	private JComboBox comboBox_queQuan;
	public ButtonGroup btngr;
	public JRadioButton rdbtn_nam;
	public JRadioButton rdbtn_nu;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					view_QLSV frame = new view_QLSV();
					frame.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the frame.
	 */
	public view_QLSV() {
		model = new QLSV_model();
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setBounds(100, 100, 757, 759);
		setTitle("Chương trình quản lý sinh viên của Trần Phúc Khánh");
		
		JMenuBar menuBar = new JMenuBar();
		setJMenuBar(menuBar);
		
		JMenu menu_file = new JMenu("File");
		menuBar.add(menu_file);
		
		JMenuItem menuItem_open = new JMenuItem("Open");
		menu_file.add(menuItem_open);
		
		JMenuItem mntmClose = new JMenuItem("Close");
		menu_file.add(mntmClose);
		
		JSeparator separator = new JSeparator();
		menu_file.add(separator);
		
		JMenuItem menuItem_exit = new JMenuItem("Exit");
		menu_file.add(menuItem_exit);
		
		JMenu menu_about = new JMenu("About");
		menuBar.add(menu_about);
		
		JMenuItem menuItem_about_me = new JMenuItem("About me");
		menu_about.add(menuItem_about_me);
		contentPane = new JPanel();
		contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));

		setContentPane(contentPane);
		contentPane.setLayout(null);
		
		JLabel label_queQuan = new JLabel("Quê quán");
		label_queQuan.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_queQuan.setBounds(47, 40, 86, 42);
		contentPane.add(label_queQuan);
		
		comboBox_queQuan = new JComboBox();
		ArrayList<Tinh> listTinh = Tinh.getDS_Tinh();
		comboBox_queQuan.addItem("");
		for (Tinh tinh : listTinh) {
			comboBox_queQuan.addItem(tinh.getTenTinh());
		}
		comboBox_queQuan.setFont(new Font("Tahoma", Font.PLAIN, 15));
		comboBox_queQuan.setBounds(140, 40, 102, 43);
		contentPane.add(comboBox_queQuan);
		
		JLabel label_maSinhVien = new JLabel("Mã sinh viên");
		label_maSinhVien.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_maSinhVien.setBounds(306, 40, 110, 42);
		contentPane.add(label_maSinhVien);
		
		textField_maSV = new JTextField();
		textField_maSV.setBounds(426, 40, 102, 43);
		contentPane.add(textField_maSV);
		textField_maSV.setColumns(10);
		
		JButton button_timKiem = new JButton("Tìm kiếm");
		button_timKiem.setFont(new Font("Tahoma", Font.PLAIN, 20));
		button_timKiem.setBounds(591, 40, 127, 43);
		contentPane.add(button_timKiem);
		
		JSeparator separator_1 = new JSeparator();
		separator_1.setBounds(10, 102, 728, 2);
		contentPane.add(separator_1);
		
		JLabel label_danhSachSV = new JLabel("Danh sách SV");
		label_danhSachSV.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_danhSachSV.setBounds(26, 127, 122, 42);
		contentPane.add(label_danhSachSV);
		
		table = new JTable();
		table.setFont(new Font("Tahoma", Font.PLAIN, 10));
		table.setModel(new DefaultTableModel(
			new Object[][] {
			},
			new String[] {
				"Mã SV", "Họ tên", "Quê quán", "Ngày sinh", "Giới tính", "Điểm môn 1", "Điểm môn 2", "Điểm môn 3"
			}
		));
		
		JScrollPane scrollPane = new JScrollPane(table);
		scrollPane.setBounds(26, 179, 696, 92);
		contentPane.add(scrollPane);
		
		JLabel label_thongTinSV = new JLabel("Thông tin SV");
		label_thongTinSV.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_thongTinSV.setBounds(26, 303, 115, 42);
		contentPane.add(label_thongTinSV);
		
		JSeparator separator_2 = new JSeparator();
		separator_2.setBounds(10, 291, 728, 2);
		contentPane.add(separator_2);
		
		JLabel label_maSinhVienUnder = new JLabel("Mã sinh viên");
		label_maSinhVienUnder.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_maSinhVienUnder.setBounds(26, 355, 110, 42);
		contentPane.add(label_maSinhVienUnder);
		
		JLabel label_hoTenUnder = new JLabel("Họ tên");
		label_hoTenUnder.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_hoTenUnder.setBounds(26, 422, 110, 42);
		contentPane.add(label_hoTenUnder);
		
		JLabel label_queQuanUnder = new JLabel("Quê quán");
		label_queQuanUnder.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_queQuanUnder.setBounds(26, 489, 110, 42);
		contentPane.add(label_queQuanUnder);
		
		JLabel label_ngaySinhUnder = new JLabel("Ngày sinh");
		label_ngaySinhUnder.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_ngaySinhUnder.setBounds(26, 556, 110, 42);
		contentPane.add(label_ngaySinhUnder);
		
		textField_maSVUnder = new JTextField();
		textField_maSVUnder.setColumns(10);
		textField_maSVUnder.setBounds(161, 355, 170, 43);
		contentPane.add(textField_maSVUnder);
		
		textField_hoTen = new JTextField();
		textField_hoTen.setColumns(10);
		textField_hoTen.setBounds(161, 422, 170, 43);
		contentPane.add(textField_hoTen);
		
		textField_ngaySinh = new JTextField();
		textField_ngaySinh.setColumns(10);
		textField_ngaySinh.setBounds(161, 556, 170, 43);
		contentPane.add(textField_ngaySinh);
		
		JLabel label_gioiTinhUnder = new JLabel("Giới tính");
		label_gioiTinhUnder.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_gioiTinhUnder.setBounds(426, 355, 110, 42);
		contentPane.add(label_gioiTinhUnder);
		
		JLabel label_diem1Under = new JLabel("Điểm 1");
		label_diem1Under.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_diem1Under.setBounds(426, 422, 110, 42);
		contentPane.add(label_diem1Under);
		
		JLabel label_diem2Under = new JLabel("Điểm 2");
		label_diem2Under.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_diem2Under.setBounds(426, 489, 110, 42);
		contentPane.add(label_diem2Under);
		
		JLabel label_diem3Under = new JLabel("Điểm 3");
		label_diem3Under.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_diem3Under.setBounds(426, 556, 110, 42);
		contentPane.add(label_diem3Under);
		
		textField_diem1 = new JTextField();
		textField_diem1.setColumns(10);
		textField_diem1.setBounds(562, 422, 170, 43);
		contentPane.add(textField_diem1);
		
		textField_diem2 = new JTextField();
		textField_diem2.setColumns(10);
		textField_diem2.setBounds(562, 489, 170, 43);
		contentPane.add(textField_diem2);
		
		textField_diem3 = new JTextField();
		textField_diem3.setColumns(10);
		textField_diem3.setBounds(562, 556, 170, 43);
		contentPane.add(textField_diem3);
		
		rdbtn_nam = new JRadioButton("Nam");
		rdbtn_nam.setFont(new Font("Tahoma", Font.PLAIN, 20));
		rdbtn_nam.setBounds(562, 355, 71, 42);
		contentPane.add(rdbtn_nam);
		rdbtn_nam.setSelected(true);
		
		rdbtn_nu = new JRadioButton("Nữ");
		rdbtn_nu.setFont(new Font("Tahoma", Font.PLAIN, 20));
		rdbtn_nu.setBounds(647, 355, 71, 42);
		contentPane.add(rdbtn_nu);
		
		btngr = new ButtonGroup();
		btngr.add(rdbtn_nam);
		btngr.add(rdbtn_nu);
		
		ActionListener listener = new Listener(this);
		
		JButton btn_them = new JButton("Thêm");
		btn_them.addActionListener(listener);
		btn_them.setFont(new Font("Tahoma", Font.PLAIN, 20));
		btn_them.setBounds(21, 633, 127, 43);
		contentPane.add(btn_them);
		
		JButton btn_xoa = new JButton("Xóa");
		btn_xoa.addActionListener(listener);
		btn_xoa.setFont(new Font("Tahoma", Font.PLAIN, 20));
		btn_xoa.setBounds(595, 633, 127, 43);
		contentPane.add(btn_xoa);
		
		JButton btn_capNhat = new JButton("Cập nhật");
		btn_capNhat.addActionListener(listener);
		btn_capNhat.setFont(new Font("Tahoma", Font.PLAIN, 20));
		btn_capNhat.setBounds(215, 633, 127, 43);
		contentPane.add(btn_capNhat);
		
		JButton btn_luu = new JButton("Lưu");
		btn_luu.addActionListener(listener);
		btn_luu.setFont(new Font("Tahoma", Font.PLAIN, 20));
		btn_luu.setBounds(409, 633, 127, 43);
		contentPane.add(btn_luu);
		
		JSeparator separator_1_1 = new JSeparator();
		separator_1_1.setBounds(10, 615, 728, 2);
		contentPane.add(separator_1_1);
		
		comboBox_queQuanUnder = new JComboBox();
		comboBox_queQuanUnder.addItem("");
		for (Tinh tinh : listTinh) {
			comboBox_queQuanUnder.addItem(tinh.getTenTinh());
		}
		comboBox_queQuanUnder.setBounds(161, 488, 170, 43);
		contentPane.add(comboBox_queQuanUnder);
	}

	public void xoaForm() {
		textField_maSV.setText("");
		textField_maSVUnder.setText("");
		textField_hoTen.setText("");
		textField_ngaySinh.setText("");
		textField_diem1.setText("");
		textField_diem2.setText("");
		textField_diem3.setText("");
		comboBox_queQuanUnder.setSelectedIndex(-1);
		btngr.clearSelection();
	}

	public void themHoacCapNhatSV(SinhVien sv) {
		DefaultTableModel defaultTableModel = (DefaultTableModel) table.getModel();
		if (!this.model.kiemTraTonTai(sv)) {
			this.model.addSV(sv);
			defaultTableModel.addRow(new Object[]{
													sv.getMaSinhVien()+"", 
													sv.getTenSinhVien(),
													sv.getQueQuan().getTenTinh(),
													sv.getNgaySinh().getDate()+"/"+(sv.getNgaySinh().getMonth() + 1)+"/"+(sv.getNgaySinh().getYear()+1900),
													sv.isGioiTinh() ? "Nam" : "Nữ",
													sv.getDiemMon1()+"",
													sv.getDiemMon2()+"",
													sv.getDiemMon3()+""});
		}
		else {
			this.model.update(sv);
			int soDong = defaultTableModel.getRowCount();
			for (int i = 0; i < soDong; i++) {
				String id = defaultTableModel.getValueAt(soDong, 0)+"";
				if (id.equals(sv.getMaSinhVien()+"")) {
					defaultTableModel.getValueAt(sv.getMaSinhVien()+"", i, 0);
					defaultTableModel.getValueAt(sv.get, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
				}
			}
		}
	}

	public void hienThiThongTinSinhVienDangDuocChon() {
		DefaultTableModel defaultTableModel = (DefaultTableModel) table.getModel();
		int row = table.getSelectedRow();
		
		int maSV = Integer.valueOf(defaultTableModel.getValueAt(row, 0)+"");
		String tenSV = defaultTableModel.getValueAt(row, 1)+"";
		Tinh tinh = Tinh.getTinhByTen(defaultTableModel.getValueAt(row, 2)+"");
		String ngaySinh = defaultTableModel.getValueAt(row, 3)+"";
		String textGioiTinh = defaultTableModel.getValueAt(row, 4)+"";
		boolean gioiTinh = textGioiTinh.equals("Nam");
		float diemMon1 = Float.valueOf(defaultTableModel.getValueAt(row, 5)+"");
		float diemMon2 = Float.valueOf(defaultTableModel.getValueAt(row, 6)+"");
		float diemMon3 = Float.valueOf(defaultTableModel.getValueAt(row, 7)+"");
		
		this.textField_maSVUnder.setText(maSV+"");
		this.textField_hoTen.setText(tenSV+"");
		this.comboBox_queQuan.setSelectedItem(tinh.getTenTinh()+"");
		this.textField_ngaySinh.setText(ngaySinh+"");
		if (gioiTinh) {
			rdbtn_nam.setSelected(true);
		} else {
			rdbtn_nu.setSelected(false);
		}
		this.textField_diem1.setText(diemMon1+"");
		this.textField_diem2.setText(diemMon2+"");
		this.textField_diem3.setText(diemMon3+"");
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3063)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-03-14 23:38:36.597
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3063)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-03-14 23:38:36.598
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3063)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2023-03-14 23:38:39.054
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package View;

import java.awt.EventQueue;

import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.border.EmptyBorder;

import Model.QLSV_model;
import Model.SinhVien;
import Model.Tinh;

import javax.swing.JMenuBar;
import javax.swing.JMenu;
import javax.swing.JMenuItem;
import javax.swing.JSeparator;
import javax.swing.JLabel;
import java.awt.Font;
import javax.swing.JScrollPane;
import javax.swing.JComboBox;
import javax.swing.JTextField;
import javax.swing.ButtonGroup;
import javax.swing.JButton;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

import Controller.Listener;

import javax.swing.JRadioButton;
import java.awt.event.ActionListener;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.awt.event.ActionEvent;

public class view_QLSV extends JFrame {

	private JPanel contentPane;
	public QLSV_model model;
	private JTextField textField_maSV;
	private JTable table;
	public JTextField textField_maSVUnder;
	public JTextField textField_hoTen;
	public JTextField textField_ngaySinh;
	public JTextField textField_diem1;
	public JTextField textField_diem2;
	public JTextField textField_diem3;
	public JComboBox comboBox_queQuanUnder;
	private JComboBox comboBox_queQuan;
	public ButtonGroup btngr;
	public JRadioButton rdbtn_nam;
	public JRadioButton rdbtn_nu;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					view_QLSV frame = new view_QLSV();
					frame.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the frame.
	 */
	public view_QLSV() {
		model = new QLSV_model();
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setBounds(100, 100, 757, 759);
		setTitle("Chương trình quản lý sinh viên của Trần Phúc Khánh");
		
		JMenuBar menuBar = new JMenuBar();
		setJMenuBar(menuBar);
		
		JMenu menu_file = new JMenu("File");
		menuBar.add(menu_file);
		
		JMenuItem menuItem_open = new JMenuItem("Open");
		menu_file.add(menuItem_open);
		
		JMenuItem mntmClose = new JMenuItem("Close");
		menu_file.add(mntmClose);
		
		JSeparator separator = new JSeparator();
		menu_file.add(separator);
		
		JMenuItem menuItem_exit = new JMenuItem("Exit");
		menu_file.add(menuItem_exit);
		
		JMenu menu_about = new JMenu("About");
		menuBar.add(menu_about);
		
		JMenuItem menuItem_about_me = new JMenuItem("About me");
		menu_about.add(menuItem_about_me);
		contentPane = new JPanel();
		contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));

		setContentPane(contentPane);
		contentPane.setLayout(null);
		
		JLabel label_queQuan = new JLabel("Quê quán");
		label_queQuan.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_queQuan.setBounds(47, 40, 86, 42);
		contentPane.add(label_queQuan);
		
		comboBox_queQuan = new JComboBox();
		ArrayList<Tinh> listTinh = Tinh.getDS_Tinh();
		comboBox_queQuan.addItem("");
		for (Tinh tinh : listTinh) {
			comboBox_queQuan.addItem(tinh.getTenTinh());
		}
		comboBox_queQuan.setFont(new Font("Tahoma", Font.PLAIN, 15));
		comboBox_queQuan.setBounds(140, 40, 102, 43);
		contentPane.add(comboBox_queQuan);
		
		JLabel label_maSinhVien = new JLabel("Mã sinh viên");
		label_maSinhVien.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_maSinhVien.setBounds(306, 40, 110, 42);
		contentPane.add(label_maSinhVien);
		
		textField_maSV = new JTextField();
		textField_maSV.setBounds(426, 40, 102, 43);
		contentPane.add(textField_maSV);
		textField_maSV.setColumns(10);
		
		JButton button_timKiem = new JButton("Tìm kiếm");
		button_timKiem.setFont(new Font("Tahoma", Font.PLAIN, 20));
		button_timKiem.setBounds(591, 40, 127, 43);
		contentPane.add(button_timKiem);
		
		JSeparator separator_1 = new JSeparator();
		separator_1.setBounds(10, 102, 728, 2);
		contentPane.add(separator_1);
		
		JLabel label_danhSachSV = new JLabel("Danh sách SV");
		label_danhSachSV.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_danhSachSV.setBounds(26, 127, 122, 42);
		contentPane.add(label_danhSachSV);
		
		table = new JTable();
		table.setFont(new Font("Tahoma", Font.PLAIN, 10));
		table.setModel(new DefaultTableModel(
			new Object[][] {
			},
			new String[] {
				"Mã SV", "Họ tên", "Quê quán", "Ngày sinh", "Giới tính", "Điểm môn 1", "Điểm môn 2", "Điểm môn 3"
			}
		));
		
		JScrollPane scrollPane = new JScrollPane(table);
		scrollPane.setBounds(26, 179, 696, 92);
		contentPane.add(scrollPane);
		
		JLabel label_thongTinSV = new JLabel("Thông tin SV");
		label_thongTinSV.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_thongTinSV.setBounds(26, 303, 115, 42);
		contentPane.add(label_thongTinSV);
		
		JSeparator separator_2 = new JSeparator();
		separator_2.setBounds(10, 291, 728, 2);
		contentPane.add(separator_2);
		
		JLabel label_maSinhVienUnder = new JLabel("Mã sinh viên");
		label_maSinhVienUnder.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_maSinhVienUnder.setBounds(26, 355, 110, 42);
		contentPane.add(label_maSinhVienUnder);
		
		JLabel label_hoTenUnder = new JLabel("Họ tên");
		label_hoTenUnder.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_hoTenUnder.setBounds(26, 422, 110, 42);
		contentPane.add(label_hoTenUnder);
		
		JLabel label_queQuanUnder = new JLabel("Quê quán");
		label_queQuanUnder.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_queQuanUnder.setBounds(26, 489, 110, 42);
		contentPane.add(label_queQuanUnder);
		
		JLabel label_ngaySinhUnder = new JLabel("Ngày sinh");
		label_ngaySinhUnder.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_ngaySinhUnder.setBounds(26, 556, 110, 42);
		contentPane.add(label_ngaySinhUnder);
		
		textField_maSVUnder = new JTextField();
		textField_maSVUnder.setColumns(10);
		textField_maSVUnder.setBounds(161, 355, 170, 43);
		contentPane.add(textField_maSVUnder);
		
		textField_hoTen = new JTextField();
		textField_hoTen.setColumns(10);
		textField_hoTen.setBounds(161, 422, 170, 43);
		contentPane.add(textField_hoTen);
		
		textField_ngaySinh = new JTextField();
		textField_ngaySinh.setColumns(10);
		textField_ngaySinh.setBounds(161, 556, 170, 43);
		contentPane.add(textField_ngaySinh);
		
		JLabel label_gioiTinhUnder = new JLabel("Giới tính");
		label_gioiTinhUnder.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_gioiTinhUnder.setBounds(426, 355, 110, 42);
		contentPane.add(label_gioiTinhUnder);
		
		JLabel label_diem1Under = new JLabel("Điểm 1");
		label_diem1Under.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_diem1Under.setBounds(426, 422, 110, 42);
		contentPane.add(label_diem1Under);
		
		JLabel label_diem2Under = new JLabel("Điểm 2");
		label_diem2Under.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_diem2Under.setBounds(426, 489, 110, 42);
		contentPane.add(label_diem2Under);
		
		JLabel label_diem3Under = new JLabel("Điểm 3");
		label_diem3Under.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_diem3Under.setBounds(426, 556, 110, 42);
		contentPane.add(label_diem3Under);
		
		textField_diem1 = new JTextField();
		textField_diem1.setColumns(10);
		textField_diem1.setBounds(562, 422, 170, 43);
		contentPane.add(textField_diem1);
		
		textField_diem2 = new JTextField();
		textField_diem2.setColumns(10);
		textField_diem2.setBounds(562, 489, 170, 43);
		contentPane.add(textField_diem2);
		
		textField_diem3 = new JTextField();
		textField_diem3.setColumns(10);
		textField_diem3.setBounds(562, 556, 170, 43);
		contentPane.add(textField_diem3);
		
		rdbtn_nam = new JRadioButton("Nam");
		rdbtn_nam.setFont(new Font("Tahoma", Font.PLAIN, 20));
		rdbtn_nam.setBounds(562, 355, 71, 42);
		contentPane.add(rdbtn_nam);
		rdbtn_nam.setSelected(true);
		
		rdbtn_nu = new JRadioButton("Nữ");
		rdbtn_nu.setFont(new Font("Tahoma", Font.PLAIN, 20));
		rdbtn_nu.setBounds(647, 355, 71, 42);
		contentPane.add(rdbtn_nu);
		
		btngr = new ButtonGroup();
		btngr.add(rdbtn_nam);
		btngr.add(rdbtn_nu);
		
		ActionListener listener = new Listener(this);
		
		JButton btn_them = new JButton("Thêm");
		btn_them.addActionListener(listener);
		btn_them.setFont(new Font("Tahoma", Font.PLAIN, 20));
		btn_them.setBounds(21, 633, 127, 43);
		contentPane.add(btn_them);
		
		JButton btn_xoa = new JButton("Xóa");
		btn_xoa.addActionListener(listener);
		btn_xoa.setFont(new Font("Tahoma", Font.PLAIN, 20));
		btn_xoa.setBounds(595, 633, 127, 43);
		contentPane.add(btn_xoa);
		
		JButton btn_capNhat = new JButton("Cập nhật");
		btn_capNhat.addActionListener(listener);
		btn_capNhat.setFont(new Font("Tahoma", Font.PLAIN, 20));
		btn_capNhat.setBounds(215, 633, 127, 43);
		contentPane.add(btn_capNhat);
		
		JButton btn_luu = new JButton("Lưu");
		btn_luu.addActionListener(listener);
		btn_luu.setFont(new Font("Tahoma", Font.PLAIN, 20));
		btn_luu.setBounds(409, 633, 127, 43);
		contentPane.add(btn_luu);
		
		JSeparator separator_1_1 = new JSeparator();
		separator_1_1.setBounds(10, 615, 728, 2);
		contentPane.add(separator_1_1);
		
		comboBox_queQuanUnder = new JComboBox();
		comboBox_queQuanUnder.addItem("");
		for (Tinh tinh : listTinh) {
			comboBox_queQuanUnder.addItem(tinh.getTenTinh());
		}
		comboBox_queQuanUnder.setBounds(161, 488, 170, 43);
		contentPane.add(comboBox_queQuanUnder);
	}

	public void xoaForm() {
		textField_maSV.setText("");
		textField_maSVUnder.setText("");
		textField_hoTen.setText("");
		textField_ngaySinh.setText("");
		textField_diem1.setText("");
		textField_diem2.setText("");
		textField_diem3.setText("");
		comboBox_queQuanUnder.setSelectedIndex(-1);
		btngr.clearSelection();
	}

	public void themHoacCapNhatSV(SinhVien sv) {
		DefaultTableModel defaultTableModel = (DefaultTableModel) table.getModel();
		if (!this.model.kiemTraTonTai(sv)) {
			this.model.addSV(sv);
			defaultTableModel.addRow(new Object[]{
													sv.getMaSinhVien()+"", 
													sv.getTenSinhVien(),
													sv.getQueQuan().getTenTinh(),
													sv.getNgaySinh().getDate()+"/"+(sv.getNgaySinh().getMonth() + 1)+"/"+(sv.getNgaySinh().getYear()+1900),
													sv.isGioiTinh() ? "Nam" : "Nữ",
													sv.getDiemMon1()+"",
													sv.getDiemMon2()+"",
													sv.getDiemMon3()+""});
		}
		else {
			this.model.update(sv);
			int soDong = defaultTableModel.getRowCount();
			for (int i = 0; i < soDong; i++) {
				String id = defaultTableModel.getValueAt(soDong, 0)+"";
				if (id.equals(sv.getMaSinhVien()+"")) {
					defaultTableModel.getValueAt(sv.getMaSinhVien()+"", i, 0);
					defaultTableModel.getValueAt(sv.getTenSinhVien(), 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
				}
			}
		}
	}

	public void hienThiThongTinSinhVienDangDuocChon() {
		DefaultTableModel defaultTableModel = (DefaultTableModel) table.getModel();
		int row = table.getSelectedRow();
		
		int maSV = Integer.valueOf(defaultTableModel.getValueAt(row, 0)+"");
		String tenSV = defaultTableModel.getValueAt(row, 1)+"";
		Tinh tinh = Tinh.getTinhByTen(defaultTableModel.getValueAt(row, 2)+"");
		String ngaySinh = defaultTableModel.getValueAt(row, 3)+"";
		String textGioiTinh = defaultTableModel.getValueAt(row, 4)+"";
		boolean gioiTinh = textGioiTinh.equals("Nam");
		float diemMon1 = Float.valueOf(defaultTableModel.getValueAt(row, 5)+"");
		float diemMon2 = Float.valueOf(defaultTableModel.getValueAt(row, 6)+"");
		float diemMon3 = Float.valueOf(defaultTableModel.getValueAt(row, 7)+"");
		
		this.textField_maSVUnder.setText(maSV+"");
		this.textField_hoTen.setText(tenSV+"");
		this.comboBox_queQuan.setSelectedItem(tinh.getTenTinh()+"");
		this.textField_ngaySinh.setText(ngaySinh+"");
		if (gioiTinh) {
			rdbtn_nam.setSelected(true);
		} else {
			rdbtn_nu.setSelected(false);
		}
		this.textField_diem1.setText(diemMon1+"");
		this.textField_diem2.setText(diemMon2+"");
		this.textField_diem3.setText(diemMon3+"");
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3063)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:561)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2023-03-14 23:38:39.055
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3063)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:561)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2023-03-14 23:38:39.056
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3063)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:561)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2023-03-14 23:38:39.170
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package View;

import java.awt.EventQueue;

import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.border.EmptyBorder;

import Model.QLSV_model;
import Model.SinhVien;
import Model.Tinh;

import javax.swing.JMenuBar;
import javax.swing.JMenu;
import javax.swing.JMenuItem;
import javax.swing.JSeparator;
import javax.swing.JLabel;
import java.awt.Font;
import javax.swing.JScrollPane;
import javax.swing.JComboBox;
import javax.swing.JTextField;
import javax.swing.ButtonGroup;
import javax.swing.JButton;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

import Controller.Listener;

import javax.swing.JRadioButton;
import java.awt.event.ActionListener;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.awt.event.ActionEvent;

public class view_QLSV extends JFrame {

	private JPanel contentPane;
	public QLSV_model model;
	private JTextField textField_maSV;
	private JTable table;
	public JTextField textField_maSVUnder;
	public JTextField textField_hoTen;
	public JTextField textField_ngaySinh;
	public JTextField textField_diem1;
	public JTextField textField_diem2;
	public JTextField textField_diem3;
	public JComboBox comboBox_queQuanUnder;
	private JComboBox comboBox_queQuan;
	public ButtonGroup btngr;
	public JRadioButton rdbtn_nam;
	public JRadioButton rdbtn_nu;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					view_QLSV frame = new view_QLSV();
					frame.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the frame.
	 */
	public view_QLSV() {
		model = new QLSV_model();
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setBounds(100, 100, 757, 759);
		setTitle("Chương trình quản lý sinh viên của Trần Phúc Khánh");
		
		JMenuBar menuBar = new JMenuBar();
		setJMenuBar(menuBar);
		
		JMenu menu_file = new JMenu("File");
		menuBar.add(menu_file);
		
		JMenuItem menuItem_open = new JMenuItem("Open");
		menu_file.add(menuItem_open);
		
		JMenuItem mntmClose = new JMenuItem("Close");
		menu_file.add(mntmClose);
		
		JSeparator separator = new JSeparator();
		menu_file.add(separator);
		
		JMenuItem menuItem_exit = new JMenuItem("Exit");
		menu_file.add(menuItem_exit);
		
		JMenu menu_about = new JMenu("About");
		menuBar.add(menu_about);
		
		JMenuItem menuItem_about_me = new JMenuItem("About me");
		menu_about.add(menuItem_about_me);
		contentPane = new JPanel();
		contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));

		setContentPane(contentPane);
		contentPane.setLayout(null);
		
		JLabel label_queQuan = new JLabel("Quê quán");
		label_queQuan.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_queQuan.setBounds(47, 40, 86, 42);
		contentPane.add(label_queQuan);
		
		comboBox_queQuan = new JComboBox();
		ArrayList<Tinh> listTinh = Tinh.getDS_Tinh();
		comboBox_queQuan.addItem("");
		for (Tinh tinh : listTinh) {
			comboBox_queQuan.addItem(tinh.getTenTinh());
		}
		comboBox_queQuan.setFont(new Font("Tahoma", Font.PLAIN, 15));
		comboBox_queQuan.setBounds(140, 40, 102, 43);
		contentPane.add(comboBox_queQuan);
		
		JLabel label_maSinhVien = new JLabel("Mã sinh viên");
		label_maSinhVien.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_maSinhVien.setBounds(306, 40, 110, 42);
		contentPane.add(label_maSinhVien);
		
		textField_maSV = new JTextField();
		textField_maSV.setBounds(426, 40, 102, 43);
		contentPane.add(textField_maSV);
		textField_maSV.setColumns(10);
		
		JButton button_timKiem = new JButton("Tìm kiếm");
		button_timKiem.setFont(new Font("Tahoma", Font.PLAIN, 20));
		button_timKiem.setBounds(591, 40, 127, 43);
		contentPane.add(button_timKiem);
		
		JSeparator separator_1 = new JSeparator();
		separator_1.setBounds(10, 102, 728, 2);
		contentPane.add(separator_1);
		
		JLabel label_danhSachSV = new JLabel("Danh sách SV");
		label_danhSachSV.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_danhSachSV.setBounds(26, 127, 122, 42);
		contentPane.add(label_danhSachSV);
		
		table = new JTable();
		table.setFont(new Font("Tahoma", Font.PLAIN, 10));
		table.setModel(new DefaultTableModel(
			new Object[][] {
			},
			new String[] {
				"Mã SV", "Họ tên", "Quê quán", "Ngày sinh", "Giới tính", "Điểm môn 1", "Điểm môn 2", "Điểm môn 3"
			}
		));
		
		JScrollPane scrollPane = new JScrollPane(table);
		scrollPane.setBounds(26, 179, 696, 92);
		contentPane.add(scrollPane);
		
		JLabel label_thongTinSV = new JLabel("Thông tin SV");
		label_thongTinSV.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_thongTinSV.setBounds(26, 303, 115, 42);
		contentPane.add(label_thongTinSV);
		
		JSeparator separator_2 = new JSeparator();
		separator_2.setBounds(10, 291, 728, 2);
		contentPane.add(separator_2);
		
		JLabel label_maSinhVienUnder = new JLabel("Mã sinh viên");
		label_maSinhVienUnder.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_maSinhVienUnder.setBounds(26, 355, 110, 42);
		contentPane.add(label_maSinhVienUnder);
		
		JLabel label_hoTenUnder = new JLabel("Họ tên");
		label_hoTenUnder.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_hoTenUnder.setBounds(26, 422, 110, 42);
		contentPane.add(label_hoTenUnder);
		
		JLabel label_queQuanUnder = new JLabel("Quê quán");
		label_queQuanUnder.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_queQuanUnder.setBounds(26, 489, 110, 42);
		contentPane.add(label_queQuanUnder);
		
		JLabel label_ngaySinhUnder = new JLabel("Ngày sinh");
		label_ngaySinhUnder.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_ngaySinhUnder.setBounds(26, 556, 110, 42);
		contentPane.add(label_ngaySinhUnder);
		
		textField_maSVUnder = new JTextField();
		textField_maSVUnder.setColumns(10);
		textField_maSVUnder.setBounds(161, 355, 170, 43);
		contentPane.add(textField_maSVUnder);
		
		textField_hoTen = new JTextField();
		textField_hoTen.setColumns(10);
		textField_hoTen.setBounds(161, 422, 170, 43);
		contentPane.add(textField_hoTen);
		
		textField_ngaySinh = new JTextField();
		textField_ngaySinh.setColumns(10);
		textField_ngaySinh.setBounds(161, 556, 170, 43);
		contentPane.add(textField_ngaySinh);
		
		JLabel label_gioiTinhUnder = new JLabel("Giới tính");
		label_gioiTinhUnder.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_gioiTinhUnder.setBounds(426, 355, 110, 42);
		contentPane.add(label_gioiTinhUnder);
		
		JLabel label_diem1Under = new JLabel("Điểm 1");
		label_diem1Under.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_diem1Under.setBounds(426, 422, 110, 42);
		contentPane.add(label_diem1Under);
		
		JLabel label_diem2Under = new JLabel("Điểm 2");
		label_diem2Under.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_diem2Under.setBounds(426, 489, 110, 42);
		contentPane.add(label_diem2Under);
		
		JLabel label_diem3Under = new JLabel("Điểm 3");
		label_diem3Under.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_diem3Under.setBounds(426, 556, 110, 42);
		contentPane.add(label_diem3Under);
		
		textField_diem1 = new JTextField();
		textField_diem1.setColumns(10);
		textField_diem1.setBounds(562, 422, 170, 43);
		contentPane.add(textField_diem1);
		
		textField_diem2 = new JTextField();
		textField_diem2.setColumns(10);
		textField_diem2.setBounds(562, 489, 170, 43);
		contentPane.add(textField_diem2);
		
		textField_diem3 = new JTextField();
		textField_diem3.setColumns(10);
		textField_diem3.setBounds(562, 556, 170, 43);
		contentPane.add(textField_diem3);
		
		rdbtn_nam = new JRadioButton("Nam");
		rdbtn_nam.setFont(new Font("Tahoma", Font.PLAIN, 20));
		rdbtn_nam.setBounds(562, 355, 71, 42);
		contentPane.add(rdbtn_nam);
		rdbtn_nam.setSelected(true);
		
		rdbtn_nu = new JRadioButton("Nữ");
		rdbtn_nu.setFont(new Font("Tahoma", Font.PLAIN, 20));
		rdbtn_nu.setBounds(647, 355, 71, 42);
		contentPane.add(rdbtn_nu);
		
		btngr = new ButtonGroup();
		btngr.add(rdbtn_nam);
		btngr.add(rdbtn_nu);
		
		ActionListener listener = new Listener(this);
		
		JButton btn_them = new JButton("Thêm");
		btn_them.addActionListener(listener);
		btn_them.setFont(new Font("Tahoma", Font.PLAIN, 20));
		btn_them.setBounds(21, 633, 127, 43);
		contentPane.add(btn_them);
		
		JButton btn_xoa = new JButton("Xóa");
		btn_xoa.addActionListener(listener);
		btn_xoa.setFont(new Font("Tahoma", Font.PLAIN, 20));
		btn_xoa.setBounds(595, 633, 127, 43);
		contentPane.add(btn_xoa);
		
		JButton btn_capNhat = new JButton("Cập nhật");
		btn_capNhat.addActionListener(listener);
		btn_capNhat.setFont(new Font("Tahoma", Font.PLAIN, 20));
		btn_capNhat.setBounds(215, 633, 127, 43);
		contentPane.add(btn_capNhat);
		
		JButton btn_luu = new JButton("Lưu");
		btn_luu.addActionListener(listener);
		btn_luu.setFont(new Font("Tahoma", Font.PLAIN, 20));
		btn_luu.setBounds(409, 633, 127, 43);
		contentPane.add(btn_luu);
		
		JSeparator separator_1_1 = new JSeparator();
		separator_1_1.setBounds(10, 615, 728, 2);
		contentPane.add(separator_1_1);
		
		comboBox_queQuanUnder = new JComboBox();
		comboBox_queQuanUnder.addItem("");
		for (Tinh tinh : listTinh) {
			comboBox_queQuanUnder.addItem(tinh.getTenTinh());
		}
		comboBox_queQuanUnder.setBounds(161, 488, 170, 43);
		contentPane.add(comboBox_queQuanUnder);
	}

	public void xoaForm() {
		textField_maSV.setText("");
		textField_maSVUnder.setText("");
		textField_hoTen.setText("");
		textField_ngaySinh.setText("");
		textField_diem1.setText("");
		textField_diem2.setText("");
		textField_diem3.setText("");
		comboBox_queQuanUnder.setSelectedIndex(-1);
		btngr.clearSelection();
	}

	public void themHoacCapNhatSV(SinhVien sv) {
		DefaultTableModel defaultTableModel = (DefaultTableModel) table.getModel();
		if (!this.model.kiemTraTonTai(sv)) {
			this.model.addSV(sv);
			defaultTableModel.addRow(new Object[]{
													sv.getMaSinhVien()+"", 
													sv.getTenSinhVien(),
													sv.getQueQuan().getTenTinh(),
													sv.getNgaySinh().getDate()+"/"+(sv.getNgaySinh().getMonth() + 1)+"/"+(sv.getNgaySinh().getYear()+1900),
													sv.isGioiTinh() ? "Nam" : "Nữ",
													sv.getDiemMon1()+"",
													sv.getDiemMon2()+"",
													sv.getDiemMon3()+""});
		}
		else {
			this.model.update(sv);
			int soDong = defaultTableModel.getRowCount();
			for (int i = 0; i < soDong; i++) {
				String id = defaultTableModel.getValueAt(soDong, 0)+"";
				if (id.equals(sv.getMaSinhVien()+"")) {
					defaultTableModel.getValueAt(sv.getMaSinhVien()+"", i, 0);
					defaultTableModel.getValueAt(sv.getTenSinhVien(), 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
				}
			}
		}
	}

	public void hienThiThongTinSinhVienDangDuocChon() {
		DefaultTableModel defaultTableModel = (DefaultTableModel) table.getModel();
		int row = table.getSelectedRow();
		
		int maSV = Integer.valueOf(defaultTableModel.getValueAt(row, 0)+"");
		String tenSV = defaultTableModel.getValueAt(row, 1)+"";
		Tinh tinh = Tinh.getTinhByTen(defaultTableModel.getValueAt(row, 2)+"");
		String ngaySinh = defaultTableModel.getValueAt(row, 3)+"";
		String textGioiTinh = defaultTableModel.getValueAt(row, 4)+"";
		boolean gioiTinh = textGioiTinh.equals("Nam");
		float diemMon1 = Float.valueOf(defaultTableModel.getValueAt(row, 5)+"");
		float diemMon2 = Float.valueOf(defaultTableModel.getValueAt(row, 6)+"");
		float diemMon3 = Float.valueOf(defaultTableModel.getValueAt(row, 7)+"");
		
		this.textField_maSVUnder.setText(maSV+"");
		this.textField_hoTen.setText(tenSV+"");
		this.comboBox_queQuan.setSelectedItem(tinh.getTenTinh()+"");
		this.textField_ngaySinh.setText(ngaySinh+"");
		if (gioiTinh) {
			rdbtn_nam.setSelected(true);
		} else {
			rdbtn_nu.setSelected(false);
		}
		this.textField_diem1.setText(diemMon1+"");
		this.textField_diem2.setText(diemMon2+"");
		this.textField_diem3.setText(diemMon3+"");
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3063)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-03-14 23:38:39.171
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3063)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-03-14 23:38:39.172
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3063)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2023-03-14 23:38:40.073
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package View;

import java.awt.EventQueue;

import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.border.EmptyBorder;

import Model.QLSV_model;
import Model.SinhVien;
import Model.Tinh;

import javax.swing.JMenuBar;
import javax.swing.JMenu;
import javax.swing.JMenuItem;
import javax.swing.JSeparator;
import javax.swing.JLabel;
import java.awt.Font;
import javax.swing.JScrollPane;
import javax.swing.JComboBox;
import javax.swing.JTextField;
import javax.swing.ButtonGroup;
import javax.swing.JButton;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

import Controller.Listener;

import javax.swing.JRadioButton;
import java.awt.event.ActionListener;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.awt.event.ActionEvent;

public class view_QLSV extends JFrame {

	private JPanel contentPane;
	public QLSV_model model;
	private JTextField textField_maSV;
	private JTable table;
	public JTextField textField_maSVUnder;
	public JTextField textField_hoTen;
	public JTextField textField_ngaySinh;
	public JTextField textField_diem1;
	public JTextField textField_diem2;
	public JTextField textField_diem3;
	public JComboBox comboBox_queQuanUnder;
	private JComboBox comboBox_queQuan;
	public ButtonGroup btngr;
	public JRadioButton rdbtn_nam;
	public JRadioButton rdbtn_nu;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					view_QLSV frame = new view_QLSV();
					frame.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the frame.
	 */
	public view_QLSV() {
		model = new QLSV_model();
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setBounds(100, 100, 757, 759);
		setTitle("Chương trình quản lý sinh viên của Trần Phúc Khánh");
		
		JMenuBar menuBar = new JMenuBar();
		setJMenuBar(menuBar);
		
		JMenu menu_file = new JMenu("File");
		menuBar.add(menu_file);
		
		JMenuItem menuItem_open = new JMenuItem("Open");
		menu_file.add(menuItem_open);
		
		JMenuItem mntmClose = new JMenuItem("Close");
		menu_file.add(mntmClose);
		
		JSeparator separator = new JSeparator();
		menu_file.add(separator);
		
		JMenuItem menuItem_exit = new JMenuItem("Exit");
		menu_file.add(menuItem_exit);
		
		JMenu menu_about = new JMenu("About");
		menuBar.add(menu_about);
		
		JMenuItem menuItem_about_me = new JMenuItem("About me");
		menu_about.add(menuItem_about_me);
		contentPane = new JPanel();
		contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));

		setContentPane(contentPane);
		contentPane.setLayout(null);
		
		JLabel label_queQuan = new JLabel("Quê quán");
		label_queQuan.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_queQuan.setBounds(47, 40, 86, 42);
		contentPane.add(label_queQuan);
		
		comboBox_queQuan = new JComboBox();
		ArrayList<Tinh> listTinh = Tinh.getDS_Tinh();
		comboBox_queQuan.addItem("");
		for (Tinh tinh : listTinh) {
			comboBox_queQuan.addItem(tinh.getTenTinh());
		}
		comboBox_queQuan.setFont(new Font("Tahoma", Font.PLAIN, 15));
		comboBox_queQuan.setBounds(140, 40, 102, 43);
		contentPane.add(comboBox_queQuan);
		
		JLabel label_maSinhVien = new JLabel("Mã sinh viên");
		label_maSinhVien.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_maSinhVien.setBounds(306, 40, 110, 42);
		contentPane.add(label_maSinhVien);
		
		textField_maSV = new JTextField();
		textField_maSV.setBounds(426, 40, 102, 43);
		contentPane.add(textField_maSV);
		textField_maSV.setColumns(10);
		
		JButton button_timKiem = new JButton("Tìm kiếm");
		button_timKiem.setFont(new Font("Tahoma", Font.PLAIN, 20));
		button_timKiem.setBounds(591, 40, 127, 43);
		contentPane.add(button_timKiem);
		
		JSeparator separator_1 = new JSeparator();
		separator_1.setBounds(10, 102, 728, 2);
		contentPane.add(separator_1);
		
		JLabel label_danhSachSV = new JLabel("Danh sách SV");
		label_danhSachSV.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_danhSachSV.setBounds(26, 127, 122, 42);
		contentPane.add(label_danhSachSV);
		
		table = new JTable();
		table.setFont(new Font("Tahoma", Font.PLAIN, 10));
		table.setModel(new DefaultTableModel(
			new Object[][] {
			},
			new String[] {
				"Mã SV", "Họ tên", "Quê quán", "Ngày sinh", "Giới tính", "Điểm môn 1", "Điểm môn 2", "Điểm môn 3"
			}
		));
		
		JScrollPane scrollPane = new JScrollPane(table);
		scrollPane.setBounds(26, 179, 696, 92);
		contentPane.add(scrollPane);
		
		JLabel label_thongTinSV = new JLabel("Thông tin SV");
		label_thongTinSV.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_thongTinSV.setBounds(26, 303, 115, 42);
		contentPane.add(label_thongTinSV);
		
		JSeparator separator_2 = new JSeparator();
		separator_2.setBounds(10, 291, 728, 2);
		contentPane.add(separator_2);
		
		JLabel label_maSinhVienUnder = new JLabel("Mã sinh viên");
		label_maSinhVienUnder.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_maSinhVienUnder.setBounds(26, 355, 110, 42);
		contentPane.add(label_maSinhVienUnder);
		
		JLabel label_hoTenUnder = new JLabel("Họ tên");
		label_hoTenUnder.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_hoTenUnder.setBounds(26, 422, 110, 42);
		contentPane.add(label_hoTenUnder);
		
		JLabel label_queQuanUnder = new JLabel("Quê quán");
		label_queQuanUnder.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_queQuanUnder.setBounds(26, 489, 110, 42);
		contentPane.add(label_queQuanUnder);
		
		JLabel label_ngaySinhUnder = new JLabel("Ngày sinh");
		label_ngaySinhUnder.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_ngaySinhUnder.setBounds(26, 556, 110, 42);
		contentPane.add(label_ngaySinhUnder);
		
		textField_maSVUnder = new JTextField();
		textField_maSVUnder.setColumns(10);
		textField_maSVUnder.setBounds(161, 355, 170, 43);
		contentPane.add(textField_maSVUnder);
		
		textField_hoTen = new JTextField();
		textField_hoTen.setColumns(10);
		textField_hoTen.setBounds(161, 422, 170, 43);
		contentPane.add(textField_hoTen);
		
		textField_ngaySinh = new JTextField();
		textField_ngaySinh.setColumns(10);
		textField_ngaySinh.setBounds(161, 556, 170, 43);
		contentPane.add(textField_ngaySinh);
		
		JLabel label_gioiTinhUnder = new JLabel("Giới tính");
		label_gioiTinhUnder.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_gioiTinhUnder.setBounds(426, 355, 110, 42);
		contentPane.add(label_gioiTinhUnder);
		
		JLabel label_diem1Under = new JLabel("Điểm 1");
		label_diem1Under.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_diem1Under.setBounds(426, 422, 110, 42);
		contentPane.add(label_diem1Under);
		
		JLabel label_diem2Under = new JLabel("Điểm 2");
		label_diem2Under.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_diem2Under.setBounds(426, 489, 110, 42);
		contentPane.add(label_diem2Under);
		
		JLabel label_diem3Under = new JLabel("Điểm 3");
		label_diem3Under.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_diem3Under.setBounds(426, 556, 110, 42);
		contentPane.add(label_diem3Under);
		
		textField_diem1 = new JTextField();
		textField_diem1.setColumns(10);
		textField_diem1.setBounds(562, 422, 170, 43);
		contentPane.add(textField_diem1);
		
		textField_diem2 = new JTextField();
		textField_diem2.setColumns(10);
		textField_diem2.setBounds(562, 489, 170, 43);
		contentPane.add(textField_diem2);
		
		textField_diem3 = new JTextField();
		textField_diem3.setColumns(10);
		textField_diem3.setBounds(562, 556, 170, 43);
		contentPane.add(textField_diem3);
		
		rdbtn_nam = new JRadioButton("Nam");
		rdbtn_nam.setFont(new Font("Tahoma", Font.PLAIN, 20));
		rdbtn_nam.setBounds(562, 355, 71, 42);
		contentPane.add(rdbtn_nam);
		rdbtn_nam.setSelected(true);
		
		rdbtn_nu = new JRadioButton("Nữ");
		rdbtn_nu.setFont(new Font("Tahoma", Font.PLAIN, 20));
		rdbtn_nu.setBounds(647, 355, 71, 42);
		contentPane.add(rdbtn_nu);
		
		btngr = new ButtonGroup();
		btngr.add(rdbtn_nam);
		btngr.add(rdbtn_nu);
		
		ActionListener listener = new Listener(this);
		
		JButton btn_them = new JButton("Thêm");
		btn_them.addActionListener(listener);
		btn_them.setFont(new Font("Tahoma", Font.PLAIN, 20));
		btn_them.setBounds(21, 633, 127, 43);
		contentPane.add(btn_them);
		
		JButton btn_xoa = new JButton("Xóa");
		btn_xoa.addActionListener(listener);
		btn_xoa.setFont(new Font("Tahoma", Font.PLAIN, 20));
		btn_xoa.setBounds(595, 633, 127, 43);
		contentPane.add(btn_xoa);
		
		JButton btn_capNhat = new JButton("Cập nhật");
		btn_capNhat.addActionListener(listener);
		btn_capNhat.setFont(new Font("Tahoma", Font.PLAIN, 20));
		btn_capNhat.setBounds(215, 633, 127, 43);
		contentPane.add(btn_capNhat);
		
		JButton btn_luu = new JButton("Lưu");
		btn_luu.addActionListener(listener);
		btn_luu.setFont(new Font("Tahoma", Font.PLAIN, 20));
		btn_luu.setBounds(409, 633, 127, 43);
		contentPane.add(btn_luu);
		
		JSeparator separator_1_1 = new JSeparator();
		separator_1_1.setBounds(10, 615, 728, 2);
		contentPane.add(separator_1_1);
		
		comboBox_queQuanUnder = new JComboBox();
		comboBox_queQuanUnder.addItem("");
		for (Tinh tinh : listTinh) {
			comboBox_queQuanUnder.addItem(tinh.getTenTinh());
		}
		comboBox_queQuanUnder.setBounds(161, 488, 170, 43);
		contentPane.add(comboBox_queQuanUnder);
	}

	public void xoaForm() {
		textField_maSV.setText("");
		textField_maSVUnder.setText("");
		textField_hoTen.setText("");
		textField_ngaySinh.setText("");
		textField_diem1.setText("");
		textField_diem2.setText("");
		textField_diem3.setText("");
		comboBox_queQuanUnder.setSelectedIndex(-1);
		btngr.clearSelection();
	}

	public void themHoacCapNhatSV(SinhVien sv) {
		DefaultTableModel defaultTableModel = (DefaultTableModel) table.getModel();
		if (!this.model.kiemTraTonTai(sv)) {
			this.model.addSV(sv);
			defaultTableModel.addRow(new Object[]{
													sv.getMaSinhVien()+"", 
													sv.getTenSinhVien(),
													sv.getQueQuan().getTenTinh(),
													sv.getNgaySinh().getDate()+"/"+(sv.getNgaySinh().getMonth() + 1)+"/"+(sv.getNgaySinh().getYear()+1900),
													sv.isGioiTinh() ? "Nam" : "Nữ",
													sv.getDiemMon1()+"",
													sv.getDiemMon2()+"",
													sv.getDiemMon3()+""});
		}
		else {
			this.model.update(sv);
			int soDong = defaultTableModel.getRowCount();
			for (int i = 0; i < soDong; i++) {
				String id = defaultTableModel.getValueAt(soDong, 0)+"";
				if (id.equals(sv.getMaSinhVien()+"")) {
					defaultTableModel.getValueAt(sv.getMaSinhVien()+"", i, 0);
					defaultTableModel.getValueAt(sv.getTenSinhVien(), 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
				}
			}
		}
	}

	public void hienThiThongTinSinhVienDangDuocChon() {
		DefaultTableModel defaultTableModel = (DefaultTableModel) table.getModel();
		int row = table.getSelectedRow();
		
		int maSV = Integer.valueOf(defaultTableModel.getValueAt(row, 0)+"");
		String tenSV = defaultTableModel.getValueAt(row, 1)+"";
		Tinh tinh = Tinh.getTinhByTen(defaultTableModel.getValueAt(row, 2)+"");
		String ngaySinh = defaultTableModel.getValueAt(row, 3)+"";
		String textGioiTinh = defaultTableModel.getValueAt(row, 4)+"";
		boolean gioiTinh = textGioiTinh.equals("Nam");
		float diemMon1 = Float.valueOf(defaultTableModel.getValueAt(row, 5)+"");
		float diemMon2 = Float.valueOf(defaultTableModel.getValueAt(row, 6)+"");
		float diemMon3 = Float.valueOf(defaultTableModel.getValueAt(row, 7)+"");
		
		this.textField_maSVUnder.setText(maSV+"");
		this.textField_hoTen.setText(tenSV+"");
		this.comboBox_queQuan.setSelectedItem(tinh.getTenTinh()+"");
		this.textField_ngaySinh.setText(ngaySinh+"");
		if (gioiTinh) {
			rdbtn_nam.setSelected(true);
		} else {
			rdbtn_nu.setSelected(false);
		}
		this.textField_diem1.setText(diemMon1+"");
		this.textField_diem2.setText(diemMon2+"");
		this.textField_diem3.setText(diemMon3+"");
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3063)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-03-14 23:38:40.074
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3063)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-03-14 23:38:40.074
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3063)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2023-03-14 23:38:44.280
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package View;

import java.awt.EventQueue;

import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.border.EmptyBorder;

import Model.QLSV_model;
import Model.SinhVien;
import Model.Tinh;

import javax.swing.JMenuBar;
import javax.swing.JMenu;
import javax.swing.JMenuItem;
import javax.swing.JSeparator;
import javax.swing.JLabel;
import java.awt.Font;
import javax.swing.JScrollPane;
import javax.swing.JComboBox;
import javax.swing.JTextField;
import javax.swing.ButtonGroup;
import javax.swing.JButton;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

import Controller.Listener;

import javax.swing.JRadioButton;
import java.awt.event.ActionListener;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.awt.event.ActionEvent;

public class view_QLSV extends JFrame {

	private JPanel contentPane;
	public QLSV_model model;
	private JTextField textField_maSV;
	private JTable table;
	public JTextField textField_maSVUnder;
	public JTextField textField_hoTen;
	public JTextField textField_ngaySinh;
	public JTextField textField_diem1;
	public JTextField textField_diem2;
	public JTextField textField_diem3;
	public JComboBox comboBox_queQuanUnder;
	private JComboBox comboBox_queQuan;
	public ButtonGroup btngr;
	public JRadioButton rdbtn_nam;
	public JRadioButton rdbtn_nu;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					view_QLSV frame = new view_QLSV();
					frame.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the frame.
	 */
	public view_QLSV() {
		model = new QLSV_model();
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setBounds(100, 100, 757, 759);
		setTitle("Chương trình quản lý sinh viên của Trần Phúc Khánh");
		
		JMenuBar menuBar = new JMenuBar();
		setJMenuBar(menuBar);
		
		JMenu menu_file = new JMenu("File");
		menuBar.add(menu_file);
		
		JMenuItem menuItem_open = new JMenuItem("Open");
		menu_file.add(menuItem_open);
		
		JMenuItem mntmClose = new JMenuItem("Close");
		menu_file.add(mntmClose);
		
		JSeparator separator = new JSeparator();
		menu_file.add(separator);
		
		JMenuItem menuItem_exit = new JMenuItem("Exit");
		menu_file.add(menuItem_exit);
		
		JMenu menu_about = new JMenu("About");
		menuBar.add(menu_about);
		
		JMenuItem menuItem_about_me = new JMenuItem("About me");
		menu_about.add(menuItem_about_me);
		contentPane = new JPanel();
		contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));

		setContentPane(contentPane);
		contentPane.setLayout(null);
		
		JLabel label_queQuan = new JLabel("Quê quán");
		label_queQuan.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_queQuan.setBounds(47, 40, 86, 42);
		contentPane.add(label_queQuan);
		
		comboBox_queQuan = new JComboBox();
		ArrayList<Tinh> listTinh = Tinh.getDS_Tinh();
		comboBox_queQuan.addItem("");
		for (Tinh tinh : listTinh) {
			comboBox_queQuan.addItem(tinh.getTenTinh());
		}
		comboBox_queQuan.setFont(new Font("Tahoma", Font.PLAIN, 15));
		comboBox_queQuan.setBounds(140, 40, 102, 43);
		contentPane.add(comboBox_queQuan);
		
		JLabel label_maSinhVien = new JLabel("Mã sinh viên");
		label_maSinhVien.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_maSinhVien.setBounds(306, 40, 110, 42);
		contentPane.add(label_maSinhVien);
		
		textField_maSV = new JTextField();
		textField_maSV.setBounds(426, 40, 102, 43);
		contentPane.add(textField_maSV);
		textField_maSV.setColumns(10);
		
		JButton button_timKiem = new JButton("Tìm kiếm");
		button_timKiem.setFont(new Font("Tahoma", Font.PLAIN, 20));
		button_timKiem.setBounds(591, 40, 127, 43);
		contentPane.add(button_timKiem);
		
		JSeparator separator_1 = new JSeparator();
		separator_1.setBounds(10, 102, 728, 2);
		contentPane.add(separator_1);
		
		JLabel label_danhSachSV = new JLabel("Danh sách SV");
		label_danhSachSV.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_danhSachSV.setBounds(26, 127, 122, 42);
		contentPane.add(label_danhSachSV);
		
		table = new JTable();
		table.setFont(new Font("Tahoma", Font.PLAIN, 10));
		table.setModel(new DefaultTableModel(
			new Object[][] {
			},
			new String[] {
				"Mã SV", "Họ tên", "Quê quán", "Ngày sinh", "Giới tính", "Điểm môn 1", "Điểm môn 2", "Điểm môn 3"
			}
		));
		
		JScrollPane scrollPane = new JScrollPane(table);
		scrollPane.setBounds(26, 179, 696, 92);
		contentPane.add(scrollPane);
		
		JLabel label_thongTinSV = new JLabel("Thông tin SV");
		label_thongTinSV.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_thongTinSV.setBounds(26, 303, 115, 42);
		contentPane.add(label_thongTinSV);
		
		JSeparator separator_2 = new JSeparator();
		separator_2.setBounds(10, 291, 728, 2);
		contentPane.add(separator_2);
		
		JLabel label_maSinhVienUnder = new JLabel("Mã sinh viên");
		label_maSinhVienUnder.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_maSinhVienUnder.setBounds(26, 355, 110, 42);
		contentPane.add(label_maSinhVienUnder);
		
		JLabel label_hoTenUnder = new JLabel("Họ tên");
		label_hoTenUnder.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_hoTenUnder.setBounds(26, 422, 110, 42);
		contentPane.add(label_hoTenUnder);
		
		JLabel label_queQuanUnder = new JLabel("Quê quán");
		label_queQuanUnder.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_queQuanUnder.setBounds(26, 489, 110, 42);
		contentPane.add(label_queQuanUnder);
		
		JLabel label_ngaySinhUnder = new JLabel("Ngày sinh");
		label_ngaySinhUnder.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_ngaySinhUnder.setBounds(26, 556, 110, 42);
		contentPane.add(label_ngaySinhUnder);
		
		textField_maSVUnder = new JTextField();
		textField_maSVUnder.setColumns(10);
		textField_maSVUnder.setBounds(161, 355, 170, 43);
		contentPane.add(textField_maSVUnder);
		
		textField_hoTen = new JTextField();
		textField_hoTen.setColumns(10);
		textField_hoTen.setBounds(161, 422, 170, 43);
		contentPane.add(textField_hoTen);
		
		textField_ngaySinh = new JTextField();
		textField_ngaySinh.setColumns(10);
		textField_ngaySinh.setBounds(161, 556, 170, 43);
		contentPane.add(textField_ngaySinh);
		
		JLabel label_gioiTinhUnder = new JLabel("Giới tính");
		label_gioiTinhUnder.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_gioiTinhUnder.setBounds(426, 355, 110, 42);
		contentPane.add(label_gioiTinhUnder);
		
		JLabel label_diem1Under = new JLabel("Điểm 1");
		label_diem1Under.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_diem1Under.setBounds(426, 422, 110, 42);
		contentPane.add(label_diem1Under);
		
		JLabel label_diem2Under = new JLabel("Điểm 2");
		label_diem2Under.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_diem2Under.setBounds(426, 489, 110, 42);
		contentPane.add(label_diem2Under);
		
		JLabel label_diem3Under = new JLabel("Điểm 3");
		label_diem3Under.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_diem3Under.setBounds(426, 556, 110, 42);
		contentPane.add(label_diem3Under);
		
		textField_diem1 = new JTextField();
		textField_diem1.setColumns(10);
		textField_diem1.setBounds(562, 422, 170, 43);
		contentPane.add(textField_diem1);
		
		textField_diem2 = new JTextField();
		textField_diem2.setColumns(10);
		textField_diem2.setBounds(562, 489, 170, 43);
		contentPane.add(textField_diem2);
		
		textField_diem3 = new JTextField();
		textField_diem3.setColumns(10);
		textField_diem3.setBounds(562, 556, 170, 43);
		contentPane.add(textField_diem3);
		
		rdbtn_nam = new JRadioButton("Nam");
		rdbtn_nam.setFont(new Font("Tahoma", Font.PLAIN, 20));
		rdbtn_nam.setBounds(562, 355, 71, 42);
		contentPane.add(rdbtn_nam);
		rdbtn_nam.setSelected(true);
		
		rdbtn_nu = new JRadioButton("Nữ");
		rdbtn_nu.setFont(new Font("Tahoma", Font.PLAIN, 20));
		rdbtn_nu.setBounds(647, 355, 71, 42);
		contentPane.add(rdbtn_nu);
		
		btngr = new ButtonGroup();
		btngr.add(rdbtn_nam);
		btngr.add(rdbtn_nu);
		
		ActionListener listener = new Listener(this);
		
		JButton btn_them = new JButton("Thêm");
		btn_them.addActionListener(listener);
		btn_them.setFont(new Font("Tahoma", Font.PLAIN, 20));
		btn_them.setBounds(21, 633, 127, 43);
		contentPane.add(btn_them);
		
		JButton btn_xoa = new JButton("Xóa");
		btn_xoa.addActionListener(listener);
		btn_xoa.setFont(new Font("Tahoma", Font.PLAIN, 20));
		btn_xoa.setBounds(595, 633, 127, 43);
		contentPane.add(btn_xoa);
		
		JButton btn_capNhat = new JButton("Cập nhật");
		btn_capNhat.addActionListener(listener);
		btn_capNhat.setFont(new Font("Tahoma", Font.PLAIN, 20));
		btn_capNhat.setBounds(215, 633, 127, 43);
		contentPane.add(btn_capNhat);
		
		JButton btn_luu = new JButton("Lưu");
		btn_luu.addActionListener(listener);
		btn_luu.setFont(new Font("Tahoma", Font.PLAIN, 20));
		btn_luu.setBounds(409, 633, 127, 43);
		contentPane.add(btn_luu);
		
		JSeparator separator_1_1 = new JSeparator();
		separator_1_1.setBounds(10, 615, 728, 2);
		contentPane.add(separator_1_1);
		
		comboBox_queQuanUnder = new JComboBox();
		comboBox_queQuanUnder.addItem("");
		for (Tinh tinh : listTinh) {
			comboBox_queQuanUnder.addItem(tinh.getTenTinh());
		}
		comboBox_queQuanUnder.setBounds(161, 488, 170, 43);
		contentPane.add(comboBox_queQuanUnder);
	}

	public void xoaForm() {
		textField_maSV.setText("");
		textField_maSVUnder.setText("");
		textField_hoTen.setText("");
		textField_ngaySinh.setText("");
		textField_diem1.setText("");
		textField_diem2.setText("");
		textField_diem3.setText("");
		comboBox_queQuanUnder.setSelectedIndex(-1);
		btngr.clearSelection();
	}

	public void themHoacCapNhatSV(SinhVien sv) {
		DefaultTableModel defaultTableModel = (DefaultTableModel) table.getModel();
		if (!this.model.kiemTraTonTai(sv)) {
			this.model.addSV(sv);
			defaultTableModel.addRow(new Object[]{
													sv.getMaSinhVien()+"", 
													sv.getTenSinhVien(),
													sv.getQueQuan().getTenTinh(),
													sv.getNgaySinh().getDate()+"/"+(sv.getNgaySinh().getMonth() + 1)+"/"+(sv.getNgaySinh().getYear()+1900),
													sv.isGioiTinh() ? "Nam" : "Nữ",
													sv.getDiemMon1()+"",
													sv.getDiemMon2()+"",
													sv.getDiemMon3()+""});
		}
		else {
			this.model.update(sv);
			int soDong = defaultTableModel.getRowCount();
			for (int i = 0; i < soDong; i++) {
				String id = defaultTableModel.getValueAt(soDong, 0)+"";
				if (id.equals(sv.getMaSinhVien()+"")) {
					defaultTableModel.getValueAt(sv.getMaSinhVien()+"", i, 0);
					defaultTableModel.getValueAt(sv.getTenSinhVien(), i,0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
				}
			}
		}
	}

	public void hienThiThongTinSinhVienDangDuocChon() {
		DefaultTableModel defaultTableModel = (DefaultTableModel) table.getModel();
		int row = table.getSelectedRow();
		
		int maSV = Integer.valueOf(defaultTableModel.getValueAt(row, 0)+"");
		String tenSV = defaultTableModel.getValueAt(row, 1)+"";
		Tinh tinh = Tinh.getTinhByTen(defaultTableModel.getValueAt(row, 2)+"");
		String ngaySinh = defaultTableModel.getValueAt(row, 3)+"";
		String textGioiTinh = defaultTableModel.getValueAt(row, 4)+"";
		boolean gioiTinh = textGioiTinh.equals("Nam");
		float diemMon1 = Float.valueOf(defaultTableModel.getValueAt(row, 5)+"");
		float diemMon2 = Float.valueOf(defaultTableModel.getValueAt(row, 6)+"");
		float diemMon3 = Float.valueOf(defaultTableModel.getValueAt(row, 7)+"");
		
		this.textField_maSVUnder.setText(maSV+"");
		this.textField_hoTen.setText(tenSV+"");
		this.comboBox_queQuan.setSelectedItem(tinh.getTenTinh()+"");
		this.textField_ngaySinh.setText(ngaySinh+"");
		if (gioiTinh) {
			rdbtn_nam.setSelected(true);
		} else {
			rdbtn_nu.setSelected(false);
		}
		this.textField_diem1.setText(diemMon1+"");
		this.textField_diem2.setText(diemMon2+"");
		this.textField_diem3.setText(diemMon3+"");
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3063)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:561)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2023-03-14 23:38:44.281
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3063)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:561)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2023-03-14 23:38:44.282
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3063)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:561)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2023-03-14 23:38:45.147
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package View;

import java.awt.EventQueue;

import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.border.EmptyBorder;

import Model.QLSV_model;
import Model.SinhVien;
import Model.Tinh;

import javax.swing.JMenuBar;
import javax.swing.JMenu;
import javax.swing.JMenuItem;
import javax.swing.JSeparator;
import javax.swing.JLabel;
import java.awt.Font;
import javax.swing.JScrollPane;
import javax.swing.JComboBox;
import javax.swing.JTextField;
import javax.swing.ButtonGroup;
import javax.swing.JButton;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

import Controller.Listener;

import javax.swing.JRadioButton;
import java.awt.event.ActionListener;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.awt.event.ActionEvent;

public class view_QLSV extends JFrame {

	private JPanel contentPane;
	public QLSV_model model;
	private JTextField textField_maSV;
	private JTable table;
	public JTextField textField_maSVUnder;
	public JTextField textField_hoTen;
	public JTextField textField_ngaySinh;
	public JTextField textField_diem1;
	public JTextField textField_diem2;
	public JTextField textField_diem3;
	public JComboBox comboBox_queQuanUnder;
	private JComboBox comboBox_queQuan;
	public ButtonGroup btngr;
	public JRadioButton rdbtn_nam;
	public JRadioButton rdbtn_nu;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					view_QLSV frame = new view_QLSV();
					frame.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the frame.
	 */
	public view_QLSV() {
		model = new QLSV_model();
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setBounds(100, 100, 757, 759);
		setTitle("Chương trình quản lý sinh viên của Trần Phúc Khánh");
		
		JMenuBar menuBar = new JMenuBar();
		setJMenuBar(menuBar);
		
		JMenu menu_file = new JMenu("File");
		menuBar.add(menu_file);
		
		JMenuItem menuItem_open = new JMenuItem("Open");
		menu_file.add(menuItem_open);
		
		JMenuItem mntmClose = new JMenuItem("Close");
		menu_file.add(mntmClose);
		
		JSeparator separator = new JSeparator();
		menu_file.add(separator);
		
		JMenuItem menuItem_exit = new JMenuItem("Exit");
		menu_file.add(menuItem_exit);
		
		JMenu menu_about = new JMenu("About");
		menuBar.add(menu_about);
		
		JMenuItem menuItem_about_me = new JMenuItem("About me");
		menu_about.add(menuItem_about_me);
		contentPane = new JPanel();
		contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));

		setContentPane(contentPane);
		contentPane.setLayout(null);
		
		JLabel label_queQuan = new JLabel("Quê quán");
		label_queQuan.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_queQuan.setBounds(47, 40, 86, 42);
		contentPane.add(label_queQuan);
		
		comboBox_queQuan = new JComboBox();
		ArrayList<Tinh> listTinh = Tinh.getDS_Tinh();
		comboBox_queQuan.addItem("");
		for (Tinh tinh : listTinh) {
			comboBox_queQuan.addItem(tinh.getTenTinh());
		}
		comboBox_queQuan.setFont(new Font("Tahoma", Font.PLAIN, 15));
		comboBox_queQuan.setBounds(140, 40, 102, 43);
		contentPane.add(comboBox_queQuan);
		
		JLabel label_maSinhVien = new JLabel("Mã sinh viên");
		label_maSinhVien.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_maSinhVien.setBounds(306, 40, 110, 42);
		contentPane.add(label_maSinhVien);
		
		textField_maSV = new JTextField();
		textField_maSV.setBounds(426, 40, 102, 43);
		contentPane.add(textField_maSV);
		textField_maSV.setColumns(10);
		
		JButton button_timKiem = new JButton("Tìm kiếm");
		button_timKiem.setFont(new Font("Tahoma", Font.PLAIN, 20));
		button_timKiem.setBounds(591, 40, 127, 43);
		contentPane.add(button_timKiem);
		
		JSeparator separator_1 = new JSeparator();
		separator_1.setBounds(10, 102, 728, 2);
		contentPane.add(separator_1);
		
		JLabel label_danhSachSV = new JLabel("Danh sách SV");
		label_danhSachSV.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_danhSachSV.setBounds(26, 127, 122, 42);
		contentPane.add(label_danhSachSV);
		
		table = new JTable();
		table.setFont(new Font("Tahoma", Font.PLAIN, 10));
		table.setModel(new DefaultTableModel(
			new Object[][] {
			},
			new String[] {
				"Mã SV", "Họ tên", "Quê quán", "Ngày sinh", "Giới tính", "Điểm môn 1", "Điểm môn 2", "Điểm môn 3"
			}
		));
		
		JScrollPane scrollPane = new JScrollPane(table);
		scrollPane.setBounds(26, 179, 696, 92);
		contentPane.add(scrollPane);
		
		JLabel label_thongTinSV = new JLabel("Thông tin SV");
		label_thongTinSV.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_thongTinSV.setBounds(26, 303, 115, 42);
		contentPane.add(label_thongTinSV);
		
		JSeparator separator_2 = new JSeparator();
		separator_2.setBounds(10, 291, 728, 2);
		contentPane.add(separator_2);
		
		JLabel label_maSinhVienUnder = new JLabel("Mã sinh viên");
		label_maSinhVienUnder.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_maSinhVienUnder.setBounds(26, 355, 110, 42);
		contentPane.add(label_maSinhVienUnder);
		
		JLabel label_hoTenUnder = new JLabel("Họ tên");
		label_hoTenUnder.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_hoTenUnder.setBounds(26, 422, 110, 42);
		contentPane.add(label_hoTenUnder);
		
		JLabel label_queQuanUnder = new JLabel("Quê quán");
		label_queQuanUnder.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_queQuanUnder.setBounds(26, 489, 110, 42);
		contentPane.add(label_queQuanUnder);
		
		JLabel label_ngaySinhUnder = new JLabel("Ngày sinh");
		label_ngaySinhUnder.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_ngaySinhUnder.setBounds(26, 556, 110, 42);
		contentPane.add(label_ngaySinhUnder);
		
		textField_maSVUnder = new JTextField();
		textField_maSVUnder.setColumns(10);
		textField_maSVUnder.setBounds(161, 355, 170, 43);
		contentPane.add(textField_maSVUnder);
		
		textField_hoTen = new JTextField();
		textField_hoTen.setColumns(10);
		textField_hoTen.setBounds(161, 422, 170, 43);
		contentPane.add(textField_hoTen);
		
		textField_ngaySinh = new JTextField();
		textField_ngaySinh.setColumns(10);
		textField_ngaySinh.setBounds(161, 556, 170, 43);
		contentPane.add(textField_ngaySinh);
		
		JLabel label_gioiTinhUnder = new JLabel("Giới tính");
		label_gioiTinhUnder.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_gioiTinhUnder.setBounds(426, 355, 110, 42);
		contentPane.add(label_gioiTinhUnder);
		
		JLabel label_diem1Under = new JLabel("Điểm 1");
		label_diem1Under.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_diem1Under.setBounds(426, 422, 110, 42);
		contentPane.add(label_diem1Under);
		
		JLabel label_diem2Under = new JLabel("Điểm 2");
		label_diem2Under.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_diem2Under.setBounds(426, 489, 110, 42);
		contentPane.add(label_diem2Under);
		
		JLabel label_diem3Under = new JLabel("Điểm 3");
		label_diem3Under.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_diem3Under.setBounds(426, 556, 110, 42);
		contentPane.add(label_diem3Under);
		
		textField_diem1 = new JTextField();
		textField_diem1.setColumns(10);
		textField_diem1.setBounds(562, 422, 170, 43);
		contentPane.add(textField_diem1);
		
		textField_diem2 = new JTextField();
		textField_diem2.setColumns(10);
		textField_diem2.setBounds(562, 489, 170, 43);
		contentPane.add(textField_diem2);
		
		textField_diem3 = new JTextField();
		textField_diem3.setColumns(10);
		textField_diem3.setBounds(562, 556, 170, 43);
		contentPane.add(textField_diem3);
		
		rdbtn_nam = new JRadioButton("Nam");
		rdbtn_nam.setFont(new Font("Tahoma", Font.PLAIN, 20));
		rdbtn_nam.setBounds(562, 355, 71, 42);
		contentPane.add(rdbtn_nam);
		rdbtn_nam.setSelected(true);
		
		rdbtn_nu = new JRadioButton("Nữ");
		rdbtn_nu.setFont(new Font("Tahoma", Font.PLAIN, 20));
		rdbtn_nu.setBounds(647, 355, 71, 42);
		contentPane.add(rdbtn_nu);
		
		btngr = new ButtonGroup();
		btngr.add(rdbtn_nam);
		btngr.add(rdbtn_nu);
		
		ActionListener listener = new Listener(this);
		
		JButton btn_them = new JButton("Thêm");
		btn_them.addActionListener(listener);
		btn_them.setFont(new Font("Tahoma", Font.PLAIN, 20));
		btn_them.setBounds(21, 633, 127, 43);
		contentPane.add(btn_them);
		
		JButton btn_xoa = new JButton("Xóa");
		btn_xoa.addActionListener(listener);
		btn_xoa.setFont(new Font("Tahoma", Font.PLAIN, 20));
		btn_xoa.setBounds(595, 633, 127, 43);
		contentPane.add(btn_xoa);
		
		JButton btn_capNhat = new JButton("Cập nhật");
		btn_capNhat.addActionListener(listener);
		btn_capNhat.setFont(new Font("Tahoma", Font.PLAIN, 20));
		btn_capNhat.setBounds(215, 633, 127, 43);
		contentPane.add(btn_capNhat);
		
		JButton btn_luu = new JButton("Lưu");
		btn_luu.addActionListener(listener);
		btn_luu.setFont(new Font("Tahoma", Font.PLAIN, 20));
		btn_luu.setBounds(409, 633, 127, 43);
		contentPane.add(btn_luu);
		
		JSeparator separator_1_1 = new JSeparator();
		separator_1_1.setBounds(10, 615, 728, 2);
		contentPane.add(separator_1_1);
		
		comboBox_queQuanUnder = new JComboBox();
		comboBox_queQuanUnder.addItem("");
		for (Tinh tinh : listTinh) {
			comboBox_queQuanUnder.addItem(tinh.getTenTinh());
		}
		comboBox_queQuanUnder.setBounds(161, 488, 170, 43);
		contentPane.add(comboBox_queQuanUnder);
	}

	public void xoaForm() {
		textField_maSV.setText("");
		textField_maSVUnder.setText("");
		textField_hoTen.setText("");
		textField_ngaySinh.setText("");
		textField_diem1.setText("");
		textField_diem2.setText("");
		textField_diem3.setText("");
		comboBox_queQuanUnder.setSelectedIndex(-1);
		btngr.clearSelection();
	}

	public void themHoacCapNhatSV(SinhVien sv) {
		DefaultTableModel defaultTableModel = (DefaultTableModel) table.getModel();
		if (!this.model.kiemTraTonTai(sv)) {
			this.model.addSV(sv);
			defaultTableModel.addRow(new Object[]{
													sv.getMaSinhVien()+"", 
													sv.getTenSinhVien(),
													sv.getQueQuan().getTenTinh(),
													sv.getNgaySinh().getDate()+"/"+(sv.getNgaySinh().getMonth() + 1)+"/"+(sv.getNgaySinh().getYear()+1900),
													sv.isGioiTinh() ? "Nam" : "Nữ",
													sv.getDiemMon1()+"",
													sv.getDiemMon2()+"",
													sv.getDiemMon3()+""});
		}
		else {
			this.model.update(sv);
			int soDong = defaultTableModel.getRowCount();
			for (int i = 0; i < soDong; i++) {
				String id = defaultTableModel.getValueAt(soDong, 0)+"";
				if (id.equals(sv.getMaSinhVien()+"")) {
					defaultTableModel.getValueAt(sv.getMaSinhVien()+"", i, 0);
					defaultTableModel.getValueAt(sv.getTenSinhVien(), i, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
				}
			}
		}
	}

	public void hienThiThongTinSinhVienDangDuocChon() {
		DefaultTableModel defaultTableModel = (DefaultTableModel) table.getModel();
		int row = table.getSelectedRow();
		
		int maSV = Integer.valueOf(defaultTableModel.getValueAt(row, 0)+"");
		String tenSV = defaultTableModel.getValueAt(row, 1)+"";
		Tinh tinh = Tinh.getTinhByTen(defaultTableModel.getValueAt(row, 2)+"");
		String ngaySinh = defaultTableModel.getValueAt(row, 3)+"";
		String textGioiTinh = defaultTableModel.getValueAt(row, 4)+"";
		boolean gioiTinh = textGioiTinh.equals("Nam");
		float diemMon1 = Float.valueOf(defaultTableModel.getValueAt(row, 5)+"");
		float diemMon2 = Float.valueOf(defaultTableModel.getValueAt(row, 6)+"");
		float diemMon3 = Float.valueOf(defaultTableModel.getValueAt(row, 7)+"");
		
		this.textField_maSVUnder.setText(maSV+"");
		this.textField_hoTen.setText(tenSV+"");
		this.comboBox_queQuan.setSelectedItem(tinh.getTenTinh()+"");
		this.textField_ngaySinh.setText(ngaySinh+"");
		if (gioiTinh) {
			rdbtn_nam.setSelected(true);
		} else {
			rdbtn_nu.setSelected(false);
		}
		this.textField_diem1.setText(diemMon1+"");
		this.textField_diem2.setText(diemMon2+"");
		this.textField_diem3.setText(diemMon3+"");
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3063)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:561)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2023-03-14 23:38:45.148
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3063)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:561)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2023-03-14 23:38:45.149
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3063)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:561)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2023-03-14 23:38:45.532
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package View;

import java.awt.EventQueue;

import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.border.EmptyBorder;

import Model.QLSV_model;
import Model.SinhVien;
import Model.Tinh;

import javax.swing.JMenuBar;
import javax.swing.JMenu;
import javax.swing.JMenuItem;
import javax.swing.JSeparator;
import javax.swing.JLabel;
import java.awt.Font;
import javax.swing.JScrollPane;
import javax.swing.JComboBox;
import javax.swing.JTextField;
import javax.swing.ButtonGroup;
import javax.swing.JButton;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

import Controller.Listener;

import javax.swing.JRadioButton;
import java.awt.event.ActionListener;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.awt.event.ActionEvent;

public class view_QLSV extends JFrame {

	private JPanel contentPane;
	public QLSV_model model;
	private JTextField textField_maSV;
	private JTable table;
	public JTextField textField_maSVUnder;
	public JTextField textField_hoTen;
	public JTextField textField_ngaySinh;
	public JTextField textField_diem1;
	public JTextField textField_diem2;
	public JTextField textField_diem3;
	public JComboBox comboBox_queQuanUnder;
	private JComboBox comboBox_queQuan;
	public ButtonGroup btngr;
	public JRadioButton rdbtn_nam;
	public JRadioButton rdbtn_nu;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					view_QLSV frame = new view_QLSV();
					frame.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the frame.
	 */
	public view_QLSV() {
		model = new QLSV_model();
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setBounds(100, 100, 757, 759);
		setTitle("Chương trình quản lý sinh viên của Trần Phúc Khánh");
		
		JMenuBar menuBar = new JMenuBar();
		setJMenuBar(menuBar);
		
		JMenu menu_file = new JMenu("File");
		menuBar.add(menu_file);
		
		JMenuItem menuItem_open = new JMenuItem("Open");
		menu_file.add(menuItem_open);
		
		JMenuItem mntmClose = new JMenuItem("Close");
		menu_file.add(mntmClose);
		
		JSeparator separator = new JSeparator();
		menu_file.add(separator);
		
		JMenuItem menuItem_exit = new JMenuItem("Exit");
		menu_file.add(menuItem_exit);
		
		JMenu menu_about = new JMenu("About");
		menuBar.add(menu_about);
		
		JMenuItem menuItem_about_me = new JMenuItem("About me");
		menu_about.add(menuItem_about_me);
		contentPane = new JPanel();
		contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));

		setContentPane(contentPane);
		contentPane.setLayout(null);
		
		JLabel label_queQuan = new JLabel("Quê quán");
		label_queQuan.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_queQuan.setBounds(47, 40, 86, 42);
		contentPane.add(label_queQuan);
		
		comboBox_queQuan = new JComboBox();
		ArrayList<Tinh> listTinh = Tinh.getDS_Tinh();
		comboBox_queQuan.addItem("");
		for (Tinh tinh : listTinh) {
			comboBox_queQuan.addItem(tinh.getTenTinh());
		}
		comboBox_queQuan.setFont(new Font("Tahoma", Font.PLAIN, 15));
		comboBox_queQuan.setBounds(140, 40, 102, 43);
		contentPane.add(comboBox_queQuan);
		
		JLabel label_maSinhVien = new JLabel("Mã sinh viên");
		label_maSinhVien.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_maSinhVien.setBounds(306, 40, 110, 42);
		contentPane.add(label_maSinhVien);
		
		textField_maSV = new JTextField();
		textField_maSV.setBounds(426, 40, 102, 43);
		contentPane.add(textField_maSV);
		textField_maSV.setColumns(10);
		
		JButton button_timKiem = new JButton("Tìm kiếm");
		button_timKiem.setFont(new Font("Tahoma", Font.PLAIN, 20));
		button_timKiem.setBounds(591, 40, 127, 43);
		contentPane.add(button_timKiem);
		
		JSeparator separator_1 = new JSeparator();
		separator_1.setBounds(10, 102, 728, 2);
		contentPane.add(separator_1);
		
		JLabel label_danhSachSV = new JLabel("Danh sách SV");
		label_danhSachSV.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_danhSachSV.setBounds(26, 127, 122, 42);
		contentPane.add(label_danhSachSV);
		
		table = new JTable();
		table.setFont(new Font("Tahoma", Font.PLAIN, 10));
		table.setModel(new DefaultTableModel(
			new Object[][] {
			},
			new String[] {
				"Mã SV", "Họ tên", "Quê quán", "Ngày sinh", "Giới tính", "Điểm môn 1", "Điểm môn 2", "Điểm môn 3"
			}
		));
		
		JScrollPane scrollPane = new JScrollPane(table);
		scrollPane.setBounds(26, 179, 696, 92);
		contentPane.add(scrollPane);
		
		JLabel label_thongTinSV = new JLabel("Thông tin SV");
		label_thongTinSV.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_thongTinSV.setBounds(26, 303, 115, 42);
		contentPane.add(label_thongTinSV);
		
		JSeparator separator_2 = new JSeparator();
		separator_2.setBounds(10, 291, 728, 2);
		contentPane.add(separator_2);
		
		JLabel label_maSinhVienUnder = new JLabel("Mã sinh viên");
		label_maSinhVienUnder.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_maSinhVienUnder.setBounds(26, 355, 110, 42);
		contentPane.add(label_maSinhVienUnder);
		
		JLabel label_hoTenUnder = new JLabel("Họ tên");
		label_hoTenUnder.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_hoTenUnder.setBounds(26, 422, 110, 42);
		contentPane.add(label_hoTenUnder);
		
		JLabel label_queQuanUnder = new JLabel("Quê quán");
		label_queQuanUnder.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_queQuanUnder.setBounds(26, 489, 110, 42);
		contentPane.add(label_queQuanUnder);
		
		JLabel label_ngaySinhUnder = new JLabel("Ngày sinh");
		label_ngaySinhUnder.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_ngaySinhUnder.setBounds(26, 556, 110, 42);
		contentPane.add(label_ngaySinhUnder);
		
		textField_maSVUnder = new JTextField();
		textField_maSVUnder.setColumns(10);
		textField_maSVUnder.setBounds(161, 355, 170, 43);
		contentPane.add(textField_maSVUnder);
		
		textField_hoTen = new JTextField();
		textField_hoTen.setColumns(10);
		textField_hoTen.setBounds(161, 422, 170, 43);
		contentPane.add(textField_hoTen);
		
		textField_ngaySinh = new JTextField();
		textField_ngaySinh.setColumns(10);
		textField_ngaySinh.setBounds(161, 556, 170, 43);
		contentPane.add(textField_ngaySinh);
		
		JLabel label_gioiTinhUnder = new JLabel("Giới tính");
		label_gioiTinhUnder.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_gioiTinhUnder.setBounds(426, 355, 110, 42);
		contentPane.add(label_gioiTinhUnder);
		
		JLabel label_diem1Under = new JLabel("Điểm 1");
		label_diem1Under.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_diem1Under.setBounds(426, 422, 110, 42);
		contentPane.add(label_diem1Under);
		
		JLabel label_diem2Under = new JLabel("Điểm 2");
		label_diem2Under.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_diem2Under.setBounds(426, 489, 110, 42);
		contentPane.add(label_diem2Under);
		
		JLabel label_diem3Under = new JLabel("Điểm 3");
		label_diem3Under.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_diem3Under.setBounds(426, 556, 110, 42);
		contentPane.add(label_diem3Under);
		
		textField_diem1 = new JTextField();
		textField_diem1.setColumns(10);
		textField_diem1.setBounds(562, 422, 170, 43);
		contentPane.add(textField_diem1);
		
		textField_diem2 = new JTextField();
		textField_diem2.setColumns(10);
		textField_diem2.setBounds(562, 489, 170, 43);
		contentPane.add(textField_diem2);
		
		textField_diem3 = new JTextField();
		textField_diem3.setColumns(10);
		textField_diem3.setBounds(562, 556, 170, 43);
		contentPane.add(textField_diem3);
		
		rdbtn_nam = new JRadioButton("Nam");
		rdbtn_nam.setFont(new Font("Tahoma", Font.PLAIN, 20));
		rdbtn_nam.setBounds(562, 355, 71, 42);
		contentPane.add(rdbtn_nam);
		rdbtn_nam.setSelected(true);
		
		rdbtn_nu = new JRadioButton("Nữ");
		rdbtn_nu.setFont(new Font("Tahoma", Font.PLAIN, 20));
		rdbtn_nu.setBounds(647, 355, 71, 42);
		contentPane.add(rdbtn_nu);
		
		btngr = new ButtonGroup();
		btngr.add(rdbtn_nam);
		btngr.add(rdbtn_nu);
		
		ActionListener listener = new Listener(this);
		
		JButton btn_them = new JButton("Thêm");
		btn_them.addActionListener(listener);
		btn_them.setFont(new Font("Tahoma", Font.PLAIN, 20));
		btn_them.setBounds(21, 633, 127, 43);
		contentPane.add(btn_them);
		
		JButton btn_xoa = new JButton("Xóa");
		btn_xoa.addActionListener(listener);
		btn_xoa.setFont(new Font("Tahoma", Font.PLAIN, 20));
		btn_xoa.setBounds(595, 633, 127, 43);
		contentPane.add(btn_xoa);
		
		JButton btn_capNhat = new JButton("Cập nhật");
		btn_capNhat.addActionListener(listener);
		btn_capNhat.setFont(new Font("Tahoma", Font.PLAIN, 20));
		btn_capNhat.setBounds(215, 633, 127, 43);
		contentPane.add(btn_capNhat);
		
		JButton btn_luu = new JButton("Lưu");
		btn_luu.addActionListener(listener);
		btn_luu.setFont(new Font("Tahoma", Font.PLAIN, 20));
		btn_luu.setBounds(409, 633, 127, 43);
		contentPane.add(btn_luu);
		
		JSeparator separator_1_1 = new JSeparator();
		separator_1_1.setBounds(10, 615, 728, 2);
		contentPane.add(separator_1_1);
		
		comboBox_queQuanUnder = new JComboBox();
		comboBox_queQuanUnder.addItem("");
		for (Tinh tinh : listTinh) {
			comboBox_queQuanUnder.addItem(tinh.getTenTinh());
		}
		comboBox_queQuanUnder.setBounds(161, 488, 170, 43);
		contentPane.add(comboBox_queQuanUnder);
	}

	public void xoaForm() {
		textField_maSV.setText("");
		textField_maSVUnder.setText("");
		textField_hoTen.setText("");
		textField_ngaySinh.setText("");
		textField_diem1.setText("");
		textField_diem2.setText("");
		textField_diem3.setText("");
		comboBox_queQuanUnder.setSelectedIndex(-1);
		btngr.clearSelection();
	}

	public void themHoacCapNhatSV(SinhVien sv) {
		DefaultTableModel defaultTableModel = (DefaultTableModel) table.getModel();
		if (!this.model.kiemTraTonTai(sv)) {
			this.model.addSV(sv);
			defaultTableModel.addRow(new Object[]{
													sv.getMaSinhVien()+"", 
													sv.getTenSinhVien(),
													sv.getQueQuan().getTenTinh(),
													sv.getNgaySinh().getDate()+"/"+(sv.getNgaySinh().getMonth() + 1)+"/"+(sv.getNgaySinh().getYear()+1900),
													sv.isGioiTinh() ? "Nam" : "Nữ",
													sv.getDiemMon1()+"",
													sv.getDiemMon2()+"",
													sv.getDiemMon3()+""});
		}
		else {
			this.model.update(sv);
			int soDong = defaultTableModel.getRowCount();
			for (int i = 0; i < soDong; i++) {
				String id = defaultTableModel.getValueAt(soDong, 0)+"";
				if (id.equals(sv.getMaSinhVien()+"")) {
					defaultTableModel.getValueAt(sv.getMaSinhVien()+"", i, 0);
					defaultTableModel.getValueAt(sv.getTenSinhVien(), i, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
				}
			}
		}
	}

	public void hienThiThongTinSinhVienDangDuocChon() {
		DefaultTableModel defaultTableModel = (DefaultTableModel) table.getModel();
		int row = table.getSelectedRow();
		
		int maSV = Integer.valueOf(defaultTableModel.getValueAt(row, 0)+"");
		String tenSV = defaultTableModel.getValueAt(row, 1)+"";
		Tinh tinh = Tinh.getTinhByTen(defaultTableModel.getValueAt(row, 2)+"");
		String ngaySinh = defaultTableModel.getValueAt(row, 3)+"";
		String textGioiTinh = defaultTableModel.getValueAt(row, 4)+"";
		boolean gioiTinh = textGioiTinh.equals("Nam");
		float diemMon1 = Float.valueOf(defaultTableModel.getValueAt(row, 5)+"");
		float diemMon2 = Float.valueOf(defaultTableModel.getValueAt(row, 6)+"");
		float diemMon3 = Float.valueOf(defaultTableModel.getValueAt(row, 7)+"");
		
		this.textField_maSVUnder.setText(maSV+"");
		this.textField_hoTen.setText(tenSV+"");
		this.comboBox_queQuan.setSelectedItem(tinh.getTenTinh()+"");
		this.textField_ngaySinh.setText(ngaySinh+"");
		if (gioiTinh) {
			rdbtn_nam.setSelected(true);
		} else {
			rdbtn_nu.setSelected(false);
		}
		this.textField_diem1.setText(diemMon1+"");
		this.textField_diem2.setText(diemMon2+"");
		this.textField_diem3.setText(diemMon3+"");
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3063)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-03-14 23:38:45.533
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3063)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-03-14 23:38:45.534
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3063)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2023-03-14 23:38:47.754
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package View;

import java.awt.EventQueue;

import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.border.EmptyBorder;

import Model.QLSV_model;
import Model.SinhVien;
import Model.Tinh;

import javax.swing.JMenuBar;
import javax.swing.JMenu;
import javax.swing.JMenuItem;
import javax.swing.JSeparator;
import javax.swing.JLabel;
import java.awt.Font;
import javax.swing.JScrollPane;
import javax.swing.JComboBox;
import javax.swing.JTextField;
import javax.swing.ButtonGroup;
import javax.swing.JButton;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

import Controller.Listener;

import javax.swing.JRadioButton;
import java.awt.event.ActionListener;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.awt.event.ActionEvent;

public class view_QLSV extends JFrame {

	private JPanel contentPane;
	public QLSV_model model;
	private JTextField textField_maSV;
	private JTable table;
	public JTextField textField_maSVUnder;
	public JTextField textField_hoTen;
	public JTextField textField_ngaySinh;
	public JTextField textField_diem1;
	public JTextField textField_diem2;
	public JTextField textField_diem3;
	public JComboBox comboBox_queQuanUnder;
	private JComboBox comboBox_queQuan;
	public ButtonGroup btngr;
	public JRadioButton rdbtn_nam;
	public JRadioButton rdbtn_nu;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					view_QLSV frame = new view_QLSV();
					frame.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the frame.
	 */
	public view_QLSV() {
		model = new QLSV_model();
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setBounds(100, 100, 757, 759);
		setTitle("Chương trình quản lý sinh viên của Trần Phúc Khánh");
		
		JMenuBar menuBar = new JMenuBar();
		setJMenuBar(menuBar);
		
		JMenu menu_file = new JMenu("File");
		menuBar.add(menu_file);
		
		JMenuItem menuItem_open = new JMenuItem("Open");
		menu_file.add(menuItem_open);
		
		JMenuItem mntmClose = new JMenuItem("Close");
		menu_file.add(mntmClose);
		
		JSeparator separator = new JSeparator();
		menu_file.add(separator);
		
		JMenuItem menuItem_exit = new JMenuItem("Exit");
		menu_file.add(menuItem_exit);
		
		JMenu menu_about = new JMenu("About");
		menuBar.add(menu_about);
		
		JMenuItem menuItem_about_me = new JMenuItem("About me");
		menu_about.add(menuItem_about_me);
		contentPane = new JPanel();
		contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));

		setContentPane(contentPane);
		contentPane.setLayout(null);
		
		JLabel label_queQuan = new JLabel("Quê quán");
		label_queQuan.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_queQuan.setBounds(47, 40, 86, 42);
		contentPane.add(label_queQuan);
		
		comboBox_queQuan = new JComboBox();
		ArrayList<Tinh> listTinh = Tinh.getDS_Tinh();
		comboBox_queQuan.addItem("");
		for (Tinh tinh : listTinh) {
			comboBox_queQuan.addItem(tinh.getTenTinh());
		}
		comboBox_queQuan.setFont(new Font("Tahoma", Font.PLAIN, 15));
		comboBox_queQuan.setBounds(140, 40, 102, 43);
		contentPane.add(comboBox_queQuan);
		
		JLabel label_maSinhVien = new JLabel("Mã sinh viên");
		label_maSinhVien.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_maSinhVien.setBounds(306, 40, 110, 42);
		contentPane.add(label_maSinhVien);
		
		textField_maSV = new JTextField();
		textField_maSV.setBounds(426, 40, 102, 43);
		contentPane.add(textField_maSV);
		textField_maSV.setColumns(10);
		
		JButton button_timKiem = new JButton("Tìm kiếm");
		button_timKiem.setFont(new Font("Tahoma", Font.PLAIN, 20));
		button_timKiem.setBounds(591, 40, 127, 43);
		contentPane.add(button_timKiem);
		
		JSeparator separator_1 = new JSeparator();
		separator_1.setBounds(10, 102, 728, 2);
		contentPane.add(separator_1);
		
		JLabel label_danhSachSV = new JLabel("Danh sách SV");
		label_danhSachSV.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_danhSachSV.setBounds(26, 127, 122, 42);
		contentPane.add(label_danhSachSV);
		
		table = new JTable();
		table.setFont(new Font("Tahoma", Font.PLAIN, 10));
		table.setModel(new DefaultTableModel(
			new Object[][] {
			},
			new String[] {
				"Mã SV", "Họ tên", "Quê quán", "Ngày sinh", "Giới tính", "Điểm môn 1", "Điểm môn 2", "Điểm môn 3"
			}
		));
		
		JScrollPane scrollPane = new JScrollPane(table);
		scrollPane.setBounds(26, 179, 696, 92);
		contentPane.add(scrollPane);
		
		JLabel label_thongTinSV = new JLabel("Thông tin SV");
		label_thongTinSV.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_thongTinSV.setBounds(26, 303, 115, 42);
		contentPane.add(label_thongTinSV);
		
		JSeparator separator_2 = new JSeparator();
		separator_2.setBounds(10, 291, 728, 2);
		contentPane.add(separator_2);
		
		JLabel label_maSinhVienUnder = new JLabel("Mã sinh viên");
		label_maSinhVienUnder.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_maSinhVienUnder.setBounds(26, 355, 110, 42);
		contentPane.add(label_maSinhVienUnder);
		
		JLabel label_hoTenUnder = new JLabel("Họ tên");
		label_hoTenUnder.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_hoTenUnder.setBounds(26, 422, 110, 42);
		contentPane.add(label_hoTenUnder);
		
		JLabel label_queQuanUnder = new JLabel("Quê quán");
		label_queQuanUnder.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_queQuanUnder.setBounds(26, 489, 110, 42);
		contentPane.add(label_queQuanUnder);
		
		JLabel label_ngaySinhUnder = new JLabel("Ngày sinh");
		label_ngaySinhUnder.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_ngaySinhUnder.setBounds(26, 556, 110, 42);
		contentPane.add(label_ngaySinhUnder);
		
		textField_maSVUnder = new JTextField();
		textField_maSVUnder.setColumns(10);
		textField_maSVUnder.setBounds(161, 355, 170, 43);
		contentPane.add(textField_maSVUnder);
		
		textField_hoTen = new JTextField();
		textField_hoTen.setColumns(10);
		textField_hoTen.setBounds(161, 422, 170, 43);
		contentPane.add(textField_hoTen);
		
		textField_ngaySinh = new JTextField();
		textField_ngaySinh.setColumns(10);
		textField_ngaySinh.setBounds(161, 556, 170, 43);
		contentPane.add(textField_ngaySinh);
		
		JLabel label_gioiTinhUnder = new JLabel("Giới tính");
		label_gioiTinhUnder.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_gioiTinhUnder.setBounds(426, 355, 110, 42);
		contentPane.add(label_gioiTinhUnder);
		
		JLabel label_diem1Under = new JLabel("Điểm 1");
		label_diem1Under.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_diem1Under.setBounds(426, 422, 110, 42);
		contentPane.add(label_diem1Under);
		
		JLabel label_diem2Under = new JLabel("Điểm 2");
		label_diem2Under.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_diem2Under.setBounds(426, 489, 110, 42);
		contentPane.add(label_diem2Under);
		
		JLabel label_diem3Under = new JLabel("Điểm 3");
		label_diem3Under.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_diem3Under.setBounds(426, 556, 110, 42);
		contentPane.add(label_diem3Under);
		
		textField_diem1 = new JTextField();
		textField_diem1.setColumns(10);
		textField_diem1.setBounds(562, 422, 170, 43);
		contentPane.add(textField_diem1);
		
		textField_diem2 = new JTextField();
		textField_diem2.setColumns(10);
		textField_diem2.setBounds(562, 489, 170, 43);
		contentPane.add(textField_diem2);
		
		textField_diem3 = new JTextField();
		textField_diem3.setColumns(10);
		textField_diem3.setBounds(562, 556, 170, 43);
		contentPane.add(textField_diem3);
		
		rdbtn_nam = new JRadioButton("Nam");
		rdbtn_nam.setFont(new Font("Tahoma", Font.PLAIN, 20));
		rdbtn_nam.setBounds(562, 355, 71, 42);
		contentPane.add(rdbtn_nam);
		rdbtn_nam.setSelected(true);
		
		rdbtn_nu = new JRadioButton("Nữ");
		rdbtn_nu.setFont(new Font("Tahoma", Font.PLAIN, 20));
		rdbtn_nu.setBounds(647, 355, 71, 42);
		contentPane.add(rdbtn_nu);
		
		btngr = new ButtonGroup();
		btngr.add(rdbtn_nam);
		btngr.add(rdbtn_nu);
		
		ActionListener listener = new Listener(this);
		
		JButton btn_them = new JButton("Thêm");
		btn_them.addActionListener(listener);
		btn_them.setFont(new Font("Tahoma", Font.PLAIN, 20));
		btn_them.setBounds(21, 633, 127, 43);
		contentPane.add(btn_them);
		
		JButton btn_xoa = new JButton("Xóa");
		btn_xoa.addActionListener(listener);
		btn_xoa.setFont(new Font("Tahoma", Font.PLAIN, 20));
		btn_xoa.setBounds(595, 633, 127, 43);
		contentPane.add(btn_xoa);
		
		JButton btn_capNhat = new JButton("Cập nhật");
		btn_capNhat.addActionListener(listener);
		btn_capNhat.setFont(new Font("Tahoma", Font.PLAIN, 20));
		btn_capNhat.setBounds(215, 633, 127, 43);
		contentPane.add(btn_capNhat);
		
		JButton btn_luu = new JButton("Lưu");
		btn_luu.addActionListener(listener);
		btn_luu.setFont(new Font("Tahoma", Font.PLAIN, 20));
		btn_luu.setBounds(409, 633, 127, 43);
		contentPane.add(btn_luu);
		
		JSeparator separator_1_1 = new JSeparator();
		separator_1_1.setBounds(10, 615, 728, 2);
		contentPane.add(separator_1_1);
		
		comboBox_queQuanUnder = new JComboBox();
		comboBox_queQuanUnder.addItem("");
		for (Tinh tinh : listTinh) {
			comboBox_queQuanUnder.addItem(tinh.getTenTinh());
		}
		comboBox_queQuanUnder.setBounds(161, 488, 170, 43);
		contentPane.add(comboBox_queQuanUnder);
	}

	public void xoaForm() {
		textField_maSV.setText("");
		textField_maSVUnder.setText("");
		textField_hoTen.setText("");
		textField_ngaySinh.setText("");
		textField_diem1.setText("");
		textField_diem2.setText("");
		textField_diem3.setText("");
		comboBox_queQuanUnder.setSelectedIndex(-1);
		btngr.clearSelection();
	}

	public void themHoacCapNhatSV(SinhVien sv) {
		DefaultTableModel defaultTableModel = (DefaultTableModel) table.getModel();
		if (!this.model.kiemTraTonTai(sv)) {
			this.model.addSV(sv);
			defaultTableModel.addRow(new Object[]{
													sv.getMaSinhVien()+"", 
													sv.getTenSinhVien(),
													sv.getQueQuan().getTenTinh(),
													sv.getNgaySinh().getDate()+"/"+(sv.getNgaySinh().getMonth() + 1)+"/"+(sv.getNgaySinh().getYear()+1900),
													sv.isGioiTinh() ? "Nam" : "Nữ",
													sv.getDiemMon1()+"",
													sv.getDiemMon2()+"",
													sv.getDiemMon3()+""});
		}
		else {
			this.model.update(sv);
			int soDong = defaultTableModel.getRowCount();
			for (int i = 0; i < soDong; i++) {
				String id = defaultTableModel.getValueAt(soDong, 0)+"";
				if (id.equals(sv.getMaSinhVien()+"")) {
					defaultTableModel.getValueAt(sv.getMaSinhVien()+"", i, 0);
					defaultTableModel.getValueAt(sv.getTenSinhVien(), i, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
				}
			}
		}
	}

	public void hienThiThongTinSinhVienDangDuocChon() {
		DefaultTableModel defaultTableModel = (DefaultTableModel) table.getModel();
		int row = table.getSelectedRow();
		
		int maSV = Integer.valueOf(defaultTableModel.getValueAt(row, 0)+"");
		String tenSV = defaultTableModel.getValueAt(row, 1)+"";
		Tinh tinh = Tinh.getTinhByTen(defaultTableModel.getValueAt(row, 2)+"");
		String ngaySinh = defaultTableModel.getValueAt(row, 3)+"";
		String textGioiTinh = defaultTableModel.getValueAt(row, 4)+"";
		boolean gioiTinh = textGioiTinh.equals("Nam");
		float diemMon1 = Float.valueOf(defaultTableModel.getValueAt(row, 5)+"");
		float diemMon2 = Float.valueOf(defaultTableModel.getValueAt(row, 6)+"");
		float diemMon3 = Float.valueOf(defaultTableModel.getValueAt(row, 7)+"");
		
		this.textField_maSVUnder.setText(maSV+"");
		this.textField_hoTen.setText(tenSV+"");
		this.comboBox_queQuan.setSelectedItem(tinh.getTenTinh()+"");
		this.textField_ngaySinh.setText(ngaySinh+"");
		if (gioiTinh) {
			rdbtn_nam.setSelected(true);
		} else {
			rdbtn_nu.setSelected(false);
		}
		this.textField_diem1.setText(diemMon1+"");
		this.textField_diem2.setText(diemMon2+"");
		this.textField_diem3.setText(diemMon3+"");
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3063)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-03-14 23:38:47.756
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3063)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-03-14 23:38:47.757
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3063)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2023-03-14 23:38:49.899
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package View;

import java.awt.EventQueue;

import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.border.EmptyBorder;

import Model.QLSV_model;
import Model.SinhVien;
import Model.Tinh;

import javax.swing.JMenuBar;
import javax.swing.JMenu;
import javax.swing.JMenuItem;
import javax.swing.JSeparator;
import javax.swing.JLabel;
import java.awt.Font;
import javax.swing.JScrollPane;
import javax.swing.JComboBox;
import javax.swing.JTextField;
import javax.swing.ButtonGroup;
import javax.swing.JButton;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

import Controller.Listener;

import javax.swing.JRadioButton;
import java.awt.event.ActionListener;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.awt.event.ActionEvent;

public class view_QLSV extends JFrame {

	private JPanel contentPane;
	public QLSV_model model;
	private JTextField textField_maSV;
	private JTable table;
	public JTextField textField_maSVUnder;
	public JTextField textField_hoTen;
	public JTextField textField_ngaySinh;
	public JTextField textField_diem1;
	public JTextField textField_diem2;
	public JTextField textField_diem3;
	public JComboBox comboBox_queQuanUnder;
	private JComboBox comboBox_queQuan;
	public ButtonGroup btngr;
	public JRadioButton rdbtn_nam;
	public JRadioButton rdbtn_nu;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					view_QLSV frame = new view_QLSV();
					frame.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the frame.
	 */
	public view_QLSV() {
		model = new QLSV_model();
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setBounds(100, 100, 757, 759);
		setTitle("Chương trình quản lý sinh viên của Trần Phúc Khánh");
		
		JMenuBar menuBar = new JMenuBar();
		setJMenuBar(menuBar);
		
		JMenu menu_file = new JMenu("File");
		menuBar.add(menu_file);
		
		JMenuItem menuItem_open = new JMenuItem("Open");
		menu_file.add(menuItem_open);
		
		JMenuItem mntmClose = new JMenuItem("Close");
		menu_file.add(mntmClose);
		
		JSeparator separator = new JSeparator();
		menu_file.add(separator);
		
		JMenuItem menuItem_exit = new JMenuItem("Exit");
		menu_file.add(menuItem_exit);
		
		JMenu menu_about = new JMenu("About");
		menuBar.add(menu_about);
		
		JMenuItem menuItem_about_me = new JMenuItem("About me");
		menu_about.add(menuItem_about_me);
		contentPane = new JPanel();
		contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));

		setContentPane(contentPane);
		contentPane.setLayout(null);
		
		JLabel label_queQuan = new JLabel("Quê quán");
		label_queQuan.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_queQuan.setBounds(47, 40, 86, 42);
		contentPane.add(label_queQuan);
		
		comboBox_queQuan = new JComboBox();
		ArrayList<Tinh> listTinh = Tinh.getDS_Tinh();
		comboBox_queQuan.addItem("");
		for (Tinh tinh : listTinh) {
			comboBox_queQuan.addItem(tinh.getTenTinh());
		}
		comboBox_queQuan.setFont(new Font("Tahoma", Font.PLAIN, 15));
		comboBox_queQuan.setBounds(140, 40, 102, 43);
		contentPane.add(comboBox_queQuan);
		
		JLabel label_maSinhVien = new JLabel("Mã sinh viên");
		label_maSinhVien.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_maSinhVien.setBounds(306, 40, 110, 42);
		contentPane.add(label_maSinhVien);
		
		textField_maSV = new JTextField();
		textField_maSV.setBounds(426, 40, 102, 43);
		contentPane.add(textField_maSV);
		textField_maSV.setColumns(10);
		
		JButton button_timKiem = new JButton("Tìm kiếm");
		button_timKiem.setFont(new Font("Tahoma", Font.PLAIN, 20));
		button_timKiem.setBounds(591, 40, 127, 43);
		contentPane.add(button_timKiem);
		
		JSeparator separator_1 = new JSeparator();
		separator_1.setBounds(10, 102, 728, 2);
		contentPane.add(separator_1);
		
		JLabel label_danhSachSV = new JLabel("Danh sách SV");
		label_danhSachSV.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_danhSachSV.setBounds(26, 127, 122, 42);
		contentPane.add(label_danhSachSV);
		
		table = new JTable();
		table.setFont(new Font("Tahoma", Font.PLAIN, 10));
		table.setModel(new DefaultTableModel(
			new Object[][] {
			},
			new String[] {
				"Mã SV", "Họ tên", "Quê quán", "Ngày sinh", "Giới tính", "Điểm môn 1", "Điểm môn 2", "Điểm môn 3"
			}
		));
		
		JScrollPane scrollPane = new JScrollPane(table);
		scrollPane.setBounds(26, 179, 696, 92);
		contentPane.add(scrollPane);
		
		JLabel label_thongTinSV = new JLabel("Thông tin SV");
		label_thongTinSV.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_thongTinSV.setBounds(26, 303, 115, 42);
		contentPane.add(label_thongTinSV);
		
		JSeparator separator_2 = new JSeparator();
		separator_2.setBounds(10, 291, 728, 2);
		contentPane.add(separator_2);
		
		JLabel label_maSinhVienUnder = new JLabel("Mã sinh viên");
		label_maSinhVienUnder.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_maSinhVienUnder.setBounds(26, 355, 110, 42);
		contentPane.add(label_maSinhVienUnder);
		
		JLabel label_hoTenUnder = new JLabel("Họ tên");
		label_hoTenUnder.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_hoTenUnder.setBounds(26, 422, 110, 42);
		contentPane.add(label_hoTenUnder);
		
		JLabel label_queQuanUnder = new JLabel("Quê quán");
		label_queQuanUnder.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_queQuanUnder.setBounds(26, 489, 110, 42);
		contentPane.add(label_queQuanUnder);
		
		JLabel label_ngaySinhUnder = new JLabel("Ngày sinh");
		label_ngaySinhUnder.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_ngaySinhUnder.setBounds(26, 556, 110, 42);
		contentPane.add(label_ngaySinhUnder);
		
		textField_maSVUnder = new JTextField();
		textField_maSVUnder.setColumns(10);
		textField_maSVUnder.setBounds(161, 355, 170, 43);
		contentPane.add(textField_maSVUnder);
		
		textField_hoTen = new JTextField();
		textField_hoTen.setColumns(10);
		textField_hoTen.setBounds(161, 422, 170, 43);
		contentPane.add(textField_hoTen);
		
		textField_ngaySinh = new JTextField();
		textField_ngaySinh.setColumns(10);
		textField_ngaySinh.setBounds(161, 556, 170, 43);
		contentPane.add(textField_ngaySinh);
		
		JLabel label_gioiTinhUnder = new JLabel("Giới tính");
		label_gioiTinhUnder.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_gioiTinhUnder.setBounds(426, 355, 110, 42);
		contentPane.add(label_gioiTinhUnder);
		
		JLabel label_diem1Under = new JLabel("Điểm 1");
		label_diem1Under.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_diem1Under.setBounds(426, 422, 110, 42);
		contentPane.add(label_diem1Under);
		
		JLabel label_diem2Under = new JLabel("Điểm 2");
		label_diem2Under.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_diem2Under.setBounds(426, 489, 110, 42);
		contentPane.add(label_diem2Under);
		
		JLabel label_diem3Under = new JLabel("Điểm 3");
		label_diem3Under.setFont(new Font("Tahoma", Font.PLAIN, 20));
		label_diem3Under.setBounds(426, 556, 110, 42);
		contentPane.add(label_diem3Under);
		
		textField_diem1 = new JTextField();
		textField_diem1.setColumns(10);
		textField_diem1.setBounds(562, 422, 170, 43);
		contentPane.add(textField_diem1);
		
		textField_diem2 = new JTextField();
		textField_diem2.setColumns(10);
		textField_diem2.setBounds(562, 489, 170, 43);
		contentPane.add(textField_diem2);
		
		textField_diem3 = new JTextField();
		textField_diem3.setColumns(10);
		textField_diem3.setBounds(562, 556, 170, 43);
		contentPane.add(textField_diem3);
		
		rdbtn_nam = new JRadioButton("Nam");
		rdbtn_nam.setFont(new Font("Tahoma", Font.PLAIN, 20));
		rdbtn_nam.setBounds(562, 355, 71, 42);
		contentPane.add(rdbtn_nam);
		rdbtn_nam.setSelected(true);
		
		rdbtn_nu = new JRadioButton("Nữ");
		rdbtn_nu.setFont(new Font("Tahoma", Font.PLAIN, 20));
		rdbtn_nu.setBounds(647, 355, 71, 42);
		contentPane.add(rdbtn_nu);
		
		btngr = new ButtonGroup();
		btngr.add(rdbtn_nam);
		btngr.add(rdbtn_nu);
		
		ActionListener listener = new Listener(this);
		
		JButton btn_them = new JButton("Thêm");
		btn_them.addActionListener(listener);
		btn_them.setFont(new Font("Tahoma", Font.PLAIN, 20));
		btn_them.setBounds(21, 633, 127, 43);
		contentPane.add(btn_them);
		
		JButton btn_xoa = new JButton("Xóa");
		btn_xoa.addActionListener(listener);
		btn_xoa.setFont(new Font("Tahoma", Font.PLAIN, 20));
		btn_xoa.setBounds(595, 633, 127, 43);
		contentPane.add(btn_xoa);
		
		JButton btn_capNhat = new JButton("Cập nhật");
		btn_capNhat.addActionListener(listener);
		btn_capNhat.setFont(new Font("Tahoma", Font.PLAIN, 20));
		btn_capNhat.setBounds(215, 633, 127, 43);
		contentPane.add(btn_capNhat);
		
		JButton btn_luu = new JButton("Lưu");
		btn_luu.addActionListener(listener);
		btn_luu.setFont(new Font("Tahoma", Font.PLAIN, 20));
		btn_luu.setBounds(409, 633, 127, 43);
		contentPane.add(btn_luu);
		
		JSeparator separator_1_1 = new JSeparator();
		separator_1_1.setBounds(10, 615, 728, 2);
		contentPane.add(separator_1_1);
		
		comboBox_queQuanUnder = new JComboBox();
		comboBox_queQuanUnder.addItem("");
		for (Tinh tinh : listTinh) {
			comboBox_queQuanUnder.addItem(tinh.getTenTinh());
		}
		comboBox_queQuanUnder.setBounds(161, 488, 170, 43);
		contentPane.add(comboBox_queQuanUnder);
	}

	public void xoaForm() {
		textField_maSV.setText("");
		textField_maSVUnder.setText("");
		textField_hoTen.setText("");
		textField_ngaySinh.setText("");
		textField_diem1.setText("");
		textField_diem2.setText("");
		textField_diem3.setText("");
		comboBox_queQuanUnder.setSelectedIndex(-1);
		btngr.clearSelection();
	}

	public void themHoacCapNhatSV(SinhVien sv) {
		DefaultTableModel defaultTableModel = (DefaultTableModel) table.getModel();
		if (!this.model.kiemTraTonTai(sv)) {
			this.model.addSV(sv);
			defaultTableModel.addRow(new Object[]{
													sv.getMaSinhVien()+"", 
													sv.getTenSinhVien(),
													sv.getQueQuan().getTenTinh(),
													sv.getNgaySinh().getDate()+"/"+(sv.getNgaySinh().getMonth() + 1)+"/"+(sv.getNgaySinh().getYear()+1900),
													sv.isGioiTinh() ? "Nam" : "Nữ",
													sv.getDiemMon1()+"",
													sv.getDiemMon2()+"",
													sv.getDiemMon3()+""});
		}
		else {
			this.model.update(sv);
			int soDong = defaultTableModel.getRowCount();
			for (int i = 0; i < soDong; i++) {
				String id = defaultTableModel.getValueAt(soDong, 0)+"";
				if (id.equals(sv.getMaSinhVien()+"")) {
					defaultTableModel.getValueAt(sv.getMaSinhVien()+"", i, 0);
					defaultTableModel.getValueAt(sv.getTenSinhVien(), i, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
					defaultTableModel.getValueAt(soDong, 0)+""
				}
			}
		}
	}

	public void hienThiThongTinSinhVienDangDuocChon() {
		DefaultTableModel defaultTableModel = (DefaultTableModel) table.getModel();
		int row = table.getSelectedRow();
		
		int maSV = Integer.valueOf(defaultTableModel.getValueAt(row, 0)+"");
		String tenSV = defaultTableModel.getValueAt(row, 1)+"";
		Tinh tinh = Tinh.getTinhByTen(defaultTableModel.getValueAt(row, 2)+"");
		String ngaySinh = defaultTableModel.getValueAt(row, 3)+"";
		String textGioiTinh = defaultTableModel.getValueAt(row, 4)+"";
		boolean gioiTinh = textGioiTinh.equals("Nam");
		float diemMon1 = Float.valueOf(defaultTableModel.getValueAt(row, 5)+"");
		float diemMon2 = Float.valueOf(defaultTableModel.getValueAt(row, 6)+"");
		float diemMon3 = Float.valueOf(defaultTableModel.getValueAt(row, 7)+"");
		
		this.textField_maSVUnder.setText(maSV+"");
		this.textField_hoTen.setText(tenSV+"");
		this.comboBox_queQuan.setSelectedItem(tinh.getTenTinh()+"");
		this.textField_ngaySinh.setText(ngaySinh+"");
		if (gioiTinh) {
			rdbtn_nam.setSelected(true);
		} else {
			rdbtn_nu.setSelected(false);
		}
		this.textField_diem1.setText(diemMon1+"");
		this.textField_diem2.setText(diemMon2+"");
		this.textField_diem3.setText(diemMon3+"");
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2268)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2220)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3063)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3042)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2273)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3066)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)
